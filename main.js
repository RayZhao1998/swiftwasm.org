!function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=3)}([function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){"use strict";(function(t){function n(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)}function i(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}function o(t){var e="function"==typeof Symbol&&t[Symbol.iterator],r=0;return e?e.call(t):{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}}}function s(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;t=r.call(t);var n,i=[];try{for(;(void 0===e||0<e--)&&!(n=t.next()).done;)i.push(n.value)}catch(t){var o={error:t}}finally{try{n&&!n.done&&(r=t.return)&&r.call(t)}finally{if(o)throw o.error}}return i}function a(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(s(arguments[e]));return t}r.d(e,"a",(function(){return nr}));var u="undefined"!=typeof globalThis?globalThis:void 0!==t?t:{},f="undefined"!=typeof BigInt?BigInt:u.BigInt||Number,h=DataView;h.prototype.setBigUint64||(h.prototype.setBigUint64=function(t,e,r){if(e<Math.pow(2,32))var n=0;else{n=e.toString(2),e="";for(var i=0;i<64-n.length;i++)e+="0";e+=n,n=parseInt(e.substring(0,32),2),e=parseInt(e.substring(32),2)}this.setUint32(t+(r?0:4),e,r),this.setUint32(t+(r?4:0),n,r)},h.prototype.getBigUint64=function(t,e){var r=this.getUint32(t+(e?0:4),e);t=this.getUint32(t+(e?4:0),e),r=r.toString(2),t=t.toString(2),e="";for(var n=0;n<32-r.length;n++)e+="0";return f("0b"+t+(e+r))});var c=void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},l=[],p=[],d="undefined"!=typeof Uint8Array?Uint8Array:Array,y=!1;function g(){y=!0;for(var t=0;64>t;++t)l[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[t],p["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(t)]=t;p[45]=62,p[95]=63}function m(t,e,r){for(var n=[],i=e;i<r;i+=3)e=(t[i]<<16)+(t[i+1]<<8)+t[i+2],n.push(l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]);return n.join("")}function v(t){y||g();for(var e=t.length,r=e%3,n="",i=[],o=0,s=e-r;o<s;o+=16383)i.push(m(t,o,o+16383>s?s:o+16383));return 1===r?(t=t[e-1],n+=l[t>>2],n+=l[t<<4&63],n+="=="):2===r&&(t=(t[e-2]<<8)+t[e-1],n+=l[t>>10],n+=l[t>>4&63],n+=l[t<<2&63],n+="="),i.push(n),i.join("")}function w(t,e,r,n,i){var o=8*i-n-1,s=(1<<o)-1,a=s>>1,u=-7,f=r?-1:1,h=t[e+(i=r?i-1:0)];for(i+=f,r=h&(1<<-u)-1,h>>=-u,u+=o;0<u;r=256*r+t[e+i],i+=f,u-=8);for(o=r&(1<<-u)-1,r>>=-u,u+=n;0<u;o=256*o+t[e+i],i+=f,u-=8);if(0===r)r=1-a;else{if(r===s)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,n),r-=a}return(h?-1:1)*o*Math.pow(2,r-n)}function b(t,e,r,n,i,o){var s,a=8*o-i-1,u=(1<<a)-1,f=u>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0;o=n?0:o-1;var c=n?1:-1,l=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||1/0===e?(e=isNaN(e)?1:0,n=u):(n=Math.floor(Math.log(e)/Math.LN2),1>e*(s=Math.pow(2,-n))&&(n--,s*=2),2<=(e=1<=n+f?e+h/s:e+h*Math.pow(2,1-f))*s&&(n++,s/=2),n+f>=u?(e=0,n=u):1<=n+f?(e=(e*s-1)*Math.pow(2,i),n+=f):(e=e*Math.pow(2,f-1)*Math.pow(2,i),n=0));8<=i;t[r+o]=255&e,o+=c,e/=256,i-=8);for(n=n<<i|e,a+=i;0<a;t[r+o]=255&n,o+=c,n/=256,a-=8);t[r+o-c]|=128*l}var E={}.toString,_=Array.isArray||function(t){return"[object Array]"==E.call(t)};function S(t,e){if((R.TYPED_ARRAY_SUPPORT?2147483647:1073741823)<e)throw new RangeError("Invalid typed array length");return R.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=R.prototype:(null===t&&(t=new R(e)),t.length=e),t}function R(t,e,r){if(!(R.TYPED_ARRAY_SUPPORT||this instanceof R))return new R(t,e,r);if("number"==typeof t){if("string"==typeof e)throw Error("If encoding is specified then the first argument must be a string");return O(this,t)}return T(this,t,e,r)}function T(t,e,r,n){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer){if(e.byteLength,0>r||e.byteLength<r)throw new RangeError("'offset' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),R.TYPED_ARRAY_SUPPORT?(t=e).__proto__=R.prototype:t=I(t,e),t}if("string"==typeof e){if(n=t,"string"==typeof(t=r)&&""!==t||(t="utf8"),!R.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');return(e=(n=S(n,r=0|N(e,t))).write(e,t))!==r&&(n=n.slice(0,e)),n}return function(t,e){if(B(e)){var r=0|P(e.length);return 0===(t=S(t,r)).length||e.copy(t,0,0,r),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return(r="number"!=typeof e.length)||(r=(r=e.length)!=r),r?S(t,0):I(t,e);if("Buffer"===e.type&&_(e.data))return I(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function A(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(0>t)throw new RangeError('"size" argument must not be negative')}function O(t,e){if(A(e),t=S(t,0>e?0:0|P(e)),!R.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function I(t,e){var r=0>e.length?0:0|P(e.length);t=S(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function P(t){if(t>=(R.TYPED_ARRAY_SUPPORT?2147483647:1073741823))throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+(R.TYPED_ARRAY_SUPPORT?2147483647:1073741823).toString(16)+" bytes");return 0|t}function B(t){return!(null==t||!t._isBuffer)}function N(t,e){if(B(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return G(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return q(t).length;default:if(n)return G(t).length;e=(""+e).toLowerCase(),n=!0}}function k(t,e,r){var n=!1;if((void 0===e||0>e)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),0>=r)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":for(t=e,e=r,r=this.length,(!t||0>t)&&(t=0),(!e||0>e||e>r)&&(e=r),n="",r=t;r<e;++r)n=(t=n)+(n=16>(n=this[r])?"0"+n.toString(16):n.toString(16));return n;case"utf8":case"utf-8":return F(this,e,r);case"ascii":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(127&this[e]);return t;case"latin1":case"binary":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(this[e]);return t;case"base64":return e=0===e&&r===this.length?v(this):v(this.slice(e,r));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":for(e=this.slice(e,r),r="",t=0;t<e.length;t+=2)r+=String.fromCharCode(e[t]+256*e[t+1]);return r;default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function L(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function C(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):2147483647<r?r=2147483647:-2147483648>r&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),0>r&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(0>r){if(!i)return-1;r=0}if("string"==typeof e&&(e=R.from(e,n)),B(e))return 0===e.length?-1:U(t,e,r,n,i);if("number"==typeof e)return e&=255,R.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):U(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function U(t,e,r,n,i){function o(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}var s=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(2>t.length||2>e.length)return-1;s=2,a/=2,u/=2,r/=2}if(i)for(n=-1;r<a;r++)if(o(t,r)===o(e,-1===n?0:r-n)){if(-1===n&&(n=r),r-n+1===u)return n*s}else-1!==n&&(r-=r-n),n=-1;else for(r+u>a&&(r=a-u);0<=r;r--){for(a=!0,n=0;n<u;n++)if(o(t,r+n)!==o(e,n)){a=!1;break}if(a)return r}return-1}function F(t,e,r){r=Math.min(t.length,r);for(var n=[];e<r;){var i=t[e],o=null,s=239<i?4:223<i?3:191<i?2:1;if(e+s<=r)switch(s){case 1:128>i&&(o=i);break;case 2:var a=t[e+1];128==(192&a)&&(127<(i=(31&i)<<6|63&a)&&(o=i));break;case 3:a=t[e+1];var u=t[e+2];128==(192&a)&&128==(192&u)&&(2047<(i=(15&i)<<12|(63&a)<<6|63&u)&&(55296>i||57343<i)&&(o=i));break;case 4:a=t[e+1],u=t[e+2];var f=t[e+3];128==(192&a)&&128==(192&u)&&128==(192&f)&&(65535<(i=(15&i)<<18|(63&a)<<12|(63&u)<<6|63&f)&&1114112>i&&(o=i))}null===o?(o=65533,s=1):65535<o&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),e+=s}if((t=n.length)<=D)n=String.fromCharCode.apply(String,n);else{for(r="",e=0;e<t;)r+=String.fromCharCode.apply(String,n.slice(e,e+=D));n=r}return n}R.TYPED_ARRAY_SUPPORT=void 0===c.TYPED_ARRAY_SUPPORT||c.TYPED_ARRAY_SUPPORT,R.poolSize=8192,R._augment=function(t){return t.__proto__=R.prototype,t},R.from=function(t,e,r){return T(null,t,e,r)},R.TYPED_ARRAY_SUPPORT&&(R.prototype.__proto__=Uint8Array.prototype,R.__proto__=Uint8Array),R.alloc=function(t,e,r){return A(t),t=0>=t?S(null,t):void 0!==e?"string"==typeof r?S(null,t).fill(e,r):S(null,t).fill(e):S(null,t)},R.allocUnsafe=function(t){return O(null,t)},R.allocUnsafeSlow=function(t){return O(null,t)},R.isBuffer=function(t){return null!=t&&(!!t._isBuffer||K(t)||"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&K(t.slice(0,0)))},R.compare=function(t,e){if(!B(t)||!B(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},R.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},R.concat=function(t,e){if(!_(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return R.alloc(0);var r;if(void 0===e)for(r=e=0;r<t.length;++r)e+=t[r].length;e=R.allocUnsafe(e);var n=0;for(r=0;r<t.length;++r){var i=t[r];if(!B(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(e,n),n+=i.length}return e},R.byteLength=N,R.prototype._isBuffer=!0,R.prototype.swap16=function(){var t=this.length;if(0!=t%2)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)L(this,e,e+1);return this},R.prototype.swap32=function(){var t=this.length;if(0!=t%4)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)L(this,e,e+3),L(this,e+1,e+2);return this},R.prototype.swap64=function(){var t=this.length;if(0!=t%8)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)L(this,e,e+7),L(this,e+1,e+6),L(this,e+2,e+5),L(this,e+3,e+4);return this},R.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?F(this,0,t):k.apply(this,arguments)},R.prototype.equals=function(t){if(!B(t))throw new TypeError("Argument must be a Buffer");return this===t||0===R.compare(this,t)},R.prototype.inspect=function(){var t="";return 0<this.length&&(t=this.toString("hex",0,50).match(/.{2}/g).join(" "),50<this.length&&(t+=" ... ")),"<Buffer "+t+">"},R.prototype.compare=function(t,e,r,n,i){if(!B(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),0>e||r>t.length||0>n||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;var o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0),a=Math.min(o,s);for(n=this.slice(n,i),t=t.slice(e,r),e=0;e<a;++e)if(n[e]!==t[e]){o=n[e],s=t[e];break}return o<s?-1:s<o?1:0},R.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},R.prototype.indexOf=function(t,e,r){return C(this,t,e,r,!0)},R.prototype.lastIndexOf=function(t,e,r){return C(this,t,e,r,!1)},R.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),0<t.length&&(0>r||0>e)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");for(n||(n="utf8"),i=!1;;)switch(n){case"hex":t:{if(e=Number(e)||0,n=this.length-e,r?(r=Number(r))>n&&(r=n):r=n,0!=(n=t.length)%2)throw new TypeError("Invalid hex string");for(r>n/2&&(r=n/2),n=0;n<r;++n){if(i=parseInt(t.substr(2*n,2),16),isNaN(i)){t=n;break t}this[e+n]=i}t=n}return t;case"utf8":case"utf-8":return H(G(t,this.length-e),this,e,r);case"ascii":return H(V(t),this,e,r);case"latin1":case"binary":return H(V(t),this,e,r);case"base64":return H(q(t),this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":n=t,i=this.length-e;for(var o=[],s=0;s<n.length&&!(0>(i-=2));++s){var a=n.charCodeAt(s);t=a>>8,a%=256,o.push(a),o.push(t)}return H(o,this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},R.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var D=4096;function M(t,e,r){if(0!=t%1||0>t)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function x(t,e,r,n,i,o){if(!B(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function Y(t,e,r,n){0>e&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-r,2);i<o;++i)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function j(t,e,r,n){0>e&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-r,4);i<o;++i)t[r+i]=e>>>8*(n?i:3-i)&255}function W(t,e,r,n){if(r+n>t.length)throw new RangeError("Index out of range");if(0>r)throw new RangeError("Index out of range")}R.prototype.slice=function(t,e){var r=this.length;if(0>(t=~~t)?0>(t+=r)&&(t=0):t>r&&(t=r),0>(e=void 0===e?r:~~e)?0>(e+=r)&&(e=0):e>r&&(e=r),e<t&&(e=t),R.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,e)).__proto__=R.prototype;else{e=new R(r=e-t,void 0);for(var n=0;n<r;++n)e[n]=this[n+t]}return e},R.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||M(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r},R.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||M(t,e,this.length),r=this[t+--e];for(var n=1;0<e&&(n*=256);)r+=this[t+--e]*n;return r},R.prototype.readUInt8=function(t,e){return e||M(t,1,this.length),this[t]},R.prototype.readUInt16LE=function(t,e){return e||M(t,2,this.length),this[t]|this[t+1]<<8},R.prototype.readUInt16BE=function(t,e){return e||M(t,2,this.length),this[t]<<8|this[t+1]},R.prototype.readUInt32LE=function(t,e){return e||M(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},R.prototype.readUInt32BE=function(t,e){return e||M(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},R.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||M(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r>=128*n&&(r-=Math.pow(2,8*e)),r},R.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||M(t,e,this.length),r=e;for(var n=1,i=this[t+--r];0<r&&(n*=256);)i+=this[t+--r]*n;return i>=128*n&&(i-=Math.pow(2,8*e)),i},R.prototype.readInt8=function(t,e){return e||M(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},R.prototype.readInt16LE=function(t,e){return e||M(t,2,this.length),32768&(t=this[t]|this[t+1]<<8)?4294901760|t:t},R.prototype.readInt16BE=function(t,e){return e||M(t,2,this.length),32768&(t=this[t+1]|this[t]<<8)?4294901760|t:t},R.prototype.readInt32LE=function(t,e){return e||M(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},R.prototype.readInt32BE=function(t,e){return e||M(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},R.prototype.readFloatLE=function(t,e){return e||M(t,4,this.length),w(this,t,!0,23,4)},R.prototype.readFloatBE=function(t,e){return e||M(t,4,this.length),w(this,t,!1,23,4)},R.prototype.readDoubleLE=function(t,e){return e||M(t,8,this.length),w(this,t,!0,52,8)},R.prototype.readDoubleBE=function(t,e){return e||M(t,8,this.length),w(this,t,!1,52,8)},R.prototype.writeUIntLE=function(t,e,r,n){t=+t,e|=0,r|=0,n||x(this,t,e,r,Math.pow(2,8*r)-1,0),n=1;var i=0;for(this[e]=255&t;++i<r&&(n*=256);)this[e+i]=t/n&255;return e+r},R.prototype.writeUIntBE=function(t,e,r,n){t=+t,e|=0,r|=0,n||x(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)this[e+n]=t/i&255;return e+r},R.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,1,255,0),R.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},R.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,2,65535,0),R.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):Y(this,t,e,!0),e+2},R.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,2,65535,0),R.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):Y(this,t,e,!1),e+2},R.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,4,4294967295,0),R.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):j(this,t,e,!0),e+4},R.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,4,4294967295,0),R.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):j(this,t,e,!1),e+4},R.prototype.writeIntLE=function(t,e,r,n){t=+t,e|=0,n||x(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n),n=0;var i=1,o=0;for(this[e]=255&t;++n<r&&(i*=256);)0>t&&0===o&&0!==this[e+n-1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},R.prototype.writeIntBE=function(t,e,r,n){t=+t,e|=0,n||x(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n);var i=1,o=0;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)0>t&&0===o&&0!==this[e+n+1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},R.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,1,127,-128),R.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),0>t&&(t=255+t+1),this[e]=255&t,e+1},R.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,2,32767,-32768),R.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):Y(this,t,e,!0),e+2},R.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,2,32767,-32768),R.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):Y(this,t,e,!1),e+2},R.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,4,2147483647,-2147483648),R.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):j(this,t,e,!0),e+4},R.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||x(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),R.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):j(this,t,e,!1),e+4},R.prototype.writeFloatLE=function(t,e,r){return r||W(this,0,e,4),b(this,t,e,!0,23,4),e+4},R.prototype.writeFloatBE=function(t,e,r){return r||W(this,0,e,4),b(this,t,e,!1,23,4),e+4},R.prototype.writeDoubleLE=function(t,e,r){return r||W(this,0,e,8),b(this,t,e,!0,52,8),e+8},R.prototype.writeDoubleBE=function(t,e,r){return r||W(this,0,e,8),b(this,t,e,!1,52,8),e+8},R.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),0<n&&n<r&&(n=r),n===r||0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>n)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;if(this===t&&r<e&&e<n)for(n=i-1;0<=n;--n)t[n+e]=this[n+r];else if(1e3>i||!R.TYPED_ARRAY_SUPPORT)for(n=0;n<i;++n)t[n+e]=this[n+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+i),e);return i},R.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var i=t.charCodeAt(0);256>i&&(t=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!R.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(0>e||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(n=e;n<r;++n)this[n]=t;else for(i=(t=B(t)?t:G(new R(t,n).toString())).length,n=0;n<r-e;++n)this[n+e]=t[n%i];return this};var z=/[^+\/0-9A-Za-z-_]/g;function G(t,e){e=e||1/0;for(var r,n=t.length,i=null,o=[],s=0;s<n;++s){if(55295<(r=t.charCodeAt(s))&&57344>r){if(!i){if(56319<r){-1<(e-=3)&&o.push(239,191,189);continue}if(s+1===n){-1<(e-=3)&&o.push(239,191,189);continue}i=r;continue}if(56320>r){-1<(e-=3)&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&-1<(e-=3)&&o.push(239,191,189);if(i=null,128>r){if(0>--e)break;o.push(r)}else if(2048>r){if(0>(e-=2))break;o.push(r>>6|192,63&r|128)}else if(65536>r){if(0>(e-=3))break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(1114112>r))throw Error("Invalid code point");if(0>(e-=4))break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function V(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}function q(t){if(2>(t=(t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")).replace(z,"")).length)t="";else for(;0!=t.length%4;)t+="=";y||g();var e=t.length;if(0<e%4)throw Error("Invalid string. Length must be a multiple of 4");var r="="===t[e-2]?2:"="===t[e-1]?1:0,n=new d(3*e/4-r),i=0<r?e-4:e,o=0;for(e=0;e<i;e+=4){var s=p[t.charCodeAt(e)]<<18|p[t.charCodeAt(e+1)]<<12|p[t.charCodeAt(e+2)]<<6|p[t.charCodeAt(e+3)];n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s}return 2===r?(s=p[t.charCodeAt(e)]<<2|p[t.charCodeAt(e+1)]>>4,n[o++]=255&s):1===r&&(s=p[t.charCodeAt(e)]<<10|p[t.charCodeAt(e+1)]<<4|p[t.charCodeAt(e+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}function H(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function K(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}var J=R,X="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{};function Z(t,e){return t(e={exports:{}},e.exports),e.exports}function $(){throw Error("setTimeout has not been defined")}function Q(){throw Error("clearTimeout has not been defined")}var tt=$,et=Q;function rt(t){if(tt===setTimeout)return setTimeout(t,0);if((tt===$||!tt)&&setTimeout)return tt=setTimeout,setTimeout(t,0);try{return tt(t,0)}catch(e){try{return tt.call(null,t,0)}catch(e){return tt.call(this,t,0)}}}"function"==typeof c.setTimeout&&(tt=setTimeout),"function"==typeof c.clearTimeout&&(et=clearTimeout);var nt,it=[],ot=!1,st=-1;function at(){ot&&nt&&(ot=!1,nt.length?it=nt.concat(it):st=-1,it.length&&ut())}function ut(){if(!ot){var t=rt(at);ot=!0;for(var e=it.length;e;){for(nt=it,it=[];++st<e;)nt&&nt[st].run();st=-1,e=it.length}nt=null,ot=!1,function(t){if(et===clearTimeout)return clearTimeout(t);if((et===Q||!et)&&clearTimeout)return et=clearTimeout,clearTimeout(t);try{et(t)}catch(e){try{return et.call(null,t)}catch(e){return et.call(this,t)}}}(t)}}function ft(t){var e=Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];it.push(new ht(t,e)),1!==it.length||ot||rt(ut)}function ht(t,e){this.fun=t,this.array=e}ht.prototype.run=function(){this.fun.apply(null,this.array)};var ct=c.performance||{},lt=(ct.now||ct.mozNow||ct.msNow||ct.oNow||ct.webkitNow,new Date,function(){return"/"}),pt=[],dt=[],yt="undefined"!=typeof Uint8Array?Uint8Array:Array,gt=!1;function mt(){gt=!0;for(var t=0;64>t;++t)pt[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[t],dt["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(t)]=t;dt[45]=62,dt[95]=63}function vt(t,e,r){for(var n=[],i=e;i<r;i+=3)e=(t[i]<<16)+(t[i+1]<<8)+t[i+2],n.push(pt[e>>18&63]+pt[e>>12&63]+pt[e>>6&63]+pt[63&e]);return n.join("")}function wt(t){gt||mt();for(var e=t.length,r=e%3,n="",i=[],o=0,s=e-r;o<s;o+=16383)i.push(vt(t,o,o+16383>s?s:o+16383));return 1===r?(t=t[e-1],n+=pt[t>>2],n+=pt[t<<4&63],n+="=="):2===r&&(t=(t[e-2]<<8)+t[e-1],n+=pt[t>>10],n+=pt[t>>4&63],n+=pt[t<<2&63],n+="="),i.push(n),i.join("")}function bt(t,e,r,n,i){var o=8*i-n-1,s=(1<<o)-1,a=s>>1,u=-7,f=r?-1:1,h=t[e+(i=r?i-1:0)];for(i+=f,r=h&(1<<-u)-1,h>>=-u,u+=o;0<u;r=256*r+t[e+i],i+=f,u-=8);for(o=r&(1<<-u)-1,r>>=-u,u+=n;0<u;o=256*o+t[e+i],i+=f,u-=8);if(0===r)r=1-a;else{if(r===s)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,n),r-=a}return(h?-1:1)*o*Math.pow(2,r-n)}function Et(t,e,r,n,i,o){var s,a=8*o-i-1,u=(1<<a)-1,f=u>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0;o=n?0:o-1;var c=n?1:-1,l=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||1/0===e?(e=isNaN(e)?1:0,n=u):(n=Math.floor(Math.log(e)/Math.LN2),1>e*(s=Math.pow(2,-n))&&(n--,s*=2),2<=(e=1<=n+f?e+h/s:e+h*Math.pow(2,1-f))*s&&(n++,s/=2),n+f>=u?(e=0,n=u):1<=n+f?(e=(e*s-1)*Math.pow(2,i),n+=f):(e=e*Math.pow(2,f-1)*Math.pow(2,i),n=0));8<=i;t[r+o]=255&e,o+=c,e/=256,i-=8);for(n=n<<i|e,a+=i;0<a;t[r+o]=255&n,o+=c,n/=256,a-=8);t[r+o-c]|=128*l}var _t={}.toString,St=Array.isArray||function(t){return"[object Array]"==_t.call(t)};At.TYPED_ARRAY_SUPPORT=void 0===c.TYPED_ARRAY_SUPPORT||c.TYPED_ARRAY_SUPPORT;var Rt=At.TYPED_ARRAY_SUPPORT?2147483647:1073741823;function Tt(t,e){if((At.TYPED_ARRAY_SUPPORT?2147483647:1073741823)<e)throw new RangeError("Invalid typed array length");return At.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=At.prototype:(null===t&&(t=new At(e)),t.length=e),t}function At(t,e,r){if(!(At.TYPED_ARRAY_SUPPORT||this instanceof At))return new At(t,e,r);if("number"==typeof t){if("string"==typeof e)throw Error("If encoding is specified then the first argument must be a string");return Pt(this,t)}return Ot(this,t,e,r)}function Ot(t,e,r,n){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer){if(e.byteLength,0>r||e.byteLength<r)throw new RangeError("'offset' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),At.TYPED_ARRAY_SUPPORT?(t=e).__proto__=At.prototype:t=Bt(t,e),t}if("string"==typeof e){if(n=t,"string"==typeof(t=r)&&""!==t||(t="utf8"),!At.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');return(e=(n=Tt(n,r=0|Lt(e,t))).write(e,t))!==r&&(n=n.slice(0,e)),n}return function(t,e){if(kt(e)){var r=0|Nt(e.length);return 0===(t=Tt(t,r)).length||e.copy(t,0,0,r),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return(r="number"!=typeof e.length)||(r=(r=e.length)!=r),r?Tt(t,0):Bt(t,e);if("Buffer"===e.type&&St(e.data))return Bt(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function It(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(0>t)throw new RangeError('"size" argument must not be negative')}function Pt(t,e){if(It(e),t=Tt(t,0>e?0:0|Nt(e)),!At.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function Bt(t,e){var r=0>e.length?0:0|Nt(e.length);t=Tt(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function Nt(t){if(t>=(At.TYPED_ARRAY_SUPPORT?2147483647:1073741823))throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+(At.TYPED_ARRAY_SUPPORT?2147483647:1073741823).toString(16)+" bytes");return 0|t}function kt(t){return!(null==t||!t._isBuffer)}function Lt(t,e){if(kt(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return qt(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Kt(t).length;default:if(n)return qt(t).length;e=(""+e).toLowerCase(),n=!0}}function Ct(t,e,r){var n=!1;if((void 0===e||0>e)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),0>=r)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":for(t=e,e=r,r=this.length,(!t||0>t)&&(t=0),(!e||0>e||e>r)&&(e=r),n="",r=t;r<e;++r)n=(t=n)+(n=16>(n=this[r])?"0"+n.toString(16):n.toString(16));return n;case"utf8":case"utf-8":return Mt(this,e,r);case"ascii":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(127&this[e]);return t;case"latin1":case"binary":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(this[e]);return t;case"base64":return e=0===e&&r===this.length?wt(this):wt(this.slice(e,r));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":for(e=this.slice(e,r),r="",t=0;t<e.length;t+=2)r+=String.fromCharCode(e[t]+256*e[t+1]);return r;default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function Ut(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function Ft(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):2147483647<r?r=2147483647:-2147483648>r&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),0>r&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(0>r){if(!i)return-1;r=0}if("string"==typeof e&&(e=At.from(e,n)),kt(e))return 0===e.length?-1:Dt(t,e,r,n,i);if("number"==typeof e)return e&=255,At.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):Dt(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function Dt(t,e,r,n,i){function o(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}var s=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(2>t.length||2>e.length)return-1;s=2,a/=2,u/=2,r/=2}if(i)for(n=-1;r<a;r++)if(o(t,r)===o(e,-1===n?0:r-n)){if(-1===n&&(n=r),r-n+1===u)return n*s}else-1!==n&&(r-=r-n),n=-1;else for(r+u>a&&(r=a-u);0<=r;r--){for(a=!0,n=0;n<u;n++)if(o(t,r+n)!==o(e,n)){a=!1;break}if(a)return r}return-1}function Mt(t,e,r){r=Math.min(t.length,r);for(var n=[];e<r;){var i=t[e],o=null,s=239<i?4:223<i?3:191<i?2:1;if(e+s<=r)switch(s){case 1:128>i&&(o=i);break;case 2:var a=t[e+1];128==(192&a)&&(127<(i=(31&i)<<6|63&a)&&(o=i));break;case 3:a=t[e+1];var u=t[e+2];128==(192&a)&&128==(192&u)&&(2047<(i=(15&i)<<12|(63&a)<<6|63&u)&&(55296>i||57343<i)&&(o=i));break;case 4:a=t[e+1],u=t[e+2];var f=t[e+3];128==(192&a)&&128==(192&u)&&128==(192&f)&&(65535<(i=(15&i)<<18|(63&a)<<12|(63&u)<<6|63&f)&&1114112>i&&(o=i))}null===o?(o=65533,s=1):65535<o&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),e+=s}if((t=n.length)<=xt)n=String.fromCharCode.apply(String,n);else{for(r="",e=0;e<t;)r+=String.fromCharCode.apply(String,n.slice(e,e+=xt));n=r}return n}At.poolSize=8192,At._augment=function(t){return t.__proto__=At.prototype,t},At.from=function(t,e,r){return Ot(null,t,e,r)},At.TYPED_ARRAY_SUPPORT&&(At.prototype.__proto__=Uint8Array.prototype,At.__proto__=Uint8Array),At.alloc=function(t,e,r){return It(t),t=0>=t?Tt(null,t):void 0!==e?"string"==typeof r?Tt(null,t).fill(e,r):Tt(null,t).fill(e):Tt(null,t)},At.allocUnsafe=function(t){return Pt(null,t)},At.allocUnsafeSlow=function(t){return Pt(null,t)},At.isBuffer=Xt,At.compare=function(t,e){if(!kt(t)||!kt(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},At.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},At.concat=function(t,e){if(!St(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return At.alloc(0);var r;if(void 0===e)for(r=e=0;r<t.length;++r)e+=t[r].length;e=At.allocUnsafe(e);var n=0;for(r=0;r<t.length;++r){var i=t[r];if(!kt(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(e,n),n+=i.length}return e},At.byteLength=Lt,At.prototype._isBuffer=!0,At.prototype.swap16=function(){var t=this.length;if(0!=t%2)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)Ut(this,e,e+1);return this},At.prototype.swap32=function(){var t=this.length;if(0!=t%4)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)Ut(this,e,e+3),Ut(this,e+1,e+2);return this},At.prototype.swap64=function(){var t=this.length;if(0!=t%8)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)Ut(this,e,e+7),Ut(this,e+1,e+6),Ut(this,e+2,e+5),Ut(this,e+3,e+4);return this},At.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?Mt(this,0,t):Ct.apply(this,arguments)},At.prototype.equals=function(t){if(!kt(t))throw new TypeError("Argument must be a Buffer");return this===t||0===At.compare(this,t)},At.prototype.inspect=function(){var t="";return 0<this.length&&(t=this.toString("hex",0,50).match(/.{2}/g).join(" "),50<this.length&&(t+=" ... ")),"<Buffer "+t+">"},At.prototype.compare=function(t,e,r,n,i){if(!kt(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),0>e||r>t.length||0>n||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;var o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0),a=Math.min(o,s);for(n=this.slice(n,i),t=t.slice(e,r),e=0;e<a;++e)if(n[e]!==t[e]){o=n[e],s=t[e];break}return o<s?-1:s<o?1:0},At.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},At.prototype.indexOf=function(t,e,r){return Ft(this,t,e,r,!0)},At.prototype.lastIndexOf=function(t,e,r){return Ft(this,t,e,r,!1)},At.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),0<t.length&&(0>r||0>e)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");for(n||(n="utf8"),i=!1;;)switch(n){case"hex":t:{if(e=Number(e)||0,n=this.length-e,r?(r=Number(r))>n&&(r=n):r=n,0!=(n=t.length)%2)throw new TypeError("Invalid hex string");for(r>n/2&&(r=n/2),n=0;n<r;++n){if(i=parseInt(t.substr(2*n,2),16),isNaN(i)){t=n;break t}this[e+n]=i}t=n}return t;case"utf8":case"utf-8":return Jt(qt(t,this.length-e),this,e,r);case"ascii":return Jt(Ht(t),this,e,r);case"latin1":case"binary":return Jt(Ht(t),this,e,r);case"base64":return Jt(Kt(t),this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":n=t,i=this.length-e;for(var o=[],s=0;s<n.length&&!(0>(i-=2));++s){var a=n.charCodeAt(s);t=a>>8,a%=256,o.push(a),o.push(t)}return Jt(o,this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},At.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var xt=4096;function Yt(t,e,r){if(0!=t%1||0>t)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function jt(t,e,r,n,i,o){if(!kt(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function Wt(t,e,r,n){0>e&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-r,2);i<o;++i)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function zt(t,e,r,n){0>e&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-r,4);i<o;++i)t[r+i]=e>>>8*(n?i:3-i)&255}function Gt(t,e,r,n){if(r+n>t.length)throw new RangeError("Index out of range");if(0>r)throw new RangeError("Index out of range")}At.prototype.slice=function(t,e){var r=this.length;if(0>(t=~~t)?0>(t+=r)&&(t=0):t>r&&(t=r),0>(e=void 0===e?r:~~e)?0>(e+=r)&&(e=0):e>r&&(e=r),e<t&&(e=t),At.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,e)).__proto__=At.prototype;else{e=new At(r=e-t,void 0);for(var n=0;n<r;++n)e[n]=this[n+t]}return e},At.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||Yt(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r},At.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||Yt(t,e,this.length),r=this[t+--e];for(var n=1;0<e&&(n*=256);)r+=this[t+--e]*n;return r},At.prototype.readUInt8=function(t,e){return e||Yt(t,1,this.length),this[t]},At.prototype.readUInt16LE=function(t,e){return e||Yt(t,2,this.length),this[t]|this[t+1]<<8},At.prototype.readUInt16BE=function(t,e){return e||Yt(t,2,this.length),this[t]<<8|this[t+1]},At.prototype.readUInt32LE=function(t,e){return e||Yt(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},At.prototype.readUInt32BE=function(t,e){return e||Yt(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},At.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||Yt(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r>=128*n&&(r-=Math.pow(2,8*e)),r},At.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||Yt(t,e,this.length),r=e;for(var n=1,i=this[t+--r];0<r&&(n*=256);)i+=this[t+--r]*n;return i>=128*n&&(i-=Math.pow(2,8*e)),i},At.prototype.readInt8=function(t,e){return e||Yt(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},At.prototype.readInt16LE=function(t,e){return e||Yt(t,2,this.length),32768&(t=this[t]|this[t+1]<<8)?4294901760|t:t},At.prototype.readInt16BE=function(t,e){return e||Yt(t,2,this.length),32768&(t=this[t+1]|this[t]<<8)?4294901760|t:t},At.prototype.readInt32LE=function(t,e){return e||Yt(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},At.prototype.readInt32BE=function(t,e){return e||Yt(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},At.prototype.readFloatLE=function(t,e){return e||Yt(t,4,this.length),bt(this,t,!0,23,4)},At.prototype.readFloatBE=function(t,e){return e||Yt(t,4,this.length),bt(this,t,!1,23,4)},At.prototype.readDoubleLE=function(t,e){return e||Yt(t,8,this.length),bt(this,t,!0,52,8)},At.prototype.readDoubleBE=function(t,e){return e||Yt(t,8,this.length),bt(this,t,!1,52,8)},At.prototype.writeUIntLE=function(t,e,r,n){t=+t,e|=0,r|=0,n||jt(this,t,e,r,Math.pow(2,8*r)-1,0),n=1;var i=0;for(this[e]=255&t;++i<r&&(n*=256);)this[e+i]=t/n&255;return e+r},At.prototype.writeUIntBE=function(t,e,r,n){t=+t,e|=0,r|=0,n||jt(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)this[e+n]=t/i&255;return e+r},At.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,1,255,0),At.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},At.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,2,65535,0),At.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):Wt(this,t,e,!0),e+2},At.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,2,65535,0),At.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):Wt(this,t,e,!1),e+2},At.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,4,4294967295,0),At.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):zt(this,t,e,!0),e+4},At.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,4,4294967295,0),At.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):zt(this,t,e,!1),e+4},At.prototype.writeIntLE=function(t,e,r,n){t=+t,e|=0,n||jt(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n),n=0;var i=1,o=0;for(this[e]=255&t;++n<r&&(i*=256);)0>t&&0===o&&0!==this[e+n-1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},At.prototype.writeIntBE=function(t,e,r,n){t=+t,e|=0,n||jt(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n);var i=1,o=0;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)0>t&&0===o&&0!==this[e+n+1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},At.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,1,127,-128),At.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),0>t&&(t=255+t+1),this[e]=255&t,e+1},At.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,2,32767,-32768),At.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):Wt(this,t,e,!0),e+2},At.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,2,32767,-32768),At.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):Wt(this,t,e,!1),e+2},At.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,4,2147483647,-2147483648),At.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):zt(this,t,e,!0),e+4},At.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||jt(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),At.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):zt(this,t,e,!1),e+4},At.prototype.writeFloatLE=function(t,e,r){return r||Gt(this,0,e,4),Et(this,t,e,!0,23,4),e+4},At.prototype.writeFloatBE=function(t,e,r){return r||Gt(this,0,e,4),Et(this,t,e,!1,23,4),e+4},At.prototype.writeDoubleLE=function(t,e,r){return r||Gt(this,0,e,8),Et(this,t,e,!0,52,8),e+8},At.prototype.writeDoubleBE=function(t,e,r){return r||Gt(this,0,e,8),Et(this,t,e,!1,52,8),e+8},At.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),0<n&&n<r&&(n=r),n===r||0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>n)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;if(this===t&&r<e&&e<n)for(n=i-1;0<=n;--n)t[n+e]=this[n+r];else if(1e3>i||!At.TYPED_ARRAY_SUPPORT)for(n=0;n<i;++n)t[n+e]=this[n+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+i),e);return i},At.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var i=t.charCodeAt(0);256>i&&(t=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!At.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(0>e||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(n=e;n<r;++n)this[n]=t;else for(i=(t=kt(t)?t:qt(new At(t,n).toString())).length,n=0;n<r-e;++n)this[n+e]=t[n%i];return this};var Vt=/[^+\/0-9A-Za-z-_]/g;function qt(t,e){e=e||1/0;for(var r,n=t.length,i=null,o=[],s=0;s<n;++s){if(55295<(r=t.charCodeAt(s))&&57344>r){if(!i){if(56319<r){-1<(e-=3)&&o.push(239,191,189);continue}if(s+1===n){-1<(e-=3)&&o.push(239,191,189);continue}i=r;continue}if(56320>r){-1<(e-=3)&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&-1<(e-=3)&&o.push(239,191,189);if(i=null,128>r){if(0>--e)break;o.push(r)}else if(2048>r){if(0>(e-=2))break;o.push(r>>6|192,63&r|128)}else if(65536>r){if(0>(e-=3))break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(1114112>r))throw Error("Invalid code point");if(0>(e-=4))break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function Ht(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}function Kt(t){if(2>(t=(t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")).replace(Vt,"")).length)t="";else for(;0!=t.length%4;)t+="=";gt||mt();var e=t.length;if(0<e%4)throw Error("Invalid string. Length must be a multiple of 4");var r="="===t[e-2]?2:"="===t[e-1]?1:0,n=new yt(3*e/4-r),i=0<r?e-4:e,o=0;for(e=0;e<i;e+=4){var s=dt[t.charCodeAt(e)]<<18|dt[t.charCodeAt(e+1)]<<12|dt[t.charCodeAt(e+2)]<<6|dt[t.charCodeAt(e+3)];n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s}return 2===r?(s=dt[t.charCodeAt(e)]<<2|dt[t.charCodeAt(e+1)]>>4,n[o++]=255&s):1===r&&(s=dt[t.charCodeAt(e)]<<10|dt[t.charCodeAt(e+1)]<<4|dt[t.charCodeAt(e+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}function Jt(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function Xt(t){return null!=t&&(!!t._isBuffer||Zt(t)||"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&Zt(t.slice(0,0)))}function Zt(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}var $t=Object.freeze({__proto__:null,INSPECT_MAX_BYTES:50,kMaxLength:Rt,Buffer:At,SlowBuffer:function(t){return+t!=t&&(t=0),At.alloc(+t)},isBuffer:Xt}),Qt=Z((function(t,e){function r(t,e){for(var r in t)e[r]=t[r]}function n(t,e,r){return i(t,e,r)}var i=$t.Buffer;i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=$t:(r($t,e),e.Buffer=n),n.prototype=Object.create(i.prototype),r(i,n),n.from=function(t,e,r){if("number"==typeof t)throw new TypeError("Argument must not be a number");return i(t,e,r)},n.alloc=function(t,e,r){if("number"!=typeof t)throw new TypeError("Argument must be a number");return t=i(t),void 0!==e?"string"==typeof r?t.fill(e,r):t.fill(e):t.fill(0),t},n.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i(t)},n.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return $t.SlowBuffer(t)}})),te=Z((function(t,e){function r(){throw Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}function n(t,e){if("number"!=typeof t||t!=t)throw new TypeError("offset must be a number");if(t>f||0>t)throw new TypeError("offset must be a uint32");if(t>a||t>e)throw new RangeError("offset out of range")}function i(t,e,r){if("number"!=typeof t||t!=t)throw new TypeError("size must be a number");if(t>f||0>t)throw new TypeError("size must be a uint32");if(t+e>r||t>a)throw new RangeError("buffer too small")}function o(t,e,r,n){if(e=new Uint8Array(t.buffer,e,r),u.getRandomValues(e),!n)return t;ft((function(){n(null,t)}))}var s=Qt.Buffer,a=Qt.kMaxLength,u=X.crypto||X.msCrypto,f=Math.pow(2,32)-1;u&&u.getRandomValues?(e.randomFill=function(t,e,r,a){if(!(s.isBuffer(t)||t instanceof X.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof e)a=e,e=0,r=t.length;else if("function"==typeof r)a=r,r=t.length-e;else if("function"!=typeof a)throw new TypeError('"cb" argument must be a function');return n(e,t.length),i(r,e,t.length),o(t,e,r,a)},e.randomFillSync=function(t,e,r){if(void 0===e&&(e=0),!(s.isBuffer(t)||t instanceof X.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');return n(e,t.length),void 0===r&&(r=t.length-e),i(r,e,t.length),o(t,e,r)}):(e.randomFill=r,e.randomFillSync=r)})),ee=Z((function(t){t.exports=te})).randomFillSync,re=Math.floor(.001*(Date.now()-performance.now()));function ne(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function ie(t,e){for(var r,n="",i=0,o=-1,s=0,a=0;a<=t.length;++a){if(a<t.length)r=t.charCodeAt(a);else{if(47===r)break;r=47}if(47===r){if(o!==a-1&&1!==s)if(o!==a-1&&2===s){if(2>n.length||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(2<n.length){if((o=n.lastIndexOf("/"))!==n.length-1){-1===o?(n="",i=0):i=(n=n.slice(0,o)).length-1-n.lastIndexOf("/"),o=a,s=0;continue}}else if(2===n.length||1===n.length){n="",i=0,o=a,s=0;continue}e&&(n=0<n.length?n+"/..":"..",i=2)}else n=0<n.length?n+"/"+t.slice(o+1,a):t.slice(o+1,a),i=a-o-1;o=a,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var oe,se={resolve:function(){for(var t,e="",r=!1,n=arguments.length-1;-1<=n&&!r;n--){if(0<=n)var i=arguments[n];else void 0===t&&(t=lt()),i=t;ne(i),0!==i.length&&(e=i+"/"+e,r=47===i.charCodeAt(0))}return e=ie(e,!r),r?0<e.length?"/"+e:"/":0<e.length?e:"."},normalize:function(t){if(ne(t),0===t.length)return".";var e=47===t.charCodeAt(0),r=47===t.charCodeAt(t.length-1);return 0!==(t=ie(t,!e)).length||e||(t="."),0<t.length&&r&&(t+="/"),e?"/"+t:t},isAbsolute:function(t){return ne(t),0<t.length&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,e=0;e<arguments.length;++e){var r=arguments[e];ne(r),0<r.length&&(t=void 0===t?r:t+"/"+r)}return void 0===t?".":se.normalize(t)},relative:function(t,e){if(ne(t),ne(e),t===e)return"";if((t=se.resolve(t))===(e=se.resolve(e)))return"";for(var r=1;r<t.length&&47===t.charCodeAt(r);++r);for(var n=t.length,i=n-r,o=1;o<e.length&&47===e.charCodeAt(o);++o);for(var s=e.length-o,a=i<s?i:s,u=-1,f=0;f<=a;++f){if(f===a){if(s>a){if(47===e.charCodeAt(o+f))return e.slice(o+f+1);if(0===f)return e.slice(o+f)}else i>a&&(47===t.charCodeAt(r+f)?u=f:0===f&&(u=0));break}var h=t.charCodeAt(r+f);if(h!==e.charCodeAt(o+f))break;47===h&&(u=f)}for(i="",f=r+u+1;f<=n;++f)f!==n&&47!==t.charCodeAt(f)||(i=0===i.length?i+"..":i+"/..");return 0<i.length?i+e.slice(o+u):(o+=u,47===e.charCodeAt(o)&&++o,e.slice(o))},_makeLong:function(t){return t},dirname:function(t){if(ne(t),0===t.length)return".";for(var e=t.charCodeAt(0),r=47===e,n=-1,i=!0,o=t.length-1;1<=o;--o)if(47===(e=t.charCodeAt(o))){if(!i){n=o;break}}else i=!1;return-1===n?r?"/":".":r&&1===n?"//":t.slice(0,n)},basename:function(t,e){if(void 0!==e&&"string"!=typeof e)throw new TypeError('"ext" argument must be a string');ne(t);var r,n=0,i=-1,o=!0;if(void 0!==e&&0<e.length&&e.length<=t.length){if(e.length===t.length&&e===t)return"";var s=e.length-1,a=-1;for(r=t.length-1;0<=r;--r){var u=t.charCodeAt(r);if(47===u){if(!o){n=r+1;break}}else-1===a&&(o=!1,a=r+1),0<=s&&(u===e.charCodeAt(s)?-1==--s&&(i=r):(s=-1,i=a))}return n===i?i=a:-1===i&&(i=t.length),t.slice(n,i)}for(r=t.length-1;0<=r;--r)if(47===t.charCodeAt(r)){if(!o){n=r+1;break}}else-1===i&&(o=!1,i=r+1);return-1===i?"":t.slice(n,i)},extname:function(t){ne(t);for(var e=-1,r=0,n=-1,i=!0,o=0,s=t.length-1;0<=s;--s){var a=t.charCodeAt(s);if(47===a){if(!i){r=s+1;break}}else-1===n&&(i=!1,n=s+1),46===a?-1===e?e=s:1!==o&&(o=1):-1!==e&&(o=-1)}return-1===e||-1===n||0===o||1===o&&e===n-1&&e===r+1?"":t.slice(e,n)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);var e=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return t=e?e===t.root?e+r:e+"/"+r:r},parse:function(t){ne(t);var e={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return e;var r=t.charCodeAt(0),n=47===r;if(n){e.root="/";var i=1}else i=0;for(var o=-1,s=0,a=-1,u=!0,f=t.length-1,h=0;f>=i;--f)if(47===(r=t.charCodeAt(f))){if(!u){s=f+1;break}}else-1===a&&(u=!1,a=f+1),46===r?-1===o?o=f:1!==h&&(h=1):-1!==o&&(h=-1);return-1===o||-1===a||0===h||1===h&&o===a-1&&o===s+1?-1!==a&&(e.base=e.name=0===s&&n?t.slice(1,a):t.slice(s,a)):(0===s&&n?(e.name=t.slice(1,o),e.base=t.slice(1,a)):(e.name=t.slice(s,o),e.base=t.slice(s,a)),e.ext=t.slice(o,a)),0<s?e.dir=t.slice(0,s-1):n&&(e.dir="/"),e},sep:"/",delimiter:":",win32:null,posix:null},ae={hrtime:function(t){return 1e9*(t=function(t){var e=.001*performance.now(),r=Math.floor(e)+re;return e=Math.floor(e%1*1e9),t&&(r-=t[0],0>(e-=t[1])&&(r--,e+=1e9)),[r,e]}(t))[0]+t[1]},exit:function(t){throw new tr(t)},kill:function(t){throw new er(t)},randomFillSync:ee,isTTY:function(){return!0},path:se.posix=se,fs:null},ue=f(1),fe=f(2),he=f(4),ce=f(8),le=f(16),pe=f(32),de=f(64),ye=f(128),ge=f(256),me=f(512),ve=f(1024),we=f(2048),be=f(4096),Ee=f(8192),_e=f(16384),Se=f(32768),Re=f(65536),Te=f(131072),Ae=f(262144),Oe=f(524288),Ie=f(1048576),Pe=f(2097152),Be=f(4194304),Ne=f(8388608),ke=f(16777216),Le=f(33554432),Ce=f(67108864),Ue=f(134217728),Fe=f(268435456),De=ue|fe|he|ce|le|pe|de|ye|ge|me|ve|we|be|Ee|_e|Se|Re|Te|Ae|Oe|Ie|Pe|Ne|Be|ke|Ce|Le|Ue|Fe,Me=ue|fe|he|ce|le|pe|de|ye|ge|Pe|Be|Ne|Ue,xe=f(0),Ye=ce|le|ye|me|ve|we|be|Ee|_e|Se|Re|Te|Ae|Oe|Ie|Pe|Ne|ke|Ce|Le|Ue,je=Ye|Me,We=fe|ce|de|Pe|Ue|Fe,ze=fe|ce|de|Pe|Ue,Ge=f(0),Ve={E2BIG:1,EACCES:2,EADDRINUSE:3,EADDRNOTAVAIL:4,EAFNOSUPPORT:5,EALREADY:7,EAGAIN:6,EBADF:8,EBADMSG:9,EBUSY:10,ECANCELED:11,ECHILD:12,ECONNABORTED:13,ECONNREFUSED:14,ECONNRESET:15,EDEADLOCK:16,EDESTADDRREQ:17,EDOM:18,EDQUOT:19,EEXIST:20,EFAULT:21,EFBIG:22,EHOSTDOWN:23,EHOSTUNREACH:23,EIDRM:24,EILSEQ:25,EINPROGRESS:26,EINTR:27,EINVAL:28,EIO:29,EISCONN:30,EISDIR:31,ELOOP:32,EMFILE:33,EMLINK:34,EMSGSIZE:35,EMULTIHOP:36,ENAMETOOLONG:37,ENETDOWN:38,ENETRESET:39,ENETUNREACH:40,ENFILE:41,ENOBUFS:42,ENODEV:43,ENOENT:44,ENOEXEC:45,ENOLCK:46,ENOLINK:47,ENOMEM:48,ENOMSG:49,ENOPROTOOPT:50,ENOSPC:51,ENOSYS:52,ENOTCONN:53,ENOTDIR:54,ENOTEMPTY:55,ENOTRECOVERABLE:56,ENOTSOCK:57,ENOTTY:59,ENXIO:60,EOVERFLOW:61,EOWNERDEAD:62,EPERM:63,EPIPE:64,EPROTO:65,EPROTONOSUPPORT:66,EPROTOTYPE:67,ERANGE:68,EROFS:69,ESPIPE:70,ESRCH:71,ESTALE:72,ETIMEDOUT:73,ETXTBSY:74,EXDEV:75},qe=((oe={})[6]="SIGHUP",oe[8]="SIGINT",oe[11]="SIGQUIT",oe[7]="SIGILL",oe[15]="SIGTRAP",oe[0]="SIGABRT",oe[2]="SIGBUS",oe[5]="SIGFPE",oe[9]="SIGKILL",oe[20]="SIGUSR1",oe[12]="SIGSEGV",oe[21]="SIGUSR2",oe[10]="SIGPIPE",oe[1]="SIGALRM",oe[14]="SIGTERM",oe[3]="SIGCHLD",oe[4]="SIGCONT",oe[13]="SIGSTOP",oe[16]="SIGTSTP",oe[17]="SIGTTIN",oe[18]="SIGTTOU",oe[19]="SIGURG",oe[23]="SIGXCPU",oe[24]="SIGXFSZ",oe[22]="SIGVTALRM",oe),He=ue|fe|le|ye|Pe|Ue,Ke=ue|de|le|ye|Pe|Ue;function Je(t){var e=Math.trunc(t);return t=f(Math.round(1e3*(t-e))),f(e)*f(1e3)+t}function Xe(t){return function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];try{return t.apply(void 0,a(e))}catch(t){if(t&&t.code&&"string"==typeof t.code)return Ve[t.code]||28;if(t instanceof Qe)return t.errno;throw t}}}function Ze(t,e){var r=t.FD_MAP.get(e);if(!r)throw new Qe(8);if(void 0===r.filetype){var n=t.bindings.fs.fstatSync(r.real);e=(t=$e(t,e,n)).rightsBase,n=t.rightsInheriting,r.filetype=t.filetype,r.rights||(r.rights={base:e,inheriting:n})}return r}function $e(t,e,r){switch(!0){case r.isBlockDevice():return{filetype:1,rightsBase:De,rightsInheriting:De};case r.isCharacterDevice():return void 0!==e&&t.bindings.isTTY(e)?{filetype:2,rightsBase:ze,rightsInheriting:Ge}:{filetype:2,rightsBase:De,rightsInheriting:De};case r.isDirectory():return{filetype:3,rightsBase:Ye,rightsInheriting:je};case r.isFIFO():return{filetype:6,rightsBase:We,rightsInheriting:De};case r.isFile():return{filetype:4,rightsBase:Me,rightsInheriting:xe};case r.isSocket():return{filetype:6,rightsBase:We,rightsInheriting:De};case r.isSymbolicLink():return{filetype:7,rightsBase:f(0),rightsInheriting:f(0)};default:return{filetype:0,rightsBase:f(0),rightsInheriting:f(0)}}}var Qe=function(t){function e(r){var n=t.call(this)||this;return n.errno=r,Object.setPrototypeOf(n,e.prototype),n}return i(e,t),e}(Error),tr=function(t){function e(r){var n=t.call(this,"WASI Exit error: "+r)||this;return n.code=r,Object.setPrototypeOf(n,e.prototype),n}return i(e,t),e}(Error),er=function(t){function e(r){var n=t.call(this,"WASI Kill signal: "+r)||this;return n.signal=r,Object.setPrototypeOf(n,e.prototype),n}return i(e,t),e}(Error),rr=function(){function t(t){function e(t){switch(t){case 0:case 2:return p.hrtime();case 1:case 3:return p.hrtime()-R;default:return null}}function r(t,e){if(t=Ze(u,t),e!==f(0)&&(t.rights.base&e)===f(0))throw new Qe(63);return t}function n(t,e){return u.refreshMemory(),Array.from({length:e},(function(e,r){return r=t+8*r,e=u.view.getUint32(r,!0),r=u.view.getUint32(r+4,!0),new Uint8Array(u.memory.buffer,e,r)}))}var i,u=this,h={};t&&t.preopens?h=t.preopens:t&&t.preopenDirectories&&(h=t.preopenDirectories);var c={};t&&t.env&&(c=t.env);var l=[];t&&t.args&&(l=t.args);var p=ae;t&&t.bindings&&(p=t.bindings),this.view=this.memory=void 0,this.bindings=p,this.FD_MAP=new Map([[0,{real:0,filetype:2,rights:{base:He,inheriting:f(0)},path:void 0}],[1,{real:1,filetype:2,rights:{base:Ke,inheriting:f(0)},path:void 0}],[2,{real:2,filetype:2,rights:{base:Ke,inheriting:f(0)},path:void 0}]]);var d=this.bindings.fs,y=this.bindings.path;try{for(var g=o(Object.entries(h)),m=g.next();!m.done;m=g.next()){var v=s(m.value,2),w=v[0],b=v[1],E=d.openSync(b,d.constants.O_RDONLY),_=a(this.FD_MAP.keys()).reverse()[0]+1;this.FD_MAP.set(_,{real:E,filetype:3,rights:{base:Ye,inheriting:je},fakePath:w,path:b})}}catch(t){var S={error:t}}finally{try{m&&!m.done&&(i=g.return)&&i.call(g)}finally{if(S)throw S.error}}var R=p.hrtime();this.wasiImport={args_get:function(t,e){u.refreshMemory();var r=t,n=e;return l.forEach((function(t){u.view.setUint32(r,n,!0),r+=4,n+=J.from(u.memory.buffer).write(t+"\0",n)})),0},args_sizes_get:function(t,e){return u.refreshMemory(),u.view.setUint32(t,l.length,!0),t=l.reduce((function(t,e){return t+J.byteLength(e)+1}),0),u.view.setUint32(e,t,!0),0},environ_get:function(t,e){u.refreshMemory();var r=t,n=e;return Object.entries(c).forEach((function(t){var e=s(t,2);t=e[0],e=e[1],u.view.setUint32(r,n,!0),r+=4,n+=J.from(u.memory.buffer).write(t+"="+e+"\0",n)})),0},environ_sizes_get:function(t,e){u.refreshMemory();var r=Object.entries(c).map((function(t){return(t=s(t,2))[0]+"="+t[1]+"\0"})),n=r.reduce((function(t,e){return t+J.byteLength(e)}),0);return u.view.setUint32(t,r.length,!0),u.view.setUint32(e,n,!0),0},clock_res_get:function(t,e){return u.view.setBigUint64(e,f(0)),0},clock_time_get:function(t,r,n){return u.refreshMemory(),null===(t=e(t))?28:(u.view.setBigUint64(n,f(t),!0),0)},fd_advise:Xe((function(t){return r(t,ye),52})),fd_allocate:Xe((function(t){return r(t,ge),52})),fd_close:Xe((function(t){var e=r(t,f(0));return d.closeSync(e.real),u.FD_MAP.delete(t),0})),fd_datasync:function(t){return t=r(t,ue),d.fdatasyncSync(t.real),0},fd_fdstat_get:Xe((function(t,e){return t=r(t,f(0)),u.refreshMemory(),u.view.setUint8(e,t.filetype),u.view.setUint16(e+2,0,!0),u.view.setUint16(e+4,0,!0),u.view.setBigUint64(e+8,f(t.rights.base),!0),u.view.setBigUint64(e+8+8,f(t.rights.inheriting),!0),0})),fd_fdstat_set_flags:Xe((function(t){return r(t,ce),52})),fd_fdstat_set_rights:Xe((function(t,e,n){return(e|=(t=r(t,f(0))).rights.base)>t.rights.base||(n|=t.rights.inheriting)>t.rights.inheriting?63:(t.rights.base=e,t.rights.inheriting=n,0)})),fd_filestat_get:Xe((function(t,e){t=r(t,Pe);var n=d.fstatSync(t.real);return u.refreshMemory(),u.view.setBigUint64(e,f(n.dev),!0),e+=8,u.view.setBigUint64(e,f(n.ino),!0),e+=8,u.view.setUint8(e,t.filetype),e+=4,u.view.setUint32(e,Number(n.nlink),!0),e+=4,u.view.setBigUint64(e,f(n.size),!0),e+=8,u.view.setBigUint64(e,Je(n.atimeMs),!0),e+=8,u.view.setBigUint64(e,Je(n.mtimeMs),!0),u.view.setBigUint64(e+8,Je(n.ctimeMs),!0),0})),fd_filestat_set_size:Xe((function(t,e){return t=r(t,Be),d.ftruncate(t.real,Number(e)),0})),fd_filestat_set_times:Xe((function(t,n,i,o){t=r(t,Ne);var s=e(2);return d.futimesSync(t.real,2==(2&o)?s:n,8==(8&o)?s:i),0})),fd_prestat_get:Xe((function(t,e){return(t=r(t,f(0))).path?(u.refreshMemory(),u.view.setUint8(e,0),u.view.setUint32(e+4,J.byteLength(t.fakePath),!0),0):28})),fd_prestat_dir_name:Xe((function(t,e,n){return(t=r(t,f(0))).path?(u.refreshMemory(),J.from(u.memory.buffer).write(t.fakePath,e,n,"utf8"),0):28})),fd_pwrite:Xe((function(t,e,i,o,s){var a=r(t,de|he),f=0;return n(e,i).forEach((function(t){for(var e=0;e<t.byteLength;)e+=d.writeSync(a.real,t,e,t.byteLength-e,o+f+e);f+=e})),u.view.setUint32(s,f,!0),0})),fd_write:Xe((function(t,e,i,o){var s=r(t,de),a=0;return n(e,i).forEach((function(t){for(var e=0;e<t.byteLength;){var r=d.writeSync(s.real,t,e,t.byteLength-e,s.offset?Number(s.offset):null);s.offset&&(s.offset+=f(r)),e+=r}a+=e})),u.view.setUint32(o,a,!0),0})),fd_pread:Xe((function(t,e,i,o,s){var a=r(t,fe|he),f=0;return n(e,i).forEach((function(t){for(var e=0;e<t.byteLength;)e+=d.readSync(a.real,t,e,t.byteLength-e,o+f+e);f+=e})),u.view.setUint32(s,f,!0),0})),fd_read:Xe((function(t,e,i,s){var a,h=0===(t=r(t,fe)).real,c=0;try{var l=o(n(e,i)),p=l.next();t:for(;!p.done;p=l.next()){var y=p.value;for(e=0;e<y.byteLength;){var g=y.byteLength-e,m=d.readSync(t.real,y,e,g,h||void 0===t.offset?null:Number(t.offset));if(h||(t.offset=(t.offset?t.offset:f(0))+f(m)),e+=m,c+=m,0===m||m<g)break t}}}catch(t){var v={error:t}}finally{try{p&&!p.done&&(a=l.return)&&a.call(l)}finally{if(v)throw v.error}}return u.view.setUint32(s,c,!0),0})),fd_readdir:Xe((function(t,e,n,i,o){t=r(t,_e),u.refreshMemory();var s=d.readdirSync(t.path,{withFileTypes:!0}),a=e;for(i=Number(i);i<s.length;i+=1){var h=s[i],c=J.byteLength(h.name);u.view.setBigUint64(e,f(i+1),!0),e+=8;var l=d.statSync(y.resolve(t.path,h.name));switch(u.view.setBigUint64(e,f(l.ino),!0),e+=8,u.view.setUint32(e,c,!0),e+=4,!0){case l.isBlockDevice():l=1;break;case l.isCharacterDevice():l=2;break;case l.isDirectory():l=3;break;case l.isFIFO():l=6;break;case l.isFile():l=4;break;case l.isSocket():l=6;break;case l.isSymbolicLink():l=7;break;default:l=0}if(u.view.setUint8(e,l),e+=1,(e+=3)+c>=a+n)break;J.from(u.memory.buffer).write(h.name,e),e+=J.byteLength(h.name)}return u.view.setUint32(o,e-a,!0),0})),fd_renumber:Xe((function(t,e){return r(t,f(0)),r(e,f(0)),d.closeSync(u.FD_MAP.get(t).real),u.FD_MAP.set(t,u.FD_MAP.get(e)),u.FD_MAP.delete(e),0})),fd_seek:Xe((function(t,e,n,i){switch(t=r(t,he),u.refreshMemory(),n){case 0:t.offset=(t.offset?t.offset:f(0))+f(e);break;case 1:n=d.fstatSync(t.real).size,t.offset=f(n)+f(e);break;case 2:t.offset=f(e)}return u.view.setBigUint64(i,t.offset,!0),0})),fd_tell:Xe((function(t,e){return t=r(t,pe),u.refreshMemory(),t.offset||(t.offset=f(0)),u.view.setBigUint64(e,t.offset,!0),0})),fd_sync:Xe((function(t){return t=r(t,le),d.fsyncSync(t.real),0})),path_create_directory:Xe((function(t,e,n){return(t=r(t,me)).path?(u.refreshMemory(),e=J.from(u.memory.buffer,e,n).toString(),d.mkdirSync(y.resolve(t.path,e)),0):28})),path_filestat_get:Xe((function(t,e,n,i,o){return(t=r(t,Ae)).path?(u.refreshMemory(),n=J.from(u.memory.buffer,n,i).toString(),n=d.statSync(y.resolve(t.path,n)),u.view.setBigUint64(o,f(n.dev),!0),o+=8,u.view.setBigUint64(o,f(n.ino),!0),o+=8,u.view.setUint8(o,$e(u,void 0,n).filetype),o+=4,u.view.setUint32(o,Number(n.nlink),!0),o+=4,u.view.setBigUint64(o,f(n.size),!0),o+=8,u.view.setBigUint64(o,Je(n.atimeMs),!0),o+=8,u.view.setBigUint64(o,Je(n.mtimeMs),!0),u.view.setBigUint64(o+8,Je(n.ctimeMs),!0),0):28})),path_filestat_set_times:Xe((function(t,n,i,o,s,a){if(!(t=r(t,Ie)).path)return 28;u.refreshMemory();var f=e(2),h=2==(2&n);return n=8==(8&n),i=J.from(u.memory.buffer,i,o).toString(),d.utimesSync(y.resolve(t.path,i),h?f:s,n?f:a),0})),path_link:Xe((function(t,e,n,i,o,s,a){return t=r(t,we),o=r(o,be),t.path&&o.path?(u.refreshMemory(),n=J.from(u.memory.buffer,n,i).toString(),s=J.from(u.memory.buffer,s,a).toString(),d.linkSync(y.resolve(t.path,n),y.resolve(o.path,s)),0):28})),path_open:Xe((function(t,e,n,i,o,s,h,c,l){e=r(t,Ee),s=f(s),h=f(h),t=(s&(fe|_e))!==f(0);var p=(s&(ue|de|ge|Be))!==f(0);if(p&&t)var g=d.constants.O_RDWR;else t?g=d.constants.O_RDONLY:p&&(g=d.constants.O_WRONLY);if(t=s|Ee,s|=h,0!=(1&o)&&(g|=d.constants.O_CREAT,t|=ve),0!=(2&o)&&(g|=d.constants.O_DIRECTORY),0!=(4&o)&&(g|=d.constants.O_EXCL),0!=(8&o)&&(g|=d.constants.O_TRUNC,t|=Oe),0!=(1&c)&&(g|=d.constants.O_APPEND),0!=(2&c)&&(g=d.constants.O_DSYNC?g|d.constants.O_DSYNC:g|d.constants.O_SYNC,s|=ue),0!=(4&c)&&(g|=d.constants.O_NONBLOCK),0!=(8&c)&&(g=d.constants.O_RSYNC?g|d.constants.O_RSYNC:g|d.constants.O_SYNC,s|=le),0!=(16&c)&&(g|=d.constants.O_SYNC,s|=le),p&&0==(g&(d.constants.O_APPEND|d.constants.O_TRUNC))&&(s|=he),u.refreshMemory(),n=J.from(u.memory.buffer,n,i).toString(),n=y.resolve(e.path,n),y.relative(e.path,n).startsWith(".."))return 76;try{var m=d.realpathSync(n);if(y.relative(e.path,m).startsWith(".."))return 76}catch(t){if("ENOENT"!==t.code)throw t;m=n}return g=d.openSync(m,g),n=a(u.FD_MAP.keys()).reverse()[0]+1,u.FD_MAP.set(n,{real:g,filetype:void 0,rights:{base:t,inheriting:s},path:m}),Ze(u,n),u.view.setUint32(l,n,!0),0})),path_readlink:Xe((function(t,e,n,i,o,s){return(t=r(t,Se)).path?(u.refreshMemory(),e=J.from(u.memory.buffer,e,n).toString(),e=y.resolve(t.path,e),e=d.readlinkSync(e),i=J.from(u.memory.buffer).write(e,i,o),u.view.setUint32(s,i,!0),0):28})),path_remove_directory:Xe((function(t,e,n){return(t=r(t,Le)).path?(u.refreshMemory(),e=J.from(u.memory.buffer,e,n).toString(),d.rmdirSync(y.resolve(t.path,e)),0):28})),path_rename:Xe((function(t,e,n,i,o,s){return t=r(t,Re),i=r(i,Te),t.path&&i.path?(u.refreshMemory(),e=J.from(u.memory.buffer,e,n).toString(),o=J.from(u.memory.buffer,o,s).toString(),d.renameSync(y.resolve(t.path,e),y.resolve(i.path,o)),0):28})),path_symlink:Xe((function(t,e,n,i,o){return(n=r(n,ke)).path?(u.refreshMemory(),t=J.from(u.memory.buffer,t,e).toString(),i=J.from(u.memory.buffer,i,o).toString(),d.symlinkSync(t,y.resolve(n.path,i)),0):28})),path_unlink_file:Xe((function(t,e,n){return(t=r(t,Ce)).path?(u.refreshMemory(),e=J.from(u.memory.buffer,e,n).toString(),d.unlinkSync(y.resolve(t.path,e)),0):28})),poll_oneoff:function(t,r,n,i){var o=0,s=0;u.refreshMemory();for(var a=0;a<n;a+=1){var h=u.view.getBigUint64(t,!0);t+=8;var c=u.view.getUint8(t);switch(t+=1,c){case 0:t+=7,u.view.getBigUint64(t,!0),t+=8;var l=u.view.getUint32(t,!0);t+=4,t+=4,c=u.view.getBigUint64(t,!0),t+=8,u.view.getBigUint64(t,!0),t+=8;var d=u.view.getUint16(t,!0);t+=2,t+=6;var y=1===d;d=0,null===(l=f(e(l)))?d=28:s=(c=y?c:l+c)>s?c:s,u.view.setBigUint64(r,h,!0),r+=8,u.view.setUint16(r,d,!0),r+=2,u.view.setUint8(r,0),r+=1,r+=5,o+=1;break;case 1:case 2:t+=3,u.view.getUint32(t,!0),t+=4,u.view.setBigUint64(r,h,!0),r+=8,u.view.setUint16(r,52,!0),r+=2,u.view.setUint8(r,c),r+=1,r+=5,o+=1;break;default:return 28}}for(u.view.setUint32(i,o,!0);p.hrtime()<s;);return 0},proc_exit:function(t){return p.exit(t),0},proc_raise:function(t){return t in qe?(p.kill(qe[t]),0):28},random_get:function(t,e){return u.refreshMemory(),p.randomFillSync(new Uint8Array(u.memory.buffer),t,e),0},sched_yield:function(){return 0},sock_recv:function(){return 52},sock_send:function(){return 52},sock_shutdown:function(){return 52}}}return t.prototype.refreshMemory=function(){this.view&&0!==this.view.buffer.byteLength||(this.view=new h(this.memory.buffer))},t.prototype.setMemory=function(t){this.memory=t},t.prototype.start=function(t){if(null===(t=t.exports)||"object"!=typeof t)throw Error("instance.exports must be an Object. Received "+t+".");var e=t.memory;if(!(e instanceof WebAssembly.Memory))throw Error("instance.exports.memory must be a WebAssembly.Memory. Recceived "+e+".");this.setMemory(e),t._start&&t._start()},t.defaultBindings=ae,t}(),nr=rr}).call(this,r(0))},function(t,e,r){"use strict";(function(t,n){function i(t){var e="function"==typeof Symbol&&t[Symbol.iterator],r=0;return e?e.call(t):{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}}}function o(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;t=r.call(t);var n,i=[];try{for(;(void 0===e||0<e--)&&!(n=t.next()).done;)i.push(n.value)}catch(t){var o={error:t}}finally{try{n&&!n.done&&(r=t.return)&&r.call(t)}finally{if(o)throw o.error}}return i}function s(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t}r.d(e,"a",(function(){return cn}));var a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{};function u(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function f(t,e){return t(e={exports:{}},e.exports),e.exports}var h=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.constants={O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,UV_FS_COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_EXCL:1,COPYFILE_FICLONE:2,COPYFILE_FICLONE_FORCE:4}}));u(h);var c=f((function(t,e){e.default="function"==typeof BigInt?BigInt:function(){throw Error("BigInt is not supported in this environment.")}})),l=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var r=h.constants.S_IFMT,n=h.constants.S_IFDIR,i=h.constants.S_IFREG,o=h.constants.S_IFBLK,s=h.constants.S_IFCHR,a=h.constants.S_IFLNK,u=h.constants.S_IFIFO,f=h.constants.S_IFSOCK;t=function(){function t(){}return t.build=function(e,r){void 0===r&&(r=!1);var n=new t,i=e.gid,o=e.atime,s=e.mtime,a=e.ctime;return r=r?c.default:function(t){return t},n.uid=r(e.uid),n.gid=r(i),n.rdev=r(0),n.blksize=r(4096),n.ino=r(e.ino),n.size=r(e.getSize()),n.blocks=r(1),n.atime=o,n.mtime=s,n.ctime=a,n.birthtime=a,n.atimeMs=r(o.getTime()),n.mtimeMs=r(s.getTime()),i=r(a.getTime()),n.ctimeMs=i,n.birthtimeMs=i,n.dev=r(0),n.mode=r(e.mode),n.nlink=r(e.nlink),n},t.prototype._checkModeProperty=function(t){return(Number(this.mode)&r)===t},t.prototype.isDirectory=function(){return this._checkModeProperty(n)},t.prototype.isFile=function(){return this._checkModeProperty(i)},t.prototype.isBlockDevice=function(){return this._checkModeProperty(o)},t.prototype.isCharacterDevice=function(){return this._checkModeProperty(s)},t.prototype.isSymbolicLink=function(){return this._checkModeProperty(a)},t.prototype.isFIFO=function(){return this._checkModeProperty(u)},t.prototype.isSocket=function(){return this._checkModeProperty(f)},t}(),e.Stats=t,e.default=t}));u(l);var p=void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},d=[],y=[],g="undefined"!=typeof Uint8Array?Uint8Array:Array,m=!1;function v(){m=!0;for(var t=0;64>t;++t)d[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[t],y["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(t)]=t;y[45]=62,y[95]=63}function w(t,e,r){for(var n=[],i=e;i<r;i+=3)e=(t[i]<<16)+(t[i+1]<<8)+t[i+2],n.push(d[e>>18&63]+d[e>>12&63]+d[e>>6&63]+d[63&e]);return n.join("")}function b(t){m||v();for(var e=t.length,r=e%3,n="",i=[],o=0,s=e-r;o<s;o+=16383)i.push(w(t,o,o+16383>s?s:o+16383));return 1===r?(t=t[e-1],n+=d[t>>2],n+=d[t<<4&63],n+="=="):2===r&&(t=(t[e-2]<<8)+t[e-1],n+=d[t>>10],n+=d[t>>4&63],n+=d[t<<2&63],n+="="),i.push(n),i.join("")}function E(t,e,r,n,i){var o=8*i-n-1,s=(1<<o)-1,a=s>>1,u=-7,f=r?-1:1,h=t[e+(i=r?i-1:0)];for(i+=f,r=h&(1<<-u)-1,h>>=-u,u+=o;0<u;r=256*r+t[e+i],i+=f,u-=8);for(o=r&(1<<-u)-1,r>>=-u,u+=n;0<u;o=256*o+t[e+i],i+=f,u-=8);if(0===r)r=1-a;else{if(r===s)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,n),r-=a}return(h?-1:1)*o*Math.pow(2,r-n)}function _(t,e,r,n,i,o){var s,a=8*o-i-1,u=(1<<a)-1,f=u>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0;o=n?0:o-1;var c=n?1:-1,l=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||1/0===e?(e=isNaN(e)?1:0,n=u):(n=Math.floor(Math.log(e)/Math.LN2),1>e*(s=Math.pow(2,-n))&&(n--,s*=2),2<=(e=1<=n+f?e+h/s:e+h*Math.pow(2,1-f))*s&&(n++,s/=2),n+f>=u?(e=0,n=u):1<=n+f?(e=(e*s-1)*Math.pow(2,i),n+=f):(e=e*Math.pow(2,f-1)*Math.pow(2,i),n=0));8<=i;t[r+o]=255&e,o+=c,e/=256,i-=8);for(n=n<<i|e,a+=i;0<a;t[r+o]=255&n,o+=c,n/=256,a-=8);t[r+o-c]|=128*l}var S={}.toString,R=Array.isArray||function(t){return"[object Array]"==S.call(t)};O.TYPED_ARRAY_SUPPORT=void 0===p.TYPED_ARRAY_SUPPORT||p.TYPED_ARRAY_SUPPORT;var T=O.TYPED_ARRAY_SUPPORT?2147483647:1073741823;function A(t,e){if((O.TYPED_ARRAY_SUPPORT?2147483647:1073741823)<e)throw new RangeError("Invalid typed array length");return O.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=O.prototype:(null===t&&(t=new O(e)),t.length=e),t}function O(t,e,r){if(!(O.TYPED_ARRAY_SUPPORT||this instanceof O))return new O(t,e,r);if("number"==typeof t){if("string"==typeof e)throw Error("If encoding is specified then the first argument must be a string");return B(this,t)}return I(this,t,e,r)}function I(t,e,r,n){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer){if(e.byteLength,0>r||e.byteLength<r)throw new RangeError("'offset' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),O.TYPED_ARRAY_SUPPORT?(t=e).__proto__=O.prototype:t=N(t,e),t}if("string"==typeof e){if(n=t,"string"==typeof(t=r)&&""!==t||(t="utf8"),!O.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');return(e=(n=A(n,r=0|C(e,t))).write(e,t))!==r&&(n=n.slice(0,e)),n}return function(t,e){if(L(e)){var r=0|k(e.length);return 0===(t=A(t,r)).length||e.copy(t,0,0,r),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return(r="number"!=typeof e.length)||(r=(r=e.length)!=r),r?A(t,0):N(t,e);if("Buffer"===e.type&&R(e.data))return N(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function P(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(0>t)throw new RangeError('"size" argument must not be negative')}function B(t,e){if(P(e),t=A(t,0>e?0:0|k(e)),!O.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function N(t,e){var r=0>e.length?0:0|k(e.length);t=A(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function k(t){if(t>=(O.TYPED_ARRAY_SUPPORT?2147483647:1073741823))throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+(O.TYPED_ARRAY_SUPPORT?2147483647:1073741823).toString(16)+" bytes");return 0|t}function L(t){return!(null==t||!t._isBuffer)}function C(t,e){if(L(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return H(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return J(t).length;default:if(n)return H(t).length;e=(""+e).toLowerCase(),n=!0}}function U(t,e,r){var n=!1;if((void 0===e||0>e)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),0>=r)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":for(t=e,e=r,r=this.length,(!t||0>t)&&(t=0),(!e||0>e||e>r)&&(e=r),n="",r=t;r<e;++r)n=(t=n)+(n=16>(n=this[r])?"0"+n.toString(16):n.toString(16));return n;case"utf8":case"utf-8":return x(this,e,r);case"ascii":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(127&this[e]);return t;case"latin1":case"binary":for(t="",r=Math.min(this.length,r);e<r;++e)t+=String.fromCharCode(this[e]);return t;case"base64":return e=0===e&&r===this.length?b(this):b(this.slice(e,r));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":for(e=this.slice(e,r),r="",t=0;t<e.length;t+=2)r+=String.fromCharCode(e[t]+256*e[t+1]);return r;default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function F(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function D(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):2147483647<r?r=2147483647:-2147483648>r&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),0>r&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(0>r){if(!i)return-1;r=0}if("string"==typeof e&&(e=O.from(e,n)),L(e))return 0===e.length?-1:M(t,e,r,n,i);if("number"==typeof e)return e&=255,O.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):M(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function M(t,e,r,n,i){function o(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}var s=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(2>t.length||2>e.length)return-1;s=2,a/=2,u/=2,r/=2}if(i)for(n=-1;r<a;r++)if(o(t,r)===o(e,-1===n?0:r-n)){if(-1===n&&(n=r),r-n+1===u)return n*s}else-1!==n&&(r-=r-n),n=-1;else for(r+u>a&&(r=a-u);0<=r;r--){for(a=!0,n=0;n<u;n++)if(o(t,r+n)!==o(e,n)){a=!1;break}if(a)return r}return-1}function x(t,e,r){r=Math.min(t.length,r);for(var n=[];e<r;){var i=t[e],o=null,s=239<i?4:223<i?3:191<i?2:1;if(e+s<=r)switch(s){case 1:128>i&&(o=i);break;case 2:var a=t[e+1];128==(192&a)&&(127<(i=(31&i)<<6|63&a)&&(o=i));break;case 3:a=t[e+1];var u=t[e+2];128==(192&a)&&128==(192&u)&&(2047<(i=(15&i)<<12|(63&a)<<6|63&u)&&(55296>i||57343<i)&&(o=i));break;case 4:a=t[e+1],u=t[e+2];var f=t[e+3];128==(192&a)&&128==(192&u)&&128==(192&f)&&(65535<(i=(15&i)<<18|(63&a)<<12|(63&u)<<6|63&f)&&1114112>i&&(o=i))}null===o?(o=65533,s=1):65535<o&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),e+=s}if((t=n.length)<=Y)n=String.fromCharCode.apply(String,n);else{for(r="",e=0;e<t;)r+=String.fromCharCode.apply(String,n.slice(e,e+=Y));n=r}return n}O.poolSize=8192,O._augment=function(t){return t.__proto__=O.prototype,t},O.from=function(t,e,r){return I(null,t,e,r)},O.TYPED_ARRAY_SUPPORT&&(O.prototype.__proto__=Uint8Array.prototype,O.__proto__=Uint8Array),O.alloc=function(t,e,r){return P(t),t=0>=t?A(null,t):void 0!==e?"string"==typeof r?A(null,t).fill(e,r):A(null,t).fill(e):A(null,t)},O.allocUnsafe=function(t){return B(null,t)},O.allocUnsafeSlow=function(t){return B(null,t)},O.isBuffer=Z,O.compare=function(t,e){if(!L(t)||!L(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},O.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},O.concat=function(t,e){if(!R(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return O.alloc(0);var r;if(void 0===e)for(r=e=0;r<t.length;++r)e+=t[r].length;e=O.allocUnsafe(e);var n=0;for(r=0;r<t.length;++r){var i=t[r];if(!L(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(e,n),n+=i.length}return e},O.byteLength=C,O.prototype._isBuffer=!0,O.prototype.swap16=function(){var t=this.length;if(0!=t%2)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)F(this,e,e+1);return this},O.prototype.swap32=function(){var t=this.length;if(0!=t%4)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)F(this,e,e+3),F(this,e+1,e+2);return this},O.prototype.swap64=function(){var t=this.length;if(0!=t%8)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)F(this,e,e+7),F(this,e+1,e+6),F(this,e+2,e+5),F(this,e+3,e+4);return this},O.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?x(this,0,t):U.apply(this,arguments)},O.prototype.equals=function(t){if(!L(t))throw new TypeError("Argument must be a Buffer");return this===t||0===O.compare(this,t)},O.prototype.inspect=function(){var t="";return 0<this.length&&(t=this.toString("hex",0,50).match(/.{2}/g).join(" "),50<this.length&&(t+=" ... ")),"<Buffer "+t+">"},O.prototype.compare=function(t,e,r,n,i){if(!L(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),0>e||r>t.length||0>n||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;var o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0),a=Math.min(o,s);for(n=this.slice(n,i),t=t.slice(e,r),e=0;e<a;++e)if(n[e]!==t[e]){o=n[e],s=t[e];break}return o<s?-1:s<o?1:0},O.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},O.prototype.indexOf=function(t,e,r){return D(this,t,e,r,!0)},O.prototype.lastIndexOf=function(t,e,r){return D(this,t,e,r,!1)},O.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),0<t.length&&(0>r||0>e)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");for(n||(n="utf8"),i=!1;;)switch(n){case"hex":t:{if(e=Number(e)||0,n=this.length-e,r?(r=Number(r))>n&&(r=n):r=n,0!=(n=t.length)%2)throw new TypeError("Invalid hex string");for(r>n/2&&(r=n/2),n=0;n<r;++n){if(i=parseInt(t.substr(2*n,2),16),isNaN(i)){t=n;break t}this[e+n]=i}t=n}return t;case"utf8":case"utf-8":return X(H(t,this.length-e),this,e,r);case"ascii":return X(K(t),this,e,r);case"latin1":case"binary":return X(K(t),this,e,r);case"base64":return X(J(t),this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":n=t,i=this.length-e;for(var o=[],s=0;s<n.length&&!(0>(i-=2));++s){var a=n.charCodeAt(s);t=a>>8,a%=256,o.push(a),o.push(t)}return X(o,this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},O.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Y=4096;function j(t,e,r){if(0!=t%1||0>t)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function W(t,e,r,n,i,o){if(!L(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function z(t,e,r,n){0>e&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-r,2);i<o;++i)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function G(t,e,r,n){0>e&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-r,4);i<o;++i)t[r+i]=e>>>8*(n?i:3-i)&255}function V(t,e,r,n){if(r+n>t.length)throw new RangeError("Index out of range");if(0>r)throw new RangeError("Index out of range")}O.prototype.slice=function(t,e){var r=this.length;if(0>(t=~~t)?0>(t+=r)&&(t=0):t>r&&(t=r),0>(e=void 0===e?r:~~e)?0>(e+=r)&&(e=0):e>r&&(e=r),e<t&&(e=t),O.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,e)).__proto__=O.prototype;else{e=new O(r=e-t,void 0);for(var n=0;n<r;++n)e[n]=this[n+t]}return e},O.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||j(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r},O.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||j(t,e,this.length),r=this[t+--e];for(var n=1;0<e&&(n*=256);)r+=this[t+--e]*n;return r},O.prototype.readUInt8=function(t,e){return e||j(t,1,this.length),this[t]},O.prototype.readUInt16LE=function(t,e){return e||j(t,2,this.length),this[t]|this[t+1]<<8},O.prototype.readUInt16BE=function(t,e){return e||j(t,2,this.length),this[t]<<8|this[t+1]},O.prototype.readUInt32LE=function(t,e){return e||j(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},O.prototype.readUInt32BE=function(t,e){return e||j(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},O.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||j(t,e,this.length),r=this[t];for(var n=1,i=0;++i<e&&(n*=256);)r+=this[t+i]*n;return r>=128*n&&(r-=Math.pow(2,8*e)),r},O.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||j(t,e,this.length),r=e;for(var n=1,i=this[t+--r];0<r&&(n*=256);)i+=this[t+--r]*n;return i>=128*n&&(i-=Math.pow(2,8*e)),i},O.prototype.readInt8=function(t,e){return e||j(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},O.prototype.readInt16LE=function(t,e){return e||j(t,2,this.length),32768&(t=this[t]|this[t+1]<<8)?4294901760|t:t},O.prototype.readInt16BE=function(t,e){return e||j(t,2,this.length),32768&(t=this[t+1]|this[t]<<8)?4294901760|t:t},O.prototype.readInt32LE=function(t,e){return e||j(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},O.prototype.readInt32BE=function(t,e){return e||j(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},O.prototype.readFloatLE=function(t,e){return e||j(t,4,this.length),E(this,t,!0,23,4)},O.prototype.readFloatBE=function(t,e){return e||j(t,4,this.length),E(this,t,!1,23,4)},O.prototype.readDoubleLE=function(t,e){return e||j(t,8,this.length),E(this,t,!0,52,8)},O.prototype.readDoubleBE=function(t,e){return e||j(t,8,this.length),E(this,t,!1,52,8)},O.prototype.writeUIntLE=function(t,e,r,n){t=+t,e|=0,r|=0,n||W(this,t,e,r,Math.pow(2,8*r)-1,0),n=1;var i=0;for(this[e]=255&t;++i<r&&(n*=256);)this[e+i]=t/n&255;return e+r},O.prototype.writeUIntBE=function(t,e,r,n){t=+t,e|=0,r|=0,n||W(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)this[e+n]=t/i&255;return e+r},O.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,1,255,0),O.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},O.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,2,65535,0),O.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):z(this,t,e,!0),e+2},O.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,2,65535,0),O.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):z(this,t,e,!1),e+2},O.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,4,4294967295,0),O.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):G(this,t,e,!0),e+4},O.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,4,4294967295,0),O.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):G(this,t,e,!1),e+4},O.prototype.writeIntLE=function(t,e,r,n){t=+t,e|=0,n||W(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n),n=0;var i=1,o=0;for(this[e]=255&t;++n<r&&(i*=256);)0>t&&0===o&&0!==this[e+n-1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},O.prototype.writeIntBE=function(t,e,r,n){t=+t,e|=0,n||W(this,t,e,r,(n=Math.pow(2,8*r-1))-1,-n);var i=1,o=0;for(this[e+(n=r-1)]=255&t;0<=--n&&(i*=256);)0>t&&0===o&&0!==this[e+n+1]&&(o=1),this[e+n]=(t/i>>0)-o&255;return e+r},O.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,1,127,-128),O.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),0>t&&(t=255+t+1),this[e]=255&t,e+1},O.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,2,32767,-32768),O.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):z(this,t,e,!0),e+2},O.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,2,32767,-32768),O.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):z(this,t,e,!1),e+2},O.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,4,2147483647,-2147483648),O.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):G(this,t,e,!0),e+4},O.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||W(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),O.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):G(this,t,e,!1),e+4},O.prototype.writeFloatLE=function(t,e,r){return r||V(this,0,e,4),_(this,t,e,!0,23,4),e+4},O.prototype.writeFloatBE=function(t,e,r){return r||V(this,0,e,4),_(this,t,e,!1,23,4),e+4},O.prototype.writeDoubleLE=function(t,e,r){return r||V(this,0,e,8),_(this,t,e,!0,52,8),e+8},O.prototype.writeDoubleBE=function(t,e,r){return r||V(this,0,e,8),_(this,t,e,!1,52,8),e+8},O.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),0<n&&n<r&&(n=r),n===r||0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>n)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;if(this===t&&r<e&&e<n)for(n=i-1;0<=n;--n)t[n+e]=this[n+r];else if(1e3>i||!O.TYPED_ARRAY_SUPPORT)for(n=0;n<i;++n)t[n+e]=this[n+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+i),e);return i},O.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var i=t.charCodeAt(0);256>i&&(t=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!O.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(0>e||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(n=e;n<r;++n)this[n]=t;else for(i=(t=L(t)?t:H(new O(t,n).toString())).length,n=0;n<r-e;++n)this[n+e]=t[n%i];return this};var q=/[^+\/0-9A-Za-z-_]/g;function H(t,e){e=e||1/0;for(var r,n=t.length,i=null,o=[],s=0;s<n;++s){if(55295<(r=t.charCodeAt(s))&&57344>r){if(!i){if(56319<r){-1<(e-=3)&&o.push(239,191,189);continue}if(s+1===n){-1<(e-=3)&&o.push(239,191,189);continue}i=r;continue}if(56320>r){-1<(e-=3)&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&-1<(e-=3)&&o.push(239,191,189);if(i=null,128>r){if(0>--e)break;o.push(r)}else if(2048>r){if(0>(e-=2))break;o.push(r>>6|192,63&r|128)}else if(65536>r){if(0>(e-=3))break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(1114112>r))throw Error("Invalid code point");if(0>(e-=4))break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function K(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}function J(t){if(2>(t=(t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")).replace(q,"")).length)t="";else for(;0!=t.length%4;)t+="=";m||v();var e=t.length;if(0<e%4)throw Error("Invalid string. Length must be a multiple of 4");var r="="===t[e-2]?2:"="===t[e-1]?1:0,n=new g(3*e/4-r),i=0<r?e-4:e,o=0;for(e=0;e<i;e+=4){var s=y[t.charCodeAt(e)]<<18|y[t.charCodeAt(e+1)]<<12|y[t.charCodeAt(e+2)]<<6|y[t.charCodeAt(e+3)];n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s}return 2===r?(s=y[t.charCodeAt(e)]<<2|y[t.charCodeAt(e+1)]>>4,n[o++]=255&s):1===r&&(s=y[t.charCodeAt(e)]<<10|y[t.charCodeAt(e+1)]<<4|y[t.charCodeAt(e+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}function X(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function Z(t){return null!=t&&(!!t._isBuffer||$(t)||"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&$(t.slice(0,0)))}function $(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}var Q=Object.freeze({__proto__:null,INSPECT_MAX_BYTES:50,kMaxLength:T,Buffer:O,SlowBuffer:function(t){return+t!=t&&(t=0),O.alloc(+t)},isBuffer:Z}),tt=f((function(t,e){function r(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];return new(Q.Buffer.bind.apply(Q.Buffer,n([void 0,t],e)))}var n=a&&a.__spreadArrays||function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;t=Array(t);var n=0;for(e=0;e<r;e++)for(var i=arguments[e],o=0,s=i.length;o<s;o++,n++)t[n]=i[o];return t};Object.defineProperty(e,"__esModule",{value:!0}),e.Buffer=Q.Buffer,e.bufferAllocUnsafe=Q.Buffer.allocUnsafe||r,e.bufferFrom=Q.Buffer.from||r}));function et(){throw Error("setTimeout has not been defined")}function rt(){throw Error("clearTimeout has not been defined")}u(tt);var nt=et,it=rt;function ot(t){if(nt===setTimeout)return setTimeout(t,0);if((nt===et||!nt)&&setTimeout)return nt=setTimeout,setTimeout(t,0);try{return nt(t,0)}catch(e){try{return nt.call(null,t,0)}catch(e){return nt.call(this,t,0)}}}"function"==typeof p.setTimeout&&(nt=setTimeout),"function"==typeof p.clearTimeout&&(it=clearTimeout);var st,at=[],ut=!1,ft=-1;function ht(){ut&&st&&(ut=!1,st.length?at=st.concat(at):ft=-1,at.length&&ct())}function ct(){if(!ut){var t=ot(ht);ut=!0;for(var e=at.length;e;){for(st=at,at=[];++ft<e;)st&&st[ft].run();ft=-1,e=at.length}st=null,ut=!1,function(t){if(it===clearTimeout)return clearTimeout(t);if((it===rt||!it)&&clearTimeout)return it=clearTimeout,clearTimeout(t);try{it(t)}catch(e){try{return it.call(null,t)}catch(e){return it.call(this,t)}}}(t)}}function lt(t){var e=Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];at.push(new pt(t,e)),1!==at.length||ut||ot(ct)}function pt(t,e){this.fun=t,this.array=e}function dt(){}pt.prototype.run=function(){this.fun.apply(null,this.array)};var yt=p.performance||{},gt=yt.now||yt.mozNow||yt.msNow||yt.oNow||yt.webkitNow||function(){return(new Date).getTime()},mt=new Date,vt={nextTick:lt,title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:dt,addListener:dt,once:dt,off:dt,removeListener:dt,removeAllListeners:dt,emit:dt,binding:function(){throw Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(){throw Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(t){var e=.001*gt.call(yt),r=Math.floor(e);return e=Math.floor(e%1*1e9),t&&(r-=t[0],0>(e-=t[1])&&(r--,e+=1e9)),[r,e]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-mt)/1e3}},wt="function"==typeof Object.create?function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:function(t,e){function r(){}t.super_=e,r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t},bt=/%[sdj%]/g;function Et(t){if(!Ut(t)){for(var e=[],r=0;r<arguments.length;r++)e.push(At(arguments[r]));return e.join(" ")}r=1;var n=arguments,i=n.length;e=String(t).replace(bt,(function(t){if("%%"===t)return"%";if(r>=i)return t;switch(t){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(t){return"[Circular]"}default:return t}}));for(var o=n[r];r<i;o=n[++r])e=null!==o&&Mt(o)?e+" "+At(o):e+" "+o;return e}function _t(t,e){if(Ft(p.process))return function(){return _t(t,e).apply(this,arguments)};if(!0===vt.noDeprecation)return t;var r=!1;return function(){if(!r){if(vt.throwDeprecation)throw Error(e);vt.traceDeprecation?console.trace(e):console.error(e),r=!0}return t.apply(this,arguments)}}var St,Rt={};function Tt(t){return Ft(St)&&(St=vt.env.NODE_DEBUG||""),t=t.toUpperCase(),Rt[t]||(new RegExp("\\b"+t+"\\b","i").test(St)?Rt[t]=function(){var e=Et.apply(null,arguments);console.error("%s %d: %s",t,0,e)}:Rt[t]=function(){}),Rt[t]}function At(t,e){var r={seen:[],stylize:It};return 3<=arguments.length&&(r.depth=arguments[2]),4<=arguments.length&&(r.colors=arguments[3]),Lt(e)?r.showHidden=e:e&&qt(r,e),Ft(r.showHidden)&&(r.showHidden=!1),Ft(r.depth)&&(r.depth=2),Ft(r.colors)&&(r.colors=!1),Ft(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=Ot),Pt(r,t,r.depth)}function Ot(t,e){return(e=At.styles[e])?"["+At.colors[e][0]+"m"+t+"["+At.colors[e][1]+"m":t}function It(t){return t}function Pt(t,e,r){if(t.customInspect&&e&&jt(e.inspect)&&e.inspect!==At&&(!e.constructor||e.constructor.prototype!==e)){var n=e.inspect(r,t);return Ut(n)||(n=Pt(t,n,r)),n}if(n=function(t,e){if(Ft(e))return t.stylize("undefined","undefined");if(Ut(e))return e="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'",t.stylize(e,"string");if(Ct(e))return t.stylize(""+e,"number");if(Lt(e))return t.stylize(""+e,"boolean");if(null===e)return t.stylize("null","null")}(t,e))return n;var i=Object.keys(e),o=function(t){var e={};return t.forEach((function(t){e[t]=!0})),e}(i);if(t.showHidden&&(i=Object.getOwnPropertyNames(e)),Yt(e)&&(0<=i.indexOf("message")||0<=i.indexOf("description")))return Bt(e);if(0===i.length){if(jt(e))return t.stylize("[Function"+(e.name?": "+e.name:"")+"]","special");if(Dt(e))return t.stylize(RegExp.prototype.toString.call(e),"regexp");if(xt(e))return t.stylize(Date.prototype.toString.call(e),"date");if(Yt(e))return Bt(e)}n="";var s=!1,a=["{","}"];return kt(e)&&(s=!0,a=["[","]"]),jt(e)&&(n=" [Function"+(e.name?": "+e.name:"")+"]"),Dt(e)&&(n=" "+RegExp.prototype.toString.call(e)),xt(e)&&(n=" "+Date.prototype.toUTCString.call(e)),Yt(e)&&(n=" "+Bt(e)),0!==i.length||s&&0!=e.length?0>r?Dt(e)?t.stylize(RegExp.prototype.toString.call(e),"regexp"):t.stylize("[Object]","special"):(t.seen.push(e),i=s?function(t,e,r,n,i){for(var o=[],s=0,a=e.length;s<a;++s)Object.prototype.hasOwnProperty.call(e,String(s))?o.push(Nt(t,e,r,n,String(s),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(Nt(t,e,r,n,i,!0))})),o}(t,e,r,o,i):i.map((function(n){return Nt(t,e,r,o,n,s)})),t.seen.pop(),function(t,e,r){return 60<t.reduce((function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)?r[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+r[1]:r[0]+e+" "+t.join(", ")+" "+r[1]}(i,n,a)):a[0]+n+a[1]}function Bt(t){return"["+Error.prototype.toString.call(t)+"]"}function Nt(t,e,r,n,i,o){var s,a;if((e=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?a=e.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):e.set&&(a=t.stylize("[Setter]","special")),Object.prototype.hasOwnProperty.call(n,i)||(s="["+i+"]"),a||(0>t.seen.indexOf(e.value)?-1<(a=Pt(t,e.value,null===r?null:r-1)).indexOf("\n")&&(a=o?a.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+a.split("\n").map((function(t){return"   "+t})).join("\n")):a=t.stylize("[Circular]","special")),Ft(s)){if(o&&i.match(/^\d+$/))return a;(s=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=t.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=t.stylize(s,"string"))}return s+": "+a}function kt(t){return Array.isArray(t)}function Lt(t){return"boolean"==typeof t}function Ct(t){return"number"==typeof t}function Ut(t){return"string"==typeof t}function Ft(t){return void 0===t}function Dt(t){return Mt(t)&&"[object RegExp]"===Object.prototype.toString.call(t)}function Mt(t){return"object"==typeof t&&null!==t}function xt(t){return Mt(t)&&"[object Date]"===Object.prototype.toString.call(t)}function Yt(t){return Mt(t)&&("[object Error]"===Object.prototype.toString.call(t)||t instanceof Error)}function jt(t){return"function"==typeof t}function Wt(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t}function zt(t){return 10>t?"0"+t.toString(10):t.toString(10)}At.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},At.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};var Gt="Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");function Vt(){var t=new Date,e=[zt(t.getHours()),zt(t.getMinutes()),zt(t.getSeconds())].join(":");return[t.getDate(),Gt[t.getMonth()],e].join(" ")}function qt(t,e){if(!e||!Mt(e))return t;for(var r=Object.keys(e),n=r.length;n--;)t[r[n]]=e[r[n]];return t}var Ht={inherits:wt,_extend:qt,log:function(){console.log("%s - %s",Vt(),Et.apply(null,arguments))},isBuffer:function(t){return Z(t)},isPrimitive:Wt,isFunction:jt,isError:Yt,isDate:xt,isObject:Mt,isRegExp:Dt,isUndefined:Ft,isSymbol:function(t){return"symbol"==typeof t},isString:Ut,isNumber:Ct,isNullOrUndefined:function(t){return null==t},isNull:function(t){return null===t},isBoolean:Lt,isArray:kt,inspect:At,deprecate:_t,format:Et,debuglog:Tt};function Kt(t,e){if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0}var Jt,Xt=Object.prototype.hasOwnProperty,Zt=Object.keys||function(t){var e,r=[];for(e in t)Xt.call(t,e)&&r.push(e);return r},$t=Array.prototype.slice;function Qt(){return void 0!==Jt?Jt:Jt="foo"===function(){}.name}function te(t){return!Z(t)&&"function"==typeof p.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&!!(t instanceof DataView||t.buffer&&t.buffer instanceof ArrayBuffer))}function ee(t,e){t||ae(t,!0,e,"==",ue)}var re=/\s*function\s+([^\(\s]*)\s*/;function ne(t){if(jt(t))return Qt()?t.name:(t=t.toString().match(re))&&t[1]}function ie(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=oe(se(this.actual),128)+" "+this.operator+" "+oe(se(this.expected),128),this.generatedMessage=!0);var e=t.stackStartFunction||ae;Error.captureStackTrace?Error.captureStackTrace(this,e):(t=Error()).stack&&(t=t.stack,e=ne(e),0<=(e=t.indexOf("\n"+e))&&(e=t.indexOf("\n",e+1),t=t.substring(e+1)),this.stack=t)}function oe(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function se(t){return Qt()||!jt(t)?At(t):"[Function"+((t=ne(t))?": "+t:"")+"]"}function ae(t,e,r,n,i){throw new ie({message:r,actual:t,expected:e,operator:n,stackStartFunction:i})}function ue(t,e){t||ae(t,!0,e,"==",ue)}function fe(t,e,r,n){if(t===e)return!0;if(Z(t)&&Z(e))return 0===Kt(t,e);if(xt(t)&&xt(e))return t.getTime()===e.getTime();if(Dt(t)&&Dt(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(!te(t)||!te(e)||Object.prototype.toString.call(t)!==Object.prototype.toString.call(e)||t instanceof Float32Array||t instanceof Float64Array){if(Z(t)!==Z(e))return!1;var i=(n=n||{actual:[],expected:[]}).actual.indexOf(t);return-1!==i&&i===n.expected.indexOf(e)||(n.actual.push(t),n.expected.push(e),function(t,e,r,n){if(null==t||null==e)return!1;if(Wt(t)||Wt(e))return t===e;if(r&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var i=he(t),o=he(e);if(i&&!o||!i&&o)return!1;if(i)return t=$t.call(t),e=$t.call(e),fe(t,e,r);i=Zt(t);var s=Zt(e);if(i.length!==s.length)return!1;for(i.sort(),s.sort(),o=i.length-1;0<=o;o--)if(i[o]!==s[o])return!1;for(o=i.length-1;0<=o;o--)if(s=i[o],!fe(t[s],e[s],r,n))return!1;return!0}(t,e,r,n))}return 0===Kt(new Uint8Array(t.buffer),new Uint8Array(e.buffer))}return r?t===e:t==e}function he(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function ce(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function le(t,e,r,n){if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof r&&(n=r,r=null);try{e()}catch(t){var i=t}e=i,n=(r&&r.name?" ("+r.name+").":".")+(n?" "+n:"."),t&&!e&&ae(e,r,"Missing expected exception"+n),i="string"==typeof n;var o=!t&&e&&!r;if((!t&&Yt(e)&&i&&ce(e,r)||o)&&ae(e,r,"Got unwanted exception"+n),t&&e&&r&&!ce(e,r)||!t&&e)throw e}ee.AssertionError=ie,wt(ie,Error),ee.fail=ae,ee.ok=ue,ee.equal=function t(e,r,n){e!=r&&ae(e,r,n,"==",t)},ee.notEqual=function t(e,r,n){e==r&&ae(e,r,n,"!=",t)},ee.deepEqual=function t(e,r,n){fe(e,r,!1)||ae(e,r,n,"deepEqual",t)},ee.deepStrictEqual=function t(e,r,n){fe(e,r,!0)||ae(e,r,n,"deepStrictEqual",t)},ee.notDeepEqual=function t(e,r,n){fe(e,r,!1)&&ae(e,r,n,"notDeepEqual",t)},ee.notDeepStrictEqual=function t(e,r,n){fe(e,r,!0)&&ae(e,r,n,"notDeepStrictEqual",t)},ee.strictEqual=function t(e,r,n){e!==r&&ae(e,r,n,"===",t)},ee.notStrictEqual=function t(e,r,n){e===r&&ae(e,r,n,"!==",t)},ee.throws=function(t,e,r){le(!0,t,e,r)},ee.doesNotThrow=function(t,e,r){le(!1,t,e,r)},ee.ifError=function(t){if(t)throw t};var pe=f((function(t,e){function r(t){return function(t){function e(e){for(var r=[],i=1;i<arguments.length;i++)r[i-1]=arguments[i];return(r=t.call(this,n(e,r))||this).code=e,r[u]=e,r.name=t.prototype.name+" ["+r[u]+"]",r}return s(e,t),e}(t)}function n(t,e){ee.strictEqual(typeof t,"string");var r=f[t];if(ee(r,"An invalid error message key was used: "+t+"."),"function"==typeof r)t=r;else{if(t=Ht.format,void 0===e||0===e.length)return r;e.unshift(r)}return String(t.apply(null,e))}function i(t,e){f[t]="function"==typeof e?e:String(e)}function o(t,e){if(ee(t,"expected is required"),ee("string"==typeof e,"thing is required"),Array.isArray(t)){var r=t.length;return ee(0<r,"At least one expected value needs to be specified"),t=t.map((function(t){return String(t)})),2<r?"one of "+e+" "+t.slice(0,r-1).join(", ")+", or "+t[r-1]:2===r?"one of "+e+" "+t[0]+" or "+t[1]:"of "+e+" "+t[0]}return"of "+e+" "+String(t)}var s=a&&a.__extends||function(){function t(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)}return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(e,"__esModule",{value:!0});var u="undefined"==typeof Symbol?"_kCode":Symbol("code"),f={};t=function(t){function r(r){if("object"!=typeof r||null===r)throw new e.TypeError("ERR_INVALID_ARG_TYPE","options","object");var n=r.message?t.call(this,r.message)||this:t.call(this,Ht.inspect(r.actual).slice(0,128)+" "+r.operator+" "+Ht.inspect(r.expected).slice(0,128))||this;return n.generatedMessage=!r.message,n.name="AssertionError [ERR_ASSERTION]",n.code="ERR_ASSERTION",n.actual=r.actual,n.expected=r.expected,n.operator=r.operator,e.Error.captureStackTrace(n,r.stackStartFunction),n}return s(r,t),r}(a.Error),e.AssertionError=t,e.message=n,e.E=i,e.Error=r(a.Error),e.TypeError=r(a.TypeError),e.RangeError=r(a.RangeError),i("ERR_ARG_NOT_ITERABLE","%s must be iterable"),i("ERR_ASSERTION","%s"),i("ERR_BUFFER_OUT_OF_BOUNDS",(function(t,e){return e?"Attempt to write outside buffer bounds":'"'+t+'" is outside of buffer bounds'})),i("ERR_CHILD_CLOSED_BEFORE_REPLY","Child closed before reply received"),i("ERR_CONSOLE_WRITABLE_STREAM","Console expects a writable stream instance for %s"),i("ERR_CPU_USAGE","Unable to obtain cpu usage %s"),i("ERR_DNS_SET_SERVERS_FAILED",(function(t,e){return'c-ares failed to set servers: "'+t+'" ['+e+"]"})),i("ERR_FALSY_VALUE_REJECTION","Promise was rejected with falsy value"),i("ERR_ENCODING_NOT_SUPPORTED",(function(t){return'The "'+t+'" encoding is not supported'})),i("ERR_ENCODING_INVALID_ENCODED_DATA",(function(t){return"The encoded data was not valid for encoding "+t})),i("ERR_HTTP_HEADERS_SENT","Cannot render headers after they are sent to the client"),i("ERR_HTTP_INVALID_STATUS_CODE","Invalid status code: %s"),i("ERR_HTTP_TRAILER_INVALID","Trailers are invalid with this transfer encoding"),i("ERR_INDEX_OUT_OF_RANGE","Index out of range"),i("ERR_INVALID_ARG_TYPE",(function(t,e,r){if(ee(t,"name is required"),e.includes("not ")){var n="must not be";e=e.split("not ")[1]}else n="must be";if(Array.isArray(t))n="The "+t.map((function(t){return'"'+t+'"'})).join(", ")+" arguments "+n+" "+o(e,"type");else if(t.includes(" argument"))n="The "+t+" "+n+" "+o(e,"type");else{var i=t.includes(".")?"property":"argument";n='The "'+t+'" '+i+" "+n+" "+o(e,"type")}return 3<=arguments.length&&(n+=". Received type "+(null!==r?typeof r:"null")),n})),i("ERR_INVALID_ARRAY_LENGTH",(function(t,e,r){return ee.strictEqual(typeof r,"number"),'The array "'+t+'" (length '+r+") must be of length "+e+"."})),i("ERR_INVALID_BUFFER_SIZE","Buffer size must be a multiple of %s"),i("ERR_INVALID_CALLBACK","Callback must be a function"),i("ERR_INVALID_CHAR","Invalid character in %s"),i("ERR_INVALID_CURSOR_POS","Cannot set cursor row without setting its column"),i("ERR_INVALID_FD",'"fd" must be a positive integer: %s'),i("ERR_INVALID_FILE_URL_HOST",'File URL host must be "localhost" or empty on %s'),i("ERR_INVALID_FILE_URL_PATH","File URL path %s"),i("ERR_INVALID_HANDLE_TYPE","This handle type cannot be sent"),i("ERR_INVALID_IP_ADDRESS","Invalid IP address: %s"),i("ERR_INVALID_OPT_VALUE",(function(t,e){return'The value "'+String(e)+'" is invalid for option "'+t+'"'})),i("ERR_INVALID_OPT_VALUE_ENCODING",(function(t){return'The value "'+String(t)+'" is invalid for option "encoding"'})),i("ERR_INVALID_REPL_EVAL_CONFIG",'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'),i("ERR_INVALID_SYNC_FORK_INPUT","Asynchronous forks do not support Buffer, Uint8Array or string input: %s"),i("ERR_INVALID_THIS",'Value of "this" must be of type %s'),i("ERR_INVALID_TUPLE","%s must be an iterable %s tuple"),i("ERR_INVALID_URL","Invalid URL: %s"),i("ERR_INVALID_URL_SCHEME",(function(t){return"The URL must be "+o(t,"scheme")})),i("ERR_IPC_CHANNEL_CLOSED","Channel closed"),i("ERR_IPC_DISCONNECTED","IPC channel is already disconnected"),i("ERR_IPC_ONE_PIPE","Child process can have only one IPC pipe"),i("ERR_IPC_SYNC_FORK","IPC cannot be used with synchronous forks"),i("ERR_MISSING_ARGS",(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];ee(0<t.length,"At least one arg needs to be specified"),e="The ";var r=t.length;switch(t=t.map((function(t){return'"'+t+'"'})),r){case 1:e+=t[0]+" argument";break;case 2:e+=t[0]+" and "+t[1]+" arguments";break;default:e+=t.slice(0,r-1).join(", "),e+=", and "+t[r-1]+" arguments"}return e+" must be specified"})),i("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),i("ERR_NAPI_CONS_FUNCTION","Constructor must be a function"),i("ERR_NAPI_CONS_PROTOTYPE_OBJECT","Constructor.prototype must be an object"),i("ERR_NO_CRYPTO","Node.js is not compiled with OpenSSL crypto support"),i("ERR_NO_LONGER_SUPPORTED","%s is no longer supported"),i("ERR_PARSE_HISTORY_DATA","Could not parse history data in %s"),i("ERR_SOCKET_ALREADY_BOUND","Socket is already bound"),i("ERR_SOCKET_BAD_PORT","Port should be > 0 and < 65536"),i("ERR_SOCKET_BAD_TYPE","Bad socket type specified. Valid types are: udp4, udp6"),i("ERR_SOCKET_CANNOT_SEND","Unable to send data"),i("ERR_SOCKET_CLOSED","Socket is closed"),i("ERR_SOCKET_DGRAM_NOT_RUNNING","Not running"),i("ERR_STDERR_CLOSE","process.stderr cannot be closed"),i("ERR_STDOUT_CLOSE","process.stdout cannot be closed"),i("ERR_STREAM_WRAP","Stream has StringDecoder set or is in objectMode"),i("ERR_TLS_CERT_ALTNAME_INVALID","Hostname/IP does not match certificate's altnames: %s"),i("ERR_TLS_DH_PARAM_SIZE",(function(t){return"DH parameter size "+t+" is less than 2048"})),i("ERR_TLS_HANDSHAKE_TIMEOUT","TLS handshake timeout"),i("ERR_TLS_RENEGOTIATION_FAILED","Failed to renegotiate"),i("ERR_TLS_REQUIRED_SERVER_NAME",'"servername" is required parameter for Server.addContext'),i("ERR_TLS_SESSION_ATTACK","TSL session renegotiation attack detected"),i("ERR_TRANSFORM_ALREADY_TRANSFORMING","Calling transform done when still transforming"),i("ERR_TRANSFORM_WITH_LENGTH_0","Calling transform done when writableState.length != 0"),i("ERR_UNKNOWN_ENCODING","Unknown encoding: %s"),i("ERR_UNKNOWN_SIGNAL","Unknown signal: %s"),i("ERR_UNKNOWN_STDIN_TYPE","Unknown stdin file type"),i("ERR_UNKNOWN_STREAM_TYPE","Unknown stream file type"),i("ERR_V8BREAKITERATOR","Full ICU data not installed. See https://github.com/nodejs/node/wiki/Intl")}));u(pe);var de=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.ENCODING_UTF8="utf8",e.assertEncoding=function(t){if(t&&!tt.Buffer.isEncoding(t))throw new pe.TypeError("ERR_INVALID_OPT_VALUE_ENCODING",t)},e.strToEncoding=function(t,r){return r&&r!==e.ENCODING_UTF8?"buffer"===r?new tt.Buffer(t):new tt.Buffer(t).toString(r):t}}));u(de);var ye=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var r=h.constants.S_IFMT,n=h.constants.S_IFDIR,i=h.constants.S_IFREG,o=h.constants.S_IFBLK,s=h.constants.S_IFCHR,a=h.constants.S_IFLNK,u=h.constants.S_IFIFO,f=h.constants.S_IFSOCK;t=function(){function t(){this.name="",this.mode=0}return t.build=function(e,r){var n=new t,i=e.getNode().mode;return n.name=de.strToEncoding(e.getName(),r),n.mode=i,n},t.prototype._checkModeProperty=function(t){return(this.mode&r)===t},t.prototype.isDirectory=function(){return this._checkModeProperty(n)},t.prototype.isFile=function(){return this._checkModeProperty(i)},t.prototype.isBlockDevice=function(){return this._checkModeProperty(o)},t.prototype.isCharacterDevice=function(){return this._checkModeProperty(s)},t.prototype.isSymbolicLink=function(){return this._checkModeProperty(a)},t.prototype.isFIFO=function(){return this._checkModeProperty(u)},t.prototype.isSocket=function(){return this._checkModeProperty(f)},t}(),e.Dirent=t,e.default=t}));function ge(t,e){for(var r=0,n=t.length-1;0<=n;n--){var i=t[n];"."===i?t.splice(n,1):".."===i?(t.splice(n,1),r++):r&&(t.splice(n,1),r--)}if(e)for(;r--;r)t.unshift("..");return t}u(ye);function me(){for(var t="",e=!1,r=arguments.length-1;-1<=r&&!e;r--){var n=0<=r?arguments[r]:"/";if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(t=n+"/"+t,e="/"===n.charAt(0))}return(e?"/":"")+(t=ge(_e(t.split("/"),(function(t){return!!t})),!e).join("/"))||"."}function ve(t,e){function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var r=t.length-1;0<=r&&""===t[r];r--);return e>r?[]:t.slice(e,r-e+1)}t=me(t).substr(1),e=me(e).substr(1),t=r(t.split("/")),e=r(e.split("/"));for(var n=Math.min(t.length,e.length),i=n,o=0;o<n;o++)if(t[o]!==e[o]){i=o;break}for(n=[],o=i;o<t.length;o++)n.push("..");return(n=n.concat(e.slice(i))).join("/")}var we="/",be=ve,Ee=me;function _e(t,e){if(t.filter)return t.filter(e);for(var r=[],n=0;n<t.length;n++)e(t[n],n,t)&&r.push(t[n]);return r}"ab".substr(-1);var Se=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),t="function"==typeof n?n.bind(a):setTimeout.bind(a),e.default=t}));u(Se);var Re=f((function(t,e){function r(){var t=vt||{};return t.getuid||(t.getuid=function(){return 0}),t.getgid||(t.getgid=function(){return 0}),t.cwd||(t.cwd=function(){return"/"}),t.nextTick||(t.nextTick=Se.default),t.emitWarning||(t.emitWarning=function(t,e){console.warn(e+(e?": ":"")+t)}),t.env||(t.env={}),t}Object.defineProperty(e,"__esModule",{value:!0}),e.createProcess=r,e.default=r()}));function Te(){}function Ae(){Ae.init.call(this)}function Oe(t,e,r,n){var i;if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');if(i=t._events){i.newListener&&(t.emit("newListener",e,r.listener?r.listener:r),i=t._events);var o=i[e]}else i=t._events=new Te,t._eventsCount=0;return o?("function"==typeof o?o=i[e]=n?[r,o]:[o,r]:n?o.unshift(r):o.push(r),o.warned||(r=void 0===t._maxListeners?Ae.defaultMaxListeners:t._maxListeners)&&0<r&&o.length>r&&(o.warned=!0,(r=Error("Possible EventEmitter memory leak detected. "+o.length+" "+e+" listeners added. Use emitter.setMaxListeners() to increase limit")).name="MaxListenersExceededWarning",r.emitter=t,r.type=e,r.count=o.length,"function"==typeof console.warn?console.warn(r):console.log(r))):(i[e]=r,++t._eventsCount),t}function Ie(t,e,r){function n(){t.removeListener(e,n),i||(i=!0,r.apply(t,arguments))}var i=!1;return n.listener=r,n}function Pe(t){var e=this._events;if(e){if("function"==typeof(t=e[t]))return 1;if(t)return t.length}return 0}function Be(t,e){for(var r=Array(e);e--;)r[e]=t[e];return r}u(Re),Te.prototype=Object.create(null),Ae.EventEmitter=Ae,Ae.usingDomains=!1,Ae.prototype.domain=void 0,Ae.prototype._events=void 0,Ae.prototype._maxListeners=void 0,Ae.defaultMaxListeners=10,Ae.init=function(){this.domain=null,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new Te,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},Ae.prototype.setMaxListeners=function(t){if("number"!=typeof t||0>t||isNaN(t))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=t,this},Ae.prototype.getMaxListeners=function(){return void 0===this._maxListeners?Ae.defaultMaxListeners:this._maxListeners},Ae.prototype.emit=function(t){var e,r,n="error"===t;if(e=this._events)n=n&&null==e.error;else if(!n)return!1;var i=this.domain;if(n){if(e=arguments[1],!i){if(e instanceof Error)throw e;throw(i=Error('Uncaught, unspecified "error" event. ('+e+")")).context=e,i}return e||(e=Error('Uncaught, unspecified "error" event')),e.domainEmitter=this,e.domain=i,e.domainThrown=!1,i.emit("error",e),!1}if(!(i=e[t]))return!1;e="function"==typeof i;var o=arguments.length;switch(o){case 1:if(e)i.call(this);else for(i=Be(i,e=i.length),n=0;n<e;++n)i[n].call(this);break;case 2:if(n=arguments[1],e)i.call(this,n);else for(i=Be(i,e=i.length),o=0;o<e;++o)i[o].call(this,n);break;case 3:if(n=arguments[1],o=arguments[2],e)i.call(this,n,o);else for(i=Be(i,e=i.length),r=0;r<e;++r)i[r].call(this,n,o);break;case 4:if(n=arguments[1],o=arguments[2],r=arguments[3],e)i.call(this,n,o,r);else{i=Be(i,e=i.length);for(var s=0;s<e;++s)i[s].call(this,n,o,r)}break;default:for(n=Array(o-1),r=1;r<o;r++)n[r-1]=arguments[r];if(e)i.apply(this,n);else for(i=Be(i,e=i.length),o=0;o<e;++o)i[o].apply(this,n)}return!0},Ae.prototype.addListener=function(t,e){return Oe(this,t,e,!1)},Ae.prototype.on=Ae.prototype.addListener,Ae.prototype.prependListener=function(t,e){return Oe(this,t,e,!0)},Ae.prototype.once=function(t,e){if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');return this.on(t,Ie(this,t,e)),this},Ae.prototype.prependOnceListener=function(t,e){if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');return this.prependListener(t,Ie(this,t,e)),this},Ae.prototype.removeListener=function(t,e){var r;if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');var n=this._events;if(!n)return this;var i=n[t];if(!i)return this;if(i===e||i.listener&&i.listener===e)0==--this._eventsCount?this._events=new Te:(delete n[t],n.removeListener&&this.emit("removeListener",t,i.listener||e));else if("function"!=typeof i){var o=-1;for(r=i.length;0<r--;)if(i[r]===e||i[r].listener&&i[r].listener===e){var s=i[r].listener;o=r;break}if(0>o)return this;if(1===i.length){if(i[0]=void 0,0==--this._eventsCount)return this._events=new Te,this;delete n[t]}else{r=o+1;for(var a=i.length;r<a;o+=1,r+=1)i[o]=i[r];i.pop()}n.removeListener&&this.emit("removeListener",t,s||e)}return this},Ae.prototype.removeAllListeners=function(t){var e=this._events;if(!e)return this;if(!e.removeListener)return 0===arguments.length?(this._events=new Te,this._eventsCount=0):e[t]&&(0==--this._eventsCount?this._events=new Te:delete e[t]),this;if(0===arguments.length){e=Object.keys(e);for(var r,n=0;n<e.length;++n)"removeListener"!==(r=e[n])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=new Te,this._eventsCount=0,this}if("function"==typeof(e=e[t]))this.removeListener(t,e);else if(e)do{this.removeListener(t,e[e.length-1])}while(e[0]);return this},Ae.prototype.listeners=function(t){var e=this._events;if(e)if(t=e[t])if("function"==typeof t)t=[t.listener||t];else{e=Array(t.length);for(var r=0;r<e.length;++r)e[r]=t[r].listener||t[r];t=e}else t=[];else t=[];return t},Ae.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):Pe.call(t,e)},Ae.prototype.listenerCount=Pe,Ae.prototype.eventNames=function(){return 0<this._eventsCount?Reflect.ownKeys(this._events):[]};var Ne=f((function(t,e){var r=a&&a.__extends||function(){function t(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)}return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(e,"__esModule",{value:!0});var n=h.constants.S_IFMT,i=h.constants.S_IFDIR,o=h.constants.S_IFREG,s=h.constants.S_IFLNK,u=h.constants.O_APPEND;e.SEP="/",t=function(t){function e(e,r){void 0===r&&(r=438);var n=t.call(this)||this;return n.uid=Re.default.getuid(),n.gid=Re.default.getgid(),n.atime=new Date,n.mtime=new Date,n.ctime=new Date,n.perm=438,n.mode=o,n.nlink=1,n.perm=r,n.mode|=r,n.ino=e,n}return r(e,t),e.prototype.getString=function(t){return void 0===t&&(t="utf8"),this.getBuffer().toString(t)},e.prototype.setString=function(t){this.buf=tt.bufferFrom(t,"utf8"),this.touch()},e.prototype.getBuffer=function(){return this.buf||this.setBuffer(tt.bufferAllocUnsafe(0)),tt.bufferFrom(this.buf)},e.prototype.setBuffer=function(t){this.buf=tt.bufferFrom(t),this.touch()},e.prototype.getSize=function(){return this.buf?this.buf.length:0},e.prototype.setModeProperty=function(t){this.mode=this.mode&~n|t},e.prototype.setIsFile=function(){this.setModeProperty(o)},e.prototype.setIsDirectory=function(){this.setModeProperty(i)},e.prototype.setIsSymlink=function(){this.setModeProperty(s)},e.prototype.isFile=function(){return(this.mode&n)===o},e.prototype.isDirectory=function(){return(this.mode&n)===i},e.prototype.isSymlink=function(){return(this.mode&n)===s},e.prototype.makeSymlink=function(t){this.symlink=t,this.setIsSymlink()},e.prototype.write=function(t,e,r,n){if(void 0===e&&(e=0),void 0===r&&(r=t.length),void 0===n&&(n=0),this.buf||(this.buf=tt.bufferAllocUnsafe(0)),n+r>this.buf.length){var i=tt.bufferAllocUnsafe(n+r);this.buf.copy(i,0,0,this.buf.length),this.buf=i}return t.copy(this.buf,n,e,e+r),this.touch(),r},e.prototype.read=function(t,e,r,n){return void 0===e&&(e=0),void 0===r&&(r=t.byteLength),void 0===n&&(n=0),this.buf||(this.buf=tt.bufferAllocUnsafe(0)),r>t.byteLength&&(r=t.byteLength),r+n>this.buf.length&&(r=this.buf.length-n),this.buf.copy(t,e,n,n+r),r},e.prototype.truncate=function(t){if(void 0===t&&(t=0),t)if(this.buf||(this.buf=tt.bufferAllocUnsafe(0)),t<=this.buf.length)this.buf=this.buf.slice(0,t);else{var e=tt.bufferAllocUnsafe(0);this.buf.copy(e),e.fill(0,t)}else this.buf=tt.bufferAllocUnsafe(0);this.touch()},e.prototype.chmod=function(t){this.perm=t,this.mode=-512&this.mode|t,this.touch()},e.prototype.chown=function(t,e){this.uid=t,this.gid=e,this.touch()},e.prototype.touch=function(){this.mtime=new Date,this.emit("change",this)},e.prototype.canRead=function(t,e){return void 0===t&&(t=Re.default.getuid()),void 0===e&&(e=Re.default.getgid()),!!(4&this.perm||e===this.gid&&32&this.perm||t===this.uid&&256&this.perm)},e.prototype.canWrite=function(t,e){return void 0===t&&(t=Re.default.getuid()),void 0===e&&(e=Re.default.getgid()),!!(2&this.perm||e===this.gid&&16&this.perm||t===this.uid&&128&this.perm)},e.prototype.del=function(){this.emit("delete",this)},e.prototype.toJSON=function(){return{ino:this.ino,uid:this.uid,gid:this.gid,atime:this.atime.getTime(),mtime:this.mtime.getTime(),ctime:this.ctime.getTime(),perm:this.perm,mode:this.mode,nlink:this.nlink,symlink:this.symlink,data:this.getString()}},e}(Ae.EventEmitter),e.Node=t,t=function(t){function n(e,r,n){var i=t.call(this)||this;return i.children={},i.steps=[],i.ino=0,i.length=0,i.vol=e,i.parent=r,i.steps=r?r.steps.concat([n]):[n],i}return r(n,t),n.prototype.setNode=function(t){this.node=t,this.ino=t.ino},n.prototype.getNode=function(){return this.node},n.prototype.createChild=function(t,e){void 0===e&&(e=this.vol.createNode());var r=new n(this.vol,this,t);return r.setNode(e),e.isDirectory(),this.setChild(t,r),r},n.prototype.setChild=function(t,e){return void 0===e&&(e=new n(this.vol,this,t)),this.children[t]=e,e.parent=this,this.length++,this.emit("child:add",e,this),e},n.prototype.deleteChild=function(t){delete this.children[t.getName()],this.length--,this.emit("child:delete",t,this)},n.prototype.getChild=function(t){if(Object.hasOwnProperty.call(this.children,t))return this.children[t]},n.prototype.getPath=function(){return this.steps.join(e.SEP)},n.prototype.getName=function(){return this.steps[this.steps.length-1]},n.prototype.walk=function(t,e,r){if(void 0===e&&(e=t.length),void 0===r&&(r=0),r>=t.length||r>=e)return this;var n=this.getChild(t[r]);return n?n.walk(t,e,r+1):null},n.prototype.toJSON=function(){return{steps:this.steps,ino:this.ino,children:Object.keys(this.children)}},n}(Ae.EventEmitter),e.Link=t,t=function(){function t(t,e,r,n){this.position=0,this.link=t,this.node=e,this.flags=r,this.fd=n}return t.prototype.getString=function(){return this.node.getString()},t.prototype.setString=function(t){this.node.setString(t)},t.prototype.getBuffer=function(){return this.node.getBuffer()},t.prototype.setBuffer=function(t){this.node.setBuffer(t)},t.prototype.getSize=function(){return this.node.getSize()},t.prototype.truncate=function(t){this.node.truncate(t)},t.prototype.seekTo=function(t){this.position=t},t.prototype.stats=function(){return l.default.build(this.node)},t.prototype.write=function(t,e,r,n){return void 0===e&&(e=0),void 0===r&&(r=t.length),"number"!=typeof n&&(n=this.position),this.flags&u&&(n=this.getSize()),t=this.node.write(t,e,r,n),this.position=n+t,t},t.prototype.read=function(t,e,r,n){return void 0===e&&(e=0),void 0===r&&(r=t.byteLength),"number"!=typeof n&&(n=this.position),t=this.node.read(t,e,r,n),this.position=n+t,t},t.prototype.chmod=function(t){this.node.chmod(t)},t.prototype.chown=function(t,e){this.node.chown(t,e)},t}(),e.File=t}));u(Ne);var ke=Ne.Node,Le=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,r){var n=setTimeout.apply(null,arguments);return n&&"object"==typeof n&&"function"==typeof n.unref&&n.unref(),n}}));function Ce(){this.tail=this.head=null,this.length=0}u(Le),Ce.prototype.push=function(t){t={data:t,next:null},0<this.length?this.tail.next=t:this.head=t,this.tail=t,++this.length},Ce.prototype.unshift=function(t){t={data:t,next:this.head},0===this.length&&(this.tail=t),this.head=t,++this.length},Ce.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return this.head=1===this.length?this.tail=null:this.head.next,--this.length,t}},Ce.prototype.clear=function(){this.head=this.tail=null,this.length=0},Ce.prototype.join=function(t){if(0===this.length)return"";for(var e=this.head,r=""+e.data;e=e.next;)r+=t+e.data;return r},Ce.prototype.concat=function(t){if(0===this.length)return O.alloc(0);if(1===this.length)return this.head.data;t=O.allocUnsafe(t>>>0);for(var e=this.head,r=0;e;)e.data.copy(t,r),r+=e.data.length,e=e.next;return t};var Ue=O.isEncoding||function(t){switch(t&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function Fe(t){if(this.encoding=(t||"utf8").toLowerCase().replace(/[-_]/,""),t&&!Ue(t))throw Error("Unknown encoding: "+t);switch(this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=Me;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=xe;break;default:return void(this.write=De)}this.charBuffer=new O(6),this.charLength=this.charReceived=0}function De(t){return t.toString(this.encoding)}function Me(t){this.charLength=(this.charReceived=t.length%2)?2:0}function xe(t){this.charLength=(this.charReceived=t.length%3)?3:0}Fe.prototype.write=function(t){for(var e="";this.charLength;){if(e=t.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:t.length,t.copy(this.charBuffer,this.charReceived,0,e),this.charReceived+=e,this.charReceived<this.charLength)return"";t=t.slice(e,t.length);var r=(e=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(e.length-1);if(!(55296<=r&&56319>=r)){if(this.charReceived=this.charLength=0,0===t.length)return e;break}this.charLength+=this.surrogateSize,e=""}this.detectIncompleteChar(t);var n=t.length;return this.charLength&&(t.copy(this.charBuffer,0,t.length-this.charReceived,n),n-=this.charReceived),n=(e+=t.toString(this.encoding,0,n)).length-1,55296<=(r=e.charCodeAt(n))&&56319>=r?(r=this.surrogateSize,this.charLength+=r,this.charReceived+=r,this.charBuffer.copy(this.charBuffer,r,0,r),t.copy(this.charBuffer,0,0,r),e.substring(0,n)):e},Fe.prototype.detectIncompleteChar=function(t){for(var e=3<=t.length?3:t.length;0<e;e--){var r=t[t.length-e];if(1==e&&6==r>>5){this.charLength=2;break}if(2>=e&&14==r>>4){this.charLength=3;break}if(3>=e&&30==r>>3){this.charLength=4;break}}this.charReceived=e},Fe.prototype.end=function(t){var e="";return t&&t.length&&(e=this.write(t)),this.charReceived&&(t=this.encoding,e+=this.charBuffer.slice(0,this.charReceived).toString(t)),e},We.ReadableState=je;var Ye=Tt("stream");function je(t,e){t=t||{},this.objectMode=!!t.objectMode,e instanceof dr&&(this.objectMode=this.objectMode||!!t.readableObjectMode),e=t.highWaterMark;var r=this.objectMode?16:16384;this.highWaterMark=e||0===e?e:r,this.highWaterMark=~~this.highWaterMark,this.buffer=new Ce,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.reading=this.endEmitted=this.ended=!1,this.sync=!0,this.resumeScheduled=this.readableListening=this.emittedReadable=this.needReadable=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.encoding=this.decoder=null,t.encoding&&(this.decoder=new Fe(t.encoding),this.encoding=t.encoding)}function We(t){if(!(this instanceof We))return new We(t);this._readableState=new je(t,this),this.readable=!0,t&&"function"==typeof t.read&&(this._read=t.read),Ae.call(this)}function ze(t,e,r,n,i){var o=r,s=null;if(Z(o)||"string"==typeof o||null==o||e.objectMode||(s=new TypeError("Invalid non-string/buffer chunk")),o=s)t.emit("error",o);else if(null===r)e.reading=!1,e.ended||(e.decoder&&(r=e.decoder.end())&&r.length&&(e.buffer.push(r),e.length+=e.objectMode?1:r.length),e.ended=!0,Ve(t));else if(e.objectMode||r&&0<r.length)if(e.ended&&!i)t.emit("error",Error("stream.push() after EOF"));else if(e.endEmitted&&i)t.emit("error",Error("stream.unshift() after end event"));else{if(e.decoder&&!i&&!n){r=e.decoder.write(r);var a=!e.objectMode&&0===r.length}i||(e.reading=!1),a||(e.flowing&&0===e.length&&!e.sync?(t.emit("data",r),t.read(0)):(e.length+=e.objectMode?1:r.length,i?e.buffer.unshift(r):e.buffer.push(r),e.needReadable&&Ve(t))),e.readingMore||(e.readingMore=!0,lt(He,t,e))}else i||(e.reading=!1);return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}function Ge(t,e){if(0>=t||0===e.length&&e.ended)return 0;if(e.objectMode)return 1;if(t!=t)return e.flowing&&e.length?e.buffer.head.data.length:e.length;if(t>e.highWaterMark){var r=t;8388608<=r?r=8388608:(r--,r|=r>>>1,r|=r>>>2,r|=r>>>4,r|=r>>>8,r|=r>>>16,r++),e.highWaterMark=r}return t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0)}function Ve(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(Ye("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?lt(qe,t):qe(t))}function qe(t){Ye("emit readable"),t.emit("readable"),Xe(t)}function He(t,e){for(var r=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(Ye("maybeReadMore read 0"),t.read(0),r!==e.length);)r=e.length;e.readingMore=!1}function Ke(t){Ye("readable nexttick read 0"),t.read(0)}function Je(t,e){e.reading||(Ye("resume read 0"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit("resume"),Xe(t),e.flowing&&!e.reading&&t.read(0)}function Xe(t){var e=t._readableState;for(Ye("flow",e.flowing);e.flowing&&null!==t.read(););}function Ze(t,e){if(0===e.length)return null;if(e.objectMode)var r=e.buffer.shift();else if(!t||t>=e.length)r=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear();else{if(r=e.buffer,e=e.decoder,t<r.head.data.length)e=r.head.data.slice(0,t),r.head.data=r.head.data.slice(t);else{if(t===r.head.data.length)r=r.shift();else if(e){var n=1,i=(e=r.head).data;for(t-=i.length;e=e.next;){var o=e.data,s=t>o.length?o.length:t;if(i=s===o.length?i+o:i+o.slice(0,t),0===(t-=s)){s===o.length?(++n,r.head=e.next?e.next:r.tail=null):(r.head=e,e.data=o.slice(s));break}++n}r.length-=n,r=i}else{for(e=O.allocUnsafe(t),i=1,(n=r.head).data.copy(e),t-=n.data.length;n=n.next;){if(s=t>(o=n.data).length?o.length:t,o.copy(e,e.length-t,0,s),0===(t-=s)){s===o.length?(++i,r.head=n.next?n.next:r.tail=null):(r.head=n,n.data=o.slice(s));break}++i}r.length-=i,r=e}e=r}r=e}return r}function $e(t){var e=t._readableState;if(0<e.length)throw Error('"endReadable()" called on non-empty stream');e.endEmitted||(e.ended=!0,lt(Qe,e,t))}function Qe(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}function tr(t,e){for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r;return-1}function er(){}function rr(t,e,r){this.chunk=t,this.encoding=e,this.callback=r,this.next=null}function nr(t,e){Object.defineProperty(this,"buffer",{get:_t((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")}),t=t||{},this.objectMode=!!t.objectMode,e instanceof dr&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var r=t.highWaterMark,n=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n,this.highWaterMark=~~this.highWaterMark,this.finished=this.ended=this.ending=this.needDrain=!1,this.decodeStrings=!1!==t.decodeStrings,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){var r=e._writableState,n=r.sync,i=r.writecb;r.writing=!1,r.writecb=null,r.length-=r.writelen,r.writelen=0,t?(--r.pendingcb,n?lt(i,t):i(t),e._writableState.errorEmitted=!0,e.emit("error",t)):((t=ur(r))||r.corked||r.bufferProcessing||!r.bufferedRequest||ar(e,r),n?lt(sr,e,r,t,i):sr(e,r,t,i))},this.writecb=null,this.writelen=0,this.lastBufferedRequest=this.bufferedRequest=null,this.pendingcb=0,this.errorEmitted=this.prefinished=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new hr(this)}function ir(t){if(!(this instanceof ir||this instanceof dr))return new ir(t);this._writableState=new nr(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev)),Ae.call(this)}function or(t,e,r,n,i,o,s){e.writelen=n,e.writecb=s,e.writing=!0,e.sync=!0,r?t._writev(i,e.onwrite):t._write(i,o,e.onwrite),e.sync=!1}function sr(t,e,r,n){!r&&0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain")),e.pendingcb--,n(),fr(t,e)}function ar(t,e){e.bufferProcessing=!0;var r=e.bufferedRequest;if(t._writev&&r&&r.next){var n=Array(e.bufferedRequestCount),i=e.corkedRequestsFree;i.entry=r;for(var o=0;r;)n[o]=r,r=r.next,o+=1;or(t,e,!0,e.length,n,"",i.finish),e.pendingcb++,e.lastBufferedRequest=null,i.next?(e.corkedRequestsFree=i.next,i.next=null):e.corkedRequestsFree=new hr(e)}else{for(;r&&(n=r.chunk,or(t,e,!1,e.objectMode?1:n.length,n,r.encoding,r.callback),r=r.next,!e.writing););null===r&&(e.lastBufferedRequest=null)}e.bufferedRequestCount=0,e.bufferedRequest=r,e.bufferProcessing=!1}function ur(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function fr(t,e){var r=ur(e);return r&&(0===e.pendingcb?(e.prefinished||(e.prefinished=!0,t.emit("prefinish")),e.finished=!0,t.emit("finish")):e.prefinished||(e.prefinished=!0,t.emit("prefinish"))),r}function hr(t){var e=this;this.entry=this.next=null,this.finish=function(r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(r),n=n.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}}wt(We,Ae),We.prototype.push=function(t,e){var r=this._readableState;return r.objectMode||"string"!=typeof t||(e=e||r.defaultEncoding)!==r.encoding&&(t=O.from(t,e),e=""),ze(this,r,t,e,!1)},We.prototype.unshift=function(t){return ze(this,this._readableState,t,"",!0)},We.prototype.isPaused=function(){return!1===this._readableState.flowing},We.prototype.setEncoding=function(t){return this._readableState.decoder=new Fe(t),this._readableState.encoding=t,this},We.prototype.read=function(t){Ye("read",t),t=parseInt(t,10);var e=this._readableState,r=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return Ye("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?$e(this):Ve(this),null;if(0===(t=Ge(t,e))&&e.ended)return 0===e.length&&$e(this),null;var n=e.needReadable;return Ye("need readable",n),(0===e.length||e.length-t<e.highWaterMark)&&Ye("length less than watermark",n=!0),e.ended||e.reading?Ye("reading or ended",!1):n&&(Ye("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=Ge(r,e))),null===(n=0<t?Ze(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),r!==t&&e.ended&&$e(this)),null!==n&&this.emit("data",n),n},We.prototype._read=function(){this.emit("error",Error("not implemented"))},We.prototype.pipe=function(t,e){function r(t){Ye("onunpipe"),t===h&&i()}function n(){Ye("onend"),t.end()}function i(){Ye("cleanup"),t.removeListener("close",a),t.removeListener("finish",u),t.removeListener("drain",l),t.removeListener("error",s),t.removeListener("unpipe",r),h.removeListener("end",n),h.removeListener("end",i),h.removeListener("data",o),p=!0,!c.awaitDrain||t._writableState&&!t._writableState.needDrain||l()}function o(e){Ye("ondata"),d=!1,!1!==t.write(e)||d||((1===c.pipesCount&&c.pipes===t||1<c.pipesCount&&-1!==tr(c.pipes,t))&&!p&&(Ye("false write response, pause",h._readableState.awaitDrain),h._readableState.awaitDrain++,d=!0),h.pause())}function s(e){Ye("onerror",e),f(),t.removeListener("error",s),0===t.listeners("error").length&&t.emit("error",e)}function a(){t.removeListener("finish",u),f()}function u(){Ye("onfinish"),t.removeListener("close",a),f()}function f(){Ye("unpipe"),h.unpipe(t)}var h=this,c=this._readableState;switch(c.pipesCount){case 0:c.pipes=t;break;case 1:c.pipes=[c.pipes,t];break;default:c.pipes.push(t)}c.pipesCount+=1,Ye("pipe count=%d opts=%j",c.pipesCount,e),e=e&&!1===e.end?i:n,c.endEmitted?lt(e):h.once("end",e),t.on("unpipe",r);var l=function(t){return function(){var e=t._readableState;Ye("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&t.listeners("data").length&&(e.flowing=!0,Xe(t))}}(h);t.on("drain",l);var p=!1,d=!1;return h.on("data",o),function(t,e,r){if("function"==typeof t.prependListener)return t.prependListener(e,r);t._events&&t._events[e]?Array.isArray(t._events[e])?t._events[e].unshift(r):t._events[e]=[r,t._events[e]]:t.on(e,r)}(t,"error",s),t.once("close",a),t.once("finish",u),t.emit("pipe",h),c.flowing||(Ye("pipe resume"),h.resume()),t},We.prototype.unpipe=function(t){var e=this._readableState;if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this)),this;if(!t){t=e.pipes;var r=e.pipesCount;for(e.pipes=null,e.pipesCount=0,e.flowing=!1,e=0;e<r;e++)t[e].emit("unpipe",this);return this}return-1===(r=tr(e.pipes,t))||(e.pipes.splice(r,1),--e.pipesCount,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this)),this},We.prototype.on=function(t,e){return e=Ae.prototype.on.call(this,t,e),"data"===t?!1!==this._readableState.flowing&&this.resume():"readable"===t&&((t=this._readableState).endEmitted||t.readableListening||(t.readableListening=t.needReadable=!0,t.emittedReadable=!1,t.reading?t.length&&Ve(this):lt(Ke,this))),e},We.prototype.addListener=We.prototype.on,We.prototype.resume=function(){var t=this._readableState;return t.flowing||(Ye("resume"),t.flowing=!0,t.resumeScheduled||(t.resumeScheduled=!0,lt(Je,this,t))),this},We.prototype.pause=function(){return Ye("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(Ye("pause"),this._readableState.flowing=!1,this.emit("pause")),this},We.prototype.wrap=function(t){var e=this._readableState,r=!1,n=this;for(var i in t.on("end",(function(){if(Ye("wrapped end"),e.decoder&&!e.ended){var t=e.decoder.end();t&&t.length&&n.push(t)}n.push(null)})),t.on("data",(function(i){Ye("wrapped data"),e.decoder&&(i=e.decoder.write(i)),e.objectMode&&null==i||!(e.objectMode||i&&i.length)||n.push(i)||(r=!0,t.pause())})),t)void 0===this[i]&&"function"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));return function(t,e){for(var r=0,n=t.length;r<n;r++)e(t[r],r)}(["error","close","destroy","pause","resume"],(function(e){t.on(e,n.emit.bind(n,e))})),n._read=function(e){Ye("wrapped _read",e),r&&(r=!1,t.resume())},n},We._fromList=Ze,ir.WritableState=nr,wt(ir,Ae),nr.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},ir.prototype.pipe=function(){this.emit("error",Error("Cannot pipe, not readable"))},ir.prototype.write=function(t,e,r){var n=this._writableState,i=!1;if("function"==typeof e&&(r=e,e=null),O.isBuffer(t)?e="buffer":e||(e=n.defaultEncoding),"function"!=typeof r&&(r=er),n.ended)n=r,t=Error("write after end"),this.emit("error",t),lt(n,t);else{var o=r,s=!0,a=!1;null===t?a=new TypeError("May not write null values to stream"):O.isBuffer(t)||"string"==typeof t||void 0===t||n.objectMode||(a=new TypeError("Invalid non-string/buffer chunk")),a&&(this.emit("error",a),lt(o,a),s=!1),s&&(n.pendingcb++,i=e,n.objectMode||!1===n.decodeStrings||"string"!=typeof t||(t=O.from(t,i)),O.isBuffer(t)&&(i="buffer"),o=n.objectMode?1:t.length,n.length+=o,(e=n.length<n.highWaterMark)||(n.needDrain=!0),n.writing||n.corked?(o=n.lastBufferedRequest,n.lastBufferedRequest=new rr(t,i,r),o?o.next=n.lastBufferedRequest:n.bufferedRequest=n.lastBufferedRequest,n.bufferedRequestCount+=1):or(this,n,!1,o,t,i,r),i=e)}return i},ir.prototype.cork=function(){this._writableState.corked++},ir.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||ar(this,t))},ir.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(-1<"hex utf8 utf-8 ascii binary base64 ucs2 ucs-2 utf16le utf-16le raw".split(" ").indexOf((t+"").toLowerCase())))throw new TypeError("Unknown encoding: "+t);return this._writableState.defaultEncoding=t,this},ir.prototype._write=function(t,e,r){r(Error("not implemented"))},ir.prototype._writev=null,ir.prototype.end=function(t,e,r){var n=this._writableState;"function"==typeof t?(r=t,e=t=null):"function"==typeof e&&(r=e,e=null),null!=t&&this.write(t,e),n.corked&&(n.corked=1,this.uncork()),n.ending||n.finished||(t=r,n.ending=!0,fr(this,n),t&&(n.finished?lt(t):this.once("finish",t)),n.ended=!0,this.writable=!1)},wt(dr,We);for(var cr=Object.keys(ir.prototype),lr=0;lr<cr.length;lr++){var pr=cr[lr];dr.prototype[pr]||(dr.prototype[pr]=ir.prototype[pr])}function dr(t){if(!(this instanceof dr))return new dr(t);We.call(this,t),ir.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",yr)}function yr(){this.allowHalfOpen||this._writableState.ended||lt(gr,this)}function gr(t){t.end()}function mr(t){this.afterTransform=function(e,r){var n=t._transformState;n.transforming=!1;var i=n.writecb;return i?(n.writechunk=null,n.writecb=null,null!=r&&t.push(r),i(e),(e=t._readableState).reading=!1,(e.needReadable||e.length<e.highWaterMark)&&t._read(e.highWaterMark),e=void 0):e=t.emit("error",Error("no writecb in Transform class")),e},this.transforming=this.needTransform=!1,this.writeencoding=this.writechunk=this.writecb=null}function vr(t){if(!(this instanceof vr))return new vr(t);dr.call(this,t),this._transformState=new mr(this);var e=this;this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.once("prefinish",(function(){"function"==typeof this._flush?this._flush((function(t){wr(e,t)})):wr(e)}))}function wr(t,e){if(e)return t.emit("error",e);if(e=t._transformState,t._writableState.length)throw Error("Calling transform done when ws.length != 0");if(e.transforming)throw Error("Calling transform done when still transforming");return t.push(null)}function br(t){if(!(this instanceof br))return new br(t);vr.call(this,t)}function Er(){Ae.call(this)}wt(vr,dr),vr.prototype.push=function(t,e){return this._transformState.needTransform=!1,dr.prototype.push.call(this,t,e)},vr.prototype._transform=function(){throw Error("Not implemented")},vr.prototype._write=function(t,e,r){var n=this._transformState;n.writecb=r,n.writechunk=t,n.writeencoding=e,n.transforming||(t=this._readableState,(n.needTransform||t.needReadable||t.length<t.highWaterMark)&&this._read(t.highWaterMark))},vr.prototype._read=function(){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},wt(br,vr),br.prototype._transform=function(t,e,r){r(null,t)},wt(Er,Ae),Er.Readable=We,Er.Writable=ir,Er.Duplex=dr,Er.Transform=vr,Er.PassThrough=br,Er.Stream=Er,Er.prototype.pipe=function(t,e){function r(e){t.writable&&!1===t.write(e)&&u.pause&&u.pause()}function n(){u.readable&&u.resume&&u.resume()}function i(){f||(f=!0,t.end())}function o(){f||(f=!0,"function"==typeof t.destroy&&t.destroy())}function s(t){if(a(),0===Ae.listenerCount(this,"error"))throw t}function a(){u.removeListener("data",r),t.removeListener("drain",n),u.removeListener("end",i),u.removeListener("close",o),u.removeListener("error",s),t.removeListener("error",s),u.removeListener("end",a),u.removeListener("close",a),t.removeListener("close",a)}var u=this;u.on("data",r),t.on("drain",n),t._isStdio||e&&!1===e.end||(u.on("end",i),u.on("close",o));var f=!1;return u.on("error",s),t.on("error",s),u.on("end",a),u.on("close",a),t.on("close",a),t.emit("pipe",u),t};var _r=Array.prototype.slice,Sr=function t(e,r){for(var n in r)e[n]=r[n];return 3>arguments.length?e:t.apply(null,[e].concat(_r.call(arguments,2)))},Rr=f((function(t,e){function r(t,e,r){return void 0===r&&(r=function(t){return t}),function(){for(var i=[],o=0;o<arguments.length;o++)i[o]=arguments[o];return new Promise((function(o,s){t[e].bind(t).apply(void 0,n(i,[function(t,e){return t?s(t):o(r(e))}]))}))}}var n=a&&a.__spreadArrays||function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;t=Array(t);var n=0;for(e=0;e<r;e++)for(var i=arguments[e],o=0,s=i.length;o<s;o++,n++)t[n]=i[o];return t};Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.vol=t,this.fd=e}return t.prototype.appendFile=function(t,e){return r(this.vol,"appendFile")(this.fd,t,e)},t.prototype.chmod=function(t){return r(this.vol,"fchmod")(this.fd,t)},t.prototype.chown=function(t,e){return r(this.vol,"fchown")(this.fd,t,e)},t.prototype.close=function(){return r(this.vol,"close")(this.fd)},t.prototype.datasync=function(){return r(this.vol,"fdatasync")(this.fd)},t.prototype.read=function(t,e,n,i){return r(this.vol,"read",(function(e){return{bytesRead:e,buffer:t}}))(this.fd,t,e,n,i)},t.prototype.readFile=function(t){return r(this.vol,"readFile")(this.fd,t)},t.prototype.stat=function(t){return r(this.vol,"fstat")(this.fd,t)},t.prototype.sync=function(){return r(this.vol,"fsync")(this.fd)},t.prototype.truncate=function(t){return r(this.vol,"ftruncate")(this.fd,t)},t.prototype.utimes=function(t,e){return r(this.vol,"futimes")(this.fd,t,e)},t.prototype.write=function(t,e,n,i){return r(this.vol,"write",(function(e){return{bytesWritten:e,buffer:t}}))(this.fd,t,e,n,i)},t.prototype.writeFile=function(t,e){return r(this.vol,"writeFile")(this.fd,t,e)},t}();e.FileHandle=i,e.default=function(t){return"undefined"==typeof Promise?null:{FileHandle:i,access:function(e,n){return r(t,"access")(e,n)},appendFile:function(e,n,o){return r(t,"appendFile")(e instanceof i?e.fd:e,n,o)},chmod:function(e,n){return r(t,"chmod")(e,n)},chown:function(e,n,i){return r(t,"chown")(e,n,i)},copyFile:function(e,n,i){return r(t,"copyFile")(e,n,i)},lchmod:function(e,n){return r(t,"lchmod")(e,n)},lchown:function(e,n,i){return r(t,"lchown")(e,n,i)},link:function(e,n){return r(t,"link")(e,n)},lstat:function(e,n){return r(t,"lstat")(e,n)},mkdir:function(e,n){return r(t,"mkdir")(e,n)},mkdtemp:function(e,n){return r(t,"mkdtemp")(e,n)},open:function(e,n,o){return r(t,"open",(function(e){return new i(t,e)}))(e,n,o)},readdir:function(e,n){return r(t,"readdir")(e,n)},readFile:function(e,n){return r(t,"readFile")(e instanceof i?e.fd:e,n)},readlink:function(e,n){return r(t,"readlink")(e,n)},realpath:function(e,n){return r(t,"realpath")(e,n)},rename:function(e,n){return r(t,"rename")(e,n)},rmdir:function(e){return r(t,"rmdir")(e)},stat:function(e,n){return r(t,"stat")(e,n)},symlink:function(e,n,i){return r(t,"symlink")(e,n,i)},truncate:function(e,n){return r(t,"truncate")(e,n)},unlink:function(e){return r(t,"unlink")(e)},utimes:function(e,n,i){return r(t,"utimes")(e,n,i)},writeFile:function(e,n,o){return r(t,"writeFile")(e instanceof i?e.fd:e,n,o)}}}}));u(Rr);var Tr=/[^\x20-\x7E]/,Ar=/[\x2E\u3002\uFF0E\uFF61]/g,Or="Overflow: input needs wider integers to process",Ir=Math.floor,Pr=String.fromCharCode;function Br(t,e){return t+22+75*(26>t)-((0!=e)<<5)}function Nr(t){return function(t,e){var r=t.split("@"),n="";1<r.length&&(n=r[0]+"@",t=r[1]),r=(t=(t=t.replace(Ar,".")).split(".")).length;for(var i=[];r--;)i[r]=e(t[r]);return n+(e=i.join("."))}(t,(function(t){if(Tr.test(t)){var e,r=[],n=[],i=0;for(e=t.length;i<e;){var o=t.charCodeAt(i++);if(55296<=o&&56319>=o&&i<e){var s=t.charCodeAt(i++);56320==(64512&s)?n.push(((1023&o)<<10)+(1023&s)+65536):(n.push(o),i--)}else n.push(o)}s=(t=n).length,n=128;var a=0,u=72;for(o=0;o<s;++o){var f=t[o];128>f&&r.push(Pr(f))}for((i=e=r.length)&&r.push("-");i<s;){var h=2147483647;for(o=0;o<s;++o)(f=t[o])>=n&&f<h&&(h=f);var c=i+1;if(h-n>Ir((2147483647-a)/c))throw new RangeError(Or);for(a+=(h-n)*c,n=h,o=0;o<s;++o){if((f=t[o])<n&&2147483647<++a)throw new RangeError(Or);if(f==n){var l=a;for(h=36;!(l<(f=h<=u?1:h>=u+26?26:h-u));h+=36){var p=l-f;l=36-f,r.push(Pr(Br(f+p%l,0))),l=Ir(p/l)}for(r.push(Pr(Br(l,0))),u=c,h=0,a=i==e?Ir(a/700):a>>1,a+=Ir(a/u);455<a;h+=36)a=Ir(a/35);u=Ir(h+36*a/(a+38)),a=0,++i}}++a,++n}r="xn--"+r.join("")}else r=t;return r}))}var kr=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function Lr(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}}function Cr(t,e){if(t.map)return t.map(e);for(var r=[],n=0;n<t.length;n++)r.push(e(t[n],n));return r}var Ur=Object.keys||function(t){var e,r=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&r.push(e);return r};function Fr(t,e,r,n){r=r||"=";var i={};if("string"!=typeof t||0===t.length)return i;var o=/\+/g;for(t=t.split(e||"&"),e=1e3,n&&"number"==typeof n.maxKeys&&(e=n.maxKeys),n=t.length,0<e&&n>e&&(n=e),e=0;e<n;++e){var s=t[e].replace(o,"%20"),a=s.indexOf(r);if(0<=a){var u=s.substr(0,a);s=s.substr(a+1)}else u=s,s="";u=decodeURIComponent(u),s=decodeURIComponent(s),Object.prototype.hasOwnProperty.call(i,u)?kr(i[u])?i[u].push(s):i[u]=[i[u],s]:i[u]=s}return i}var Dr={parse:Zr,resolve:function(t,e){return Zr(t,!1,!0).resolve(e)},resolveObject:function(t,e){return t?Zr(t,!1,!0).resolveObject(e):e},format:function(t){return Ut(t)&&(t=$r({},t)),Qr(t)},Url:Mr};function Mr(){this.href=this.path=this.pathname=this.query=this.search=this.hash=this.hostname=this.port=this.host=this.auth=this.slashes=this.protocol=null}var xr=/^([a-z0-9.+-]+:)/i,Yr=/:[0-9]*$/,jr=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,Wr="{}|\\^`".split("").concat('<>"` \r\n\t'.split("")),zr=["'"].concat(Wr),Gr=["%","/","?",";","#"].concat(zr),Vr=["/","?","#"],qr=/^[+a-z0-9A-Z_-]{0,63}$/,Hr=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,Kr={javascript:!0,"javascript:":!0},Jr={javascript:!0,"javascript:":!0},Xr={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Zr(t,e,r){if(t&&Mt(t)&&t instanceof Mr)return t;var n=new Mr;return n.parse(t,e,r),n}function $r(t,e,r,n){if(!Ut(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var i=e.indexOf("?");if(i=-1!==i&&i<e.indexOf("#")?"?":"#",(e=e.split(i))[0]=e[0].replace(/\\/g,"/"),i=(e=e.join(i)).trim(),!n&&1===e.split("#").length&&(e=jr.exec(i)))return t.path=i,t.href=i,t.pathname=e[1],e[2]?(t.search=e[2],t.query=r?Fr(t.search.substr(1)):t.search.substr(1)):r&&(t.search="",t.query={}),t;if(e=xr.exec(i)){var o=(e=e[0]).toLowerCase();t.protocol=o,i=i.substr(e.length)}if(n||e||i.match(/^\/\/[^@\/]+@[^@\/]+/)){var s="//"===i.substr(0,2);!s||e&&Jr[e]||(i=i.substr(2),t.slashes=!0)}if(!Jr[e]&&(s||e&&!Xr[e])){for(e=-1,n=0;n<Vr.length;n++)-1!==(s=i.indexOf(Vr[n]))&&(-1===e||s<e)&&(e=s);for(-1!==(s=-1===e?i.lastIndexOf("@"):i.lastIndexOf("@",e))&&(n=i.slice(0,s),i=i.slice(s+1),t.auth=decodeURIComponent(n)),e=-1,n=0;n<Gr.length;n++)-1!==(s=i.indexOf(Gr[n]))&&(-1===e||s<e)&&(e=s);if(-1===e&&(e=i.length),t.host=i.slice(0,e),i=i.slice(e),tn(t),t.hostname=t.hostname||"",!(s="["===t.hostname[0]&&"]"===t.hostname[t.hostname.length-1])){var a=t.hostname.split(/\./);for(n=0,e=a.length;n<e;n++){var u=a[n];if(u&&!u.match(qr)){for(var f="",h=0,c=u.length;h<c;h++)f=127<u.charCodeAt(h)?f+"x":f+u[h];if(!f.match(qr)){e=a.slice(0,n),n=a.slice(n+1),(u=u.match(Hr))&&(e.push(u[1]),n.unshift(u[2])),n.length&&(i="/"+n.join(".")+i),t.hostname=e.join(".");break}}}}t.hostname=t.hostname.length>255?"":t.hostname.toLowerCase(),s||(t.hostname=Nr(t.hostname)),n=t.port?":"+t.port:"",t.host=(t.hostname||"")+n,t.href+=t.host,s&&(t.hostname=t.hostname.substr(1,t.hostname.length-2),"/"!==i[0]&&(i="/"+i))}if(!Kr[o])for(n=0,e=zr.length;n<e;n++)s=zr[n],-1!==i.indexOf(s)&&((u=encodeURIComponent(s))===s&&(u=escape(s)),i=i.split(s).join(u));return-1!==(n=i.indexOf("#"))&&(t.hash=i.substr(n),i=i.slice(0,n)),-1!==(n=i.indexOf("?"))?(t.search=i.substr(n),t.query=i.substr(n+1),r&&(t.query=Fr(t.query)),i=i.slice(0,n)):r&&(t.search="",t.query={}),i&&(t.pathname=i),Xr[o]&&t.hostname&&!t.pathname&&(t.pathname="/"),(t.pathname||t.search)&&(n=t.pathname||"",t.path=n+(t.search||"")),t.href=Qr(t),t}function Qr(t){var e=t.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var r=t.protocol||"",n=t.pathname||"",i=t.hash||"",o=!1,s="";return t.host?o=e+t.host:t.hostname&&(o=e+(-1===t.hostname.indexOf(":")?t.hostname:"["+this.hostname+"]"),t.port&&(o+=":"+t.port)),t.query&&Mt(t.query)&&Object.keys(t.query).length&&(s=function(t,e,r,n){return e=e||"&",r=r||"=",null===t&&(t=void 0),"object"==typeof t?Cr(Ur(t),(function(n){var i=encodeURIComponent(Lr(n))+r;return kr(t[n])?Cr(t[n],(function(t){return i+encodeURIComponent(Lr(t))})).join(e):i+encodeURIComponent(Lr(t[n]))})).join(e):n?encodeURIComponent(Lr(n))+r+encodeURIComponent(Lr(t)):""}(t.query)),e=t.search||s&&"?"+s||"",r&&":"!==r.substr(-1)&&(r+=":"),t.slashes||(!r||Xr[r])&&!1!==o?(o="//"+(o||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):o||(o=""),i&&"#"!==i.charAt(0)&&(i="#"+i),e&&"?"!==e.charAt(0)&&(e="?"+e),r+o+(n=n.replace(/[?#]/g,(function(t){return encodeURIComponent(t)})))+(e=e.replace("#","%23"))+i}function tn(t){var e=t.host,r=Yr.exec(e);r&&(":"!==(r=r[0])&&(t.port=r.substr(1)),e=e.substr(0,e.length-r.length)),e&&(t.hostname=e)}Mr.prototype.parse=function(t,e,r){return $r(this,t,e,r)},Mr.prototype.format=function(){return Qr(this)},Mr.prototype.resolve=function(t){return this.resolveObject(Zr(t,!1,!0)).format()},Mr.prototype.resolveObject=function(t){if(Ut(t)){var e=new Mr;e.parse(t,!1,!0),t=e}e=new Mr;for(var r=Object.keys(this),n=0;n<r.length;n++){var i=r[n];e[i]=this[i]}if(e.hash=t.hash,""===t.href)return e.href=e.format(),e;if(t.slashes&&!t.protocol){for(r=Object.keys(t),n=0;n<r.length;n++)"protocol"!==(i=r[n])&&(e[i]=t[i]);return Xr[e.protocol]&&e.hostname&&!e.pathname&&(e.path=e.pathname="/"),e.href=e.format(),e}var o;if(t.protocol&&t.protocol!==e.protocol){if(!Xr[t.protocol]){for(r=Object.keys(t),n=0;n<r.length;n++)e[i=r[n]]=t[i];return e.href=e.format(),e}if(e.protocol=t.protocol,t.host||Jr[t.protocol])e.pathname=t.pathname;else{for(o=(t.pathname||"").split("/");o.length&&!(t.host=o.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==o[0]&&o.unshift(""),2>o.length&&o.unshift(""),e.pathname=o.join("/")}return e.search=t.search,e.query=t.query,e.host=t.host||"",e.auth=t.auth,e.hostname=t.hostname||t.host,e.port=t.port,(e.pathname||e.search)&&(e.path=(e.pathname||"")+(e.search||"")),e.slashes=e.slashes||t.slashes,e.href=e.format(),e}r=e.pathname&&"/"===e.pathname.charAt(0);var s=t.host||t.pathname&&"/"===t.pathname.charAt(0),a=r=s||r||e.host&&t.pathname;if(n=e.pathname&&e.pathname.split("/")||[],i=e.protocol&&!Xr[e.protocol],o=t.pathname&&t.pathname.split("/")||[],i&&(e.hostname="",e.port=null,e.host&&(""===n[0]?n[0]=e.host:n.unshift(e.host)),e.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===o[0]?o[0]=t.host:o.unshift(t.host)),t.host=null),r=r&&(""===o[0]||""===n[0])),s)e.host=t.host||""===t.host?t.host:e.host,e.hostname=t.hostname||""===t.hostname?t.hostname:e.hostname,e.search=t.search,e.query=t.query,n=o;else if(o.length)n||(n=[]),n.pop(),n=n.concat(o),e.search=t.search,e.query=t.query;else if(null!=t.search)return i&&(e.hostname=e.host=n.shift(),i=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=i.shift(),e.host=e.hostname=i.shift()),e.search=t.search,e.query=t.query,null===e.pathname&&null===e.search||(e.path=(e.pathname?e.pathname:"")+(e.search?e.search:"")),e.href=e.format(),e;if(!n.length)return e.pathname=null,e.path=e.search?"/"+e.search:null,e.href=e.format(),e;s=n.slice(-1)[0],o=(e.host||t.host||1<n.length)&&("."===s||".."===s)||""===s;for(var u=0,f=n.length;0<=f;f--)"."===(s=n[f])?n.splice(f,1):".."===s?(n.splice(f,1),u++):u&&(n.splice(f,1),u--);if(!r&&!a)for(;u--;u)n.unshift("..");return!r||""===n[0]||n[0]&&"/"===n[0].charAt(0)||n.unshift(""),o&&"/"!==n.join("/").substr(-1)&&n.push(""),a=""===n[0]||n[0]&&"/"===n[0].charAt(0),i&&(e.hostname=e.host=a?"":n.length?n.shift():"",i=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=i.shift(),e.host=e.hostname=i.shift()),(r=r||e.host&&n.length)&&!a&&n.unshift(""),n.length?e.pathname=n.join("/"):(e.pathname=null,e.path=null),null===e.pathname&&null===e.search||(e.path=(e.pathname?e.pathname:"")+(e.search?e.search:"")),e.auth=t.auth||e.auth,e.slashes=e.slashes||t.slashes,e.href=e.format(),e},Mr.prototype.parseHost=function(){return tn(this)};var en=f((function(t,e){function r(t,e){return t=t[e],0<e&&("/"===t||i&&"\\"===t)}function n(t){var e=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(i){var n=t;if("string"!=typeof n)throw new TypeError("expected a string");if(n=n.replace(/[\\\/]+/g,"/"),!1!==e)if(2>(n=(e=n).length-1))n=e;else{for(;r(e,n);)n--;n=e.substr(0,n+1)}return n.replace(/^([a-zA-Z]+:|\.\/)/,"")}return t}Object.defineProperty(e,"__esModule",{value:!0}),e.unixify=n,e.correctPath=function(t){return n(t.replace(/^\\\\\?\\.:\\/,"\\"))};var i="win32"===vt.platform}));u(en);var rn=f((function(t,e){function r(t,e){return void 0===e&&(e=Re.default.cwd()),C(e,t)}function n(t,e){return"function"==typeof t?[i(),t]:[i(t),p(e)]}function i(t){return void 0===t&&(t={}),L({},lt,t)}function o(t){return L({},ut,"number"==typeof t?{mode:t}:t)}function s(t,e,r,n,i){return void 0===e&&(e=""),void 0===r&&(r=""),void 0===n&&(n=""),void 0===i&&(i=Error),(e=new i(function(t,e,r,n){void 0===e&&(e=""),void 0===r&&(r=""),void 0===n&&(n="");var i="";switch(r&&(i=" '"+r+"'"),n&&(i+=" -> '"+n+"'"),t){case"ENOENT":return"ENOENT: no such file or directory, "+e+i;case"EBADF":return"EBADF: bad file descriptor, "+e+i;case"EINVAL":return"EINVAL: invalid argument, "+e+i;case"EPERM":return"EPERM: operation not permitted, "+e+i;case"EPROTO":return"EPROTO: protocol error, "+e+i;case"EEXIST":return"EEXIST: file already exists, "+e+i;case"ENOTDIR":return"ENOTDIR: not a directory, "+e+i;case"EISDIR":return"EISDIR: illegal operation on a directory, "+e+i;case"EACCES":return"EACCES: permission denied, "+e+i;case"ENOTEMPTY":return"ENOTEMPTY: directory not empty, "+e+i;case"EMFILE":return"EMFILE: too many open files, "+e+i;case"ENOSYS":return"ENOSYS: function not implemented, "+e+i;default:return t+": error occurred, "+e+i}}(t,e,r,n))).code=t,e}function u(t){if("number"==typeof t)return t;if("string"==typeof t){var e=k[t];if(void 0!==e)return e}throw new pe.TypeError("ERR_INVALID_OPT_VALUE","flags",t)}function f(t,e){if(!e)return t;var r=typeof e;switch(r){case"string":t=L({},t,{encoding:e});break;case"object":t=L({},t,e);break;default:throw TypeError("Expected options to be either an object or a string, but got "+r+" instead")}return"buffer"!==t.encoding&&de.assertEncoding(t.encoding),t}function c(t){return function(e){return f(t,e)}}function p(t){if("function"!=typeof t)throw TypeError(X.CB);return t}function d(t){return function(e,r){return"function"==typeof e?[t(),e]:[t(e),p(r)]}}function y(t){if("string"!=typeof t&&!tt.Buffer.isBuffer(t)){try{if(!(t instanceof Dr.URL))throw new TypeError(X.PATH_STR)}catch(t){throw new TypeError(X.PATH_STR)}if(""!==t.hostname)throw new pe.TypeError("ERR_INVALID_FILE_URL_HOST",Re.default.platform);t=t.pathname;for(var e=0;e<t.length;e++)if("%"===t[e]){var r=32|t.codePointAt(e+2);if("2"===t[e+1]&&102===r)throw new pe.TypeError("ERR_INVALID_FILE_URL_PATH","must not include encoded / characters")}t=decodeURIComponent(t)}return b(t=String(t)),t}function g(t,e){return(t=r(t,e).substr(1))?t.split(H):[]}function m(t){return g(y(t))}function v(t,e){return void 0===e&&(e=de.ENCODING_UTF8),tt.Buffer.isBuffer(t)?t:t instanceof Uint8Array?tt.bufferFrom(t):tt.bufferFrom(String(t),e)}function w(t,e){return e&&"buffer"!==e?t.toString(e):t}function b(t,e){if(-1!==(""+t).indexOf("\0")){if((t=Error("Path must be a string without null bytes")).code="ENOENT","function"!=typeof e)throw t;return Re.default.nextTick(e,t),!1}return!0}function E(t,e){if("number"!=typeof(t="number"==typeof t?t:"string"==typeof t?parseInt(t,8):e?E(e):void 0)||isNaN(t))throw new TypeError(X.MODE_INT);return t}function _(t){if(t>>>0!==t)throw TypeError(X.FD)}function S(t){if("string"==typeof t&&+t==t)return+t;if(t instanceof Date)return t.getTime()/1e3;if(isFinite(t))return 0>t?Date.now()/1e3:t;throw Error("Cannot parse time: "+t)}function R(t){if("number"!=typeof t)throw TypeError(X.UID)}function T(t){if("number"!=typeof t)throw TypeError(X.GID)}function A(t){t.emit("stop")}function O(t,e,r){if(!(this instanceof O))return new O(t,e,r);if(this._vol=t,void 0===(r=L({},f(r,{}))).highWaterMark&&(r.highWaterMark=65536),Er.Readable.call(this,r),this.path=y(e),this.fd=void 0===r.fd?null:r.fd,this.flags=void 0===r.flags?"r":r.flags,this.mode=void 0===r.mode?438:r.mode,this.start=r.start,this.end=r.end,this.autoClose=void 0===r.autoClose||r.autoClose,this.pos=void 0,this.bytesRead=0,void 0!==this.start){if("number"!=typeof this.start)throw new TypeError('"start" option must be a Number');if(void 0===this.end)this.end=1/0;else if("number"!=typeof this.end)throw new TypeError('"end" option must be a Number');if(this.start>this.end)throw Error('"start" option must be <= "end" option');this.pos=this.start}"number"!=typeof this.fd&&this.open(),this.on("end",(function(){this.autoClose&&this.destroy&&this.destroy()}))}function I(){this.close()}function P(t,e,r){if(!(this instanceof P))return new P(t,e,r);if(this._vol=t,r=L({},f(r,{})),Er.Writable.call(this,r),this.path=y(e),this.fd=void 0===r.fd?null:r.fd,this.flags=void 0===r.flags?"w":r.flags,this.mode=void 0===r.mode?438:r.mode,this.start=r.start,this.autoClose=void 0===r.autoClose||!!r.autoClose,this.pos=void 0,this.bytesWritten=0,void 0!==this.start){if("number"!=typeof this.start)throw new TypeError('"start" option must be a Number');if(0>this.start)throw Error('"start" must be >= zero');this.pos=this.start}r.encoding&&this.setDefaultEncoding(r.encoding),"number"!=typeof this.fd&&this.open(),this.once("finish",(function(){this.autoClose&&this.close()}))}var B=a&&a.__extends||function(){function t(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)}return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),N=a&&a.__spreadArrays||function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;t=Array(t);var n=0;for(e=0;e<r;e++)for(var i=arguments[e],o=0,s=i.length;o<s;o++,n++)t[n]=i[o];return t};Object.defineProperty(e,"__esModule",{value:!0});var k,L=Sr,C=Ee,U=h.constants.O_RDONLY,F=h.constants.O_WRONLY,D=h.constants.O_RDWR,M=h.constants.O_CREAT,x=h.constants.O_EXCL,Y=h.constants.O_TRUNC,j=h.constants.O_APPEND,W=h.constants.O_SYNC,z=h.constants.O_DIRECTORY,G=h.constants.F_OK,V=h.constants.COPYFILE_EXCL,q=h.constants.COPYFILE_FICLONE_FORCE,H=we,K=be,J="win32"===Re.default.platform,X={PATH_STR:"path must be a string or Buffer",FD:"fd must be a file descriptor",MODE_INT:"mode must be an int",CB:"callback must be a function",UID:"uid must be an unsigned int",GID:"gid must be an unsigned int",LEN:"len must be an integer",ATIME:"atime must be an integer",MTIME:"mtime must be an integer",PREFIX:"filename prefix is required",BUFFER:"buffer must be an instance of Buffer or StaticBuffer",OFFSET:"offset must be an integer",LENGTH:"length must be an integer",POSITION:"position must be an integer"};!function(t){t[t.r=U]="r",t[t["r+"]=D]="r+",t[t.rs=U|W]="rs",t[t.sr=t.rs]="sr",t[t["rs+"]=D|W]="rs+",t[t["sr+"]=t["rs+"]]="sr+",t[t.w=F|M|Y]="w",t[t.wx=F|M|Y|x]="wx",t[t.xw=t.wx]="xw",t[t["w+"]=D|M|Y]="w+",t[t["wx+"]=D|M|Y|x]="wx+",t[t["xw+"]=t["wx+"]]="xw+",t[t.a=F|j|M]="a",t[t.ax=F|j|M|x]="ax",t[t.xa=t.ax]="xa",t[t["a+"]=D|j|M]="a+",t[t["ax+"]=D|j|M|x]="ax+",t[t["xa+"]=t["ax+"]]="xa+"}(k=e.FLAGS||(e.FLAGS={})),e.flagsToNumber=u;var Z=c(t={encoding:"utf8"}),$=d(Z),Q=c({flag:"r"}),et={encoding:"utf8",mode:438,flag:k[k.w]},rt=c(et),nt={encoding:"utf8",mode:438,flag:k[k.a]},it=c(nt),ot=d(it),st=c(t),at=d(st),ut={mode:511,recursive:!1},ft={recursive:!1},ht=c({encoding:"utf8",withFileTypes:!1}),ct=d(ht),lt={bigint:!1};if(e.pathToFilename=y,J){var pt=r,dt=en.unixify;r=function(t,e){return dt(pt(t,e))}}e.filenameToSteps=g,e.pathToSteps=m,e.dataToStr=function(t,e){return void 0===e&&(e=de.ENCODING_UTF8),tt.Buffer.isBuffer(t)?t.toString(e):t instanceof Uint8Array?tt.bufferFrom(t).toString(e):String(t)},e.dataToBuffer=v,e.bufferToEncoding=w,e.toUnixTimestamp=S,t=function(){function t(t){void 0===t&&(t={}),this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.maxFiles=1e4,this.openFiles=0,this.promisesApi=Rr.default(this),this.statWatchers={},this.props=L({Node:Ne.Node,Link:Ne.Link,File:Ne.File},t),(t=this.createLink()).setNode(this.createNode(!0));var e=this;this.StatWatcher=function(t){function r(){return t.call(this,e)||this}return B(r,t),r}(gt),this.ReadStream=function(t){function r(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return t.apply(this,N([e],r))||this}return B(r,t),r}(O),this.WriteStream=function(t){function r(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return t.apply(this,N([e],r))||this}return B(r,t),r}(P),this.FSWatcher=function(t){function r(){return t.call(this,e)||this}return B(r,t),r}(mt),this.root=t}return t.fromJSON=function(e,r){var n=new t;return n.fromJSON(e,r),n},Object.defineProperty(t.prototype,"promises",{get:function(){if(null===this.promisesApi)throw Error("Promise is not supported in this environment.");return this.promisesApi},enumerable:!0,configurable:!0}),t.prototype.createLink=function(t,e,r,n){if(void 0===r&&(r=!1),!t)return new this.props.Link(this,null,"");if(!e)throw Error("createLink: name cannot be empty");return t.createChild(e,this.createNode(r,n))},t.prototype.deleteLink=function(t){var e=t.parent;return!!e&&(e.deleteChild(t),!0)},t.prototype.newInoNumber=function(){var t=this.releasedInos.pop();return t||(this.ino=(this.ino+1)%4294967295)},t.prototype.newFdNumber=function(){var e=this.releasedFds.pop();return"number"==typeof e?e:t.fd--},t.prototype.createNode=function(t,e){return void 0===t&&(t=!1),e=new this.props.Node(this.newInoNumber(),e),t&&e.setIsDirectory(),this.inodes[e.ino]=e},t.prototype.getNode=function(t){return this.inodes[t]},t.prototype.deleteNode=function(t){t.del(),delete this.inodes[t.ino],this.releasedInos.push(t.ino)},t.prototype.genRndStr=function(){var t=(Math.random()+1).toString(36).substr(2,6);return 6===t.length?t:this.genRndStr()},t.prototype.getLink=function(t){return this.root.walk(t)},t.prototype.getLinkOrThrow=function(t,e){var r=g(t);if(!(r=this.getLink(r)))throw s("ENOENT",e,t);return r},t.prototype.getResolvedLink=function(t){t="string"==typeof t?g(t):t;for(var e=this.root,r=0;r<t.length;){if(!(e=e.getChild(t[r])))return null;var n=e.getNode();n.isSymlink()?(t=n.symlink.concat(t.slice(r+1)),e=this.root,r=0):r++}return e},t.prototype.getResolvedLinkOrThrow=function(t,e){var r=this.getResolvedLink(t);if(!r)throw s("ENOENT",e,t);return r},t.prototype.resolveSymlinks=function(t){return this.getResolvedLink(t.steps.slice(1))},t.prototype.getLinkAsDirOrThrow=function(t,e){var r=this.getLinkOrThrow(t,e);if(!r.getNode().isDirectory())throw s("ENOTDIR",e,t);return r},t.prototype.getLinkParent=function(t){return this.root.walk(t,t.length-1)},t.prototype.getLinkParentAsDirOrThrow=function(t,e){t=t instanceof Array?t:g(t);var r=this.getLinkParent(t);if(!r)throw s("ENOENT",e,H+t.join(H));if(!r.getNode().isDirectory())throw s("ENOTDIR",e,H+t.join(H));return r},t.prototype.getFileByFd=function(t){return this.fds[String(t)]},t.prototype.getFileByFdOrThrow=function(t,e){if(t>>>0!==t)throw TypeError(X.FD);if(!(t=this.getFileByFd(t)))throw s("EBADF",e);return t},t.prototype.getNodeByIdOrCreate=function(t,e,r){if("number"==typeof t){if(!(t=this.getFileByFd(t)))throw Error("File nto found");return t.node}var n=m(t),i=this.getLink(n);if(i)return i.getNode();if(e&M&&(e=this.getLinkParent(n)))return(i=this.createLink(e,n[n.length-1],!1,r)).getNode();throw s("ENOENT","getNodeByIdOrCreate",y(t))},t.prototype.wrapAsync=function(t,e,r){var n=this;p(r),Se.default((function(){try{r(null,t.apply(n,e))}catch(t){r(t)}}))},t.prototype._toJSON=function(t,e,r){var n;void 0===t&&(t=this.root),void 0===e&&(e={});var i=!0,o=t.children;for(var s in t.getNode().isFile()&&((n={})[t.getName()]=t.parent.getChild(t.getName()),o=n,t=t.parent),o){if(i=!1,!(o=t.getChild(s)))throw Error("_toJSON: unexpected undefined");(n=o.getNode()).isFile()?(o=o.getPath(),r&&(o=K(r,o)),e[o]=n.getString()):n.isDirectory()&&this._toJSON(o,e,r)}return t=t.getPath(),r&&(t=K(r,t)),t&&i&&(e[t]=null),e},t.prototype.toJSON=function(t,e,r){void 0===e&&(e={}),void 0===r&&(r=!1);var n=[];if(t){t instanceof Array||(t=[t]);for(var i=0;i<t.length;i++){var o=y(t[i]);(o=this.getResolvedLink(o))&&n.push(o)}}else n.push(this.root);if(!n.length)return e;for(i=0;i<n.length;i++)o=n[i],this._toJSON(o,e,r?o.getPath():"");return e},t.prototype.fromJSON=function(t,e){for(var n in void 0===e&&(e=Re.default.cwd()),t){var i=t[n];if("string"==typeof i){var o=g(n=r(n,e));1<o.length&&(o=H+o.slice(0,o.length-1).join(H),this.mkdirpBase(o,511)),this.writeFileSync(n,i)}else this.mkdirpBase(n,511)}},t.prototype.reset=function(){this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.openFiles=0,this.root=this.createLink(),this.root.setNode(this.createNode(!0))},t.prototype.mountSync=function(t,e){this.fromJSON(e,t)},t.prototype.openLink=function(t,e,r){if(void 0===r&&(r=!0),this.openFiles>=this.maxFiles)throw s("EMFILE","open",t.getPath());var n=t;if(r&&(n=this.resolveSymlinks(t)),!n)throw s("ENOENT","open",t.getPath());if((r=n.getNode()).isDirectory()){if((e&(U|D|F))!==U)throw s("EISDIR","open",t.getPath())}else if(e&z)throw s("ENOTDIR","open",t.getPath());if(!(e&F||r.canRead()))throw s("EACCES","open",t.getPath());return t=new this.props.File(t,r,e,this.newFdNumber()),this.fds[t.fd]=t,this.openFiles++,e&Y&&t.truncate(),t},t.prototype.openFile=function(t,e,r,n){void 0===n&&(n=!0);var i=g(t),o=n?this.getResolvedLink(i):this.getLink(i);if(!o&&e&M){var a=this.getResolvedLink(i.slice(0,i.length-1));if(!a)throw s("ENOENT","open",H+i.join(H));e&M&&"number"==typeof r&&(o=this.createLink(a,i[i.length-1],!1,r))}if(o)return this.openLink(o,e,n);throw s("ENOENT","open",t)},t.prototype.openBase=function(t,e,r,n){if(void 0===n&&(n=!0),!(e=this.openFile(t,e,r,n)))throw s("ENOENT","open",t);return e.fd},t.prototype.openSync=function(t,e,r){return void 0===r&&(r=438),r=E(r),t=y(t),e=u(e),this.openBase(t,e,r)},t.prototype.open=function(t,e,r,n){var i=r;"function"==typeof r&&(i=438,n=r),r=E(i||438),t=y(t),e=u(e),this.wrapAsync(this.openBase,[t,e,r],n)},t.prototype.closeFile=function(t){this.fds[t.fd]&&(this.openFiles--,delete this.fds[t.fd],this.releasedFds.push(t.fd))},t.prototype.closeSync=function(t){_(t),t=this.getFileByFdOrThrow(t,"close"),this.closeFile(t)},t.prototype.close=function(t,e){_(t),this.wrapAsync(this.closeSync,[t],e)},t.prototype.openFileOrGetById=function(t,e,r){if("number"==typeof t){if(!(t=this.fds[t]))throw s("ENOENT");return t}return this.openFile(y(t),e,r)},t.prototype.readBase=function(t,e,r,n,i){return this.getFileByFdOrThrow(t).read(e,Number(r),Number(n),i)},t.prototype.readSync=function(t,e,r,n,i){return _(t),this.readBase(t,e,r,n,i)},t.prototype.read=function(t,e,r,n,i,o){var s=this;if(p(o),0===n)return Re.default.nextTick((function(){o&&o(null,0,e)}));Se.default((function(){try{var a=s.readBase(t,e,r,n,i);o(null,a,e)}catch(t){o(t)}}))},t.prototype.readFileBase=function(t,e,r){var n="number"==typeof t&&t>>>0===t;if(!n){var i=y(t);if(i=g(i),(i=this.getResolvedLink(i))&&i.getNode().isDirectory())throw s("EISDIR","open",i.getPath());t=this.openSync(t,e)}try{var o=w(this.getFileByFdOrThrow(t).getBuffer(),r)}finally{n||this.closeSync(t)}return o},t.prototype.readFileSync=function(t,e){var r=u((e=Q(e)).flag);return this.readFileBase(t,r,e.encoding)},t.prototype.readFile=function(t,e,r){e=(r=d(Q)(e,r))[0],r=r[1];var n=u(e.flag);this.wrapAsync(this.readFileBase,[t,n,e.encoding],r)},t.prototype.writeBase=function(t,e,r,n,i){return this.getFileByFdOrThrow(t,"write").write(e,r,n,i)},t.prototype.writeSync=function(t,e,r,n,i){_(t);var o="string"!=typeof e;if(o){var s=0|(r||0),a=n;r=i}else var u=n;return e=v(e,u),o?void 0===a&&(a=e.length):(s=0,a=e.length),this.writeBase(t,e,s,a,r)},t.prototype.write=function(t,e,r,n,i,o){var s=this;_(t);var a=typeof e,u=typeof r,f=typeof n,h=typeof i;if("string"!==a)if("function"===u)var c=r;else if("function"===f){var l=0|r;c=n}else if("function"===h){l=0|r;var d=n;c=i}else{l=0|r,d=n;var y=i;c=o}else if("function"===u)c=r;else if("function"===f)y=r,c=n;else if("function"===h){y=r;var g=n;c=i}var m=v(e,g);"string"!==a?void 0===d&&(d=m.length):(l=0,d=m.length);var w=p(c);Se.default((function(){try{var r=s.writeBase(t,m,l,d,y);w(null,r,"string"!==a?m:e)}catch(t){w(t)}}))},t.prototype.writeFileBase=function(t,e,r,n){var i="number"==typeof t;t=i?t:this.openBase(y(t),r,n),n=0;var o=e.length;r=r&j?void 0:0;try{for(;0<o;){var s=this.writeSync(t,e,n,o,r);n+=s,o-=s,void 0!==r&&(r+=s)}}finally{i||this.closeSync(t)}},t.prototype.writeFileSync=function(t,e,r){var n=rt(r);r=u(n.flag);var i=E(n.mode);e=v(e,n.encoding),this.writeFileBase(t,e,r,i)},t.prototype.writeFile=function(t,e,r,n){var i=r;"function"==typeof r&&(i=et,n=r),r=p(n);var o=rt(i);i=u(o.flag),n=E(o.mode),e=v(e,o.encoding),this.wrapAsync(this.writeFileBase,[t,e,i,n],r)},t.prototype.linkBase=function(t,e){var r=g(t),n=this.getLink(r);if(!n)throw s("ENOENT","link",t,e);var i=g(e);if(!(r=this.getLinkParent(i)))throw s("ENOENT","link",t,e);if(i=i[i.length-1],r.getChild(i))throw s("EEXIST","link",t,e);(t=n.getNode()).nlink++,r.createChild(i,t)},t.prototype.copyFileBase=function(t,e,r){var n=this.readFileSync(t);if(r&V&&this.existsSync(e))throw s("EEXIST","copyFile",t,e);if(r&q)throw s("ENOSYS","copyFile",t,e);this.writeFileBase(e,n,k.w,438)},t.prototype.copyFileSync=function(t,e,r){return t=y(t),e=y(e),this.copyFileBase(t,e,0|(r||0))},t.prototype.copyFile=function(t,e,r,n){if(t=y(t),e=y(e),"function"==typeof r)var i=0;else i=r,r=n;p(r),this.wrapAsync(this.copyFileBase,[t,e,i],r)},t.prototype.linkSync=function(t,e){t=y(t),e=y(e),this.linkBase(t,e)},t.prototype.link=function(t,e,r){t=y(t),e=y(e),this.wrapAsync(this.linkBase,[t,e],r)},t.prototype.unlinkBase=function(t){var e=g(t);if(!(e=this.getLink(e)))throw s("ENOENT","unlink",t);if(e.length)throw Error("Dir not empty...");this.deleteLink(e),(t=e.getNode()).nlink--,0>=t.nlink&&this.deleteNode(t)},t.prototype.unlinkSync=function(t){t=y(t),this.unlinkBase(t)},t.prototype.unlink=function(t,e){t=y(t),this.wrapAsync(this.unlinkBase,[t],e)},t.prototype.symlinkBase=function(t,e){var r=g(e),n=this.getLinkParent(r);if(!n)throw s("ENOENT","symlink",t,e);if(r=r[r.length-1],n.getChild(r))throw s("EEXIST","symlink",t,e);return(e=n.createChild(r)).getNode().makeSymlink(g(t)),e},t.prototype.symlinkSync=function(t,e){t=y(t),e=y(e),this.symlinkBase(t,e)},t.prototype.symlink=function(t,e,r,n){r=p("function"==typeof r?r:n),t=y(t),e=y(e),this.wrapAsync(this.symlinkBase,[t,e],r)},t.prototype.realpathBase=function(t,e){var r=g(t);if(!(r=this.getResolvedLink(r)))throw s("ENOENT","realpath",t);return de.strToEncoding(r.getPath(),e)},t.prototype.realpathSync=function(t,e){return this.realpathBase(y(t),st(e).encoding)},t.prototype.realpath=function(t,e,r){e=(r=at(e,r))[0],r=r[1],t=y(t),this.wrapAsync(this.realpathBase,[t,e.encoding],r)},t.prototype.lstatBase=function(t,e){void 0===e&&(e=!1);var r=this.getLink(g(t));if(!r)throw s("ENOENT","lstat",t);return l.default.build(r.getNode(),e)},t.prototype.lstatSync=function(t,e){return this.lstatBase(y(t),i(e).bigint)},t.prototype.lstat=function(t,e,r){e=(r=n(e,r))[0],r=r[1],this.wrapAsync(this.lstatBase,[y(t),e.bigint],r)},t.prototype.statBase=function(t,e){void 0===e&&(e=!1);var r=this.getResolvedLink(g(t));if(!r)throw s("ENOENT","stat",t);return l.default.build(r.getNode(),e)},t.prototype.statSync=function(t,e){return this.statBase(y(t),i(e).bigint)},t.prototype.stat=function(t,e,r){e=(r=n(e,r))[0],r=r[1],this.wrapAsync(this.statBase,[y(t),e.bigint],r)},t.prototype.fstatBase=function(t,e){if(void 0===e&&(e=!1),!(t=this.getFileByFd(t)))throw s("EBADF","fstat");return l.default.build(t.node,e)},t.prototype.fstatSync=function(t,e){return this.fstatBase(t,i(e).bigint)},t.prototype.fstat=function(t,e,r){e=n(e,r),this.wrapAsync(this.fstatBase,[t,e[0].bigint],e[1])},t.prototype.renameBase=function(t,e){var r=this.getLink(g(t));if(!r)throw s("ENOENT","rename",t,e);var n=g(e),i=this.getLinkParent(n);if(!i)throw s("ENOENT","rename",t,e);(t=r.parent)&&t.deleteChild(r),r.steps=N(i.steps,[n[n.length-1]]),i.setChild(r.getName(),r)},t.prototype.renameSync=function(t,e){t=y(t),e=y(e),this.renameBase(t,e)},t.prototype.rename=function(t,e,r){t=y(t),e=y(e),this.wrapAsync(this.renameBase,[t,e],r)},t.prototype.existsBase=function(t){return!!this.statBase(t)},t.prototype.existsSync=function(t){try{return this.existsBase(y(t))}catch(t){return!1}},t.prototype.exists=function(t,e){var r=this,n=y(t);if("function"!=typeof e)throw Error(X.CB);Se.default((function(){try{e(r.existsBase(n))}catch(t){e(!1)}}))},t.prototype.accessBase=function(t){this.getLinkOrThrow(t,"access")},t.prototype.accessSync=function(t,e){void 0===e&&(e=G),t=y(t),this.accessBase(t,0|e)},t.prototype.access=function(t,e,r){var n=G;"function"!=typeof e&&(n=0|e,e=p(r)),t=y(t),this.wrapAsync(this.accessBase,[t,n],e)},t.prototype.appendFileSync=function(t,e,r){void 0===r&&(r=nt),(r=it(r)).flag&&t>>>0!==t||(r.flag="a"),this.writeFileSync(t,e,r)},t.prototype.appendFile=function(t,e,r,n){r=(n=ot(r,n))[0],n=n[1],r.flag&&t>>>0!==t||(r.flag="a"),this.writeFile(t,e,r,n)},t.prototype.readdirBase=function(t,e){var r=g(t);if(!(r=this.getResolvedLink(r)))throw s("ENOENT","readdir",t);if(!r.getNode().isDirectory())throw s("ENOTDIR","scandir",t);if(e.withFileTypes){var n=[];for(i in r.children)(t=r.getChild(i))&&n.push(ye.default.build(t,e.encoding));return J||"buffer"===e.encoding||n.sort((function(t,e){return t.name<e.name?-1:t.name>e.name?1:0})),n}var i=[];for(n in r.children)i.push(de.strToEncoding(n,e.encoding));return J||"buffer"===e.encoding||i.sort(),i},t.prototype.readdirSync=function(t,e){return e=ht(e),t=y(t),this.readdirBase(t,e)},t.prototype.readdir=function(t,e,r){e=(r=ct(e,r))[0],r=r[1],t=y(t),this.wrapAsync(this.readdirBase,[t,e],r)},t.prototype.readlinkBase=function(t,e){var r=this.getLinkOrThrow(t,"readlink").getNode();if(!r.isSymlink())throw s("EINVAL","readlink",t);return t=H+r.symlink.join(H),de.strToEncoding(t,e)},t.prototype.readlinkSync=function(t,e){return e=Z(e),t=y(t),this.readlinkBase(t,e.encoding)},t.prototype.readlink=function(t,e,r){e=(r=$(e,r))[0],r=r[1],t=y(t),this.wrapAsync(this.readlinkBase,[t,e.encoding],r)},t.prototype.fsyncBase=function(t){this.getFileByFdOrThrow(t,"fsync")},t.prototype.fsyncSync=function(t){this.fsyncBase(t)},t.prototype.fsync=function(t,e){this.wrapAsync(this.fsyncBase,[t],e)},t.prototype.fdatasyncBase=function(t){this.getFileByFdOrThrow(t,"fdatasync")},t.prototype.fdatasyncSync=function(t){this.fdatasyncBase(t)},t.prototype.fdatasync=function(t,e){this.wrapAsync(this.fdatasyncBase,[t],e)},t.prototype.ftruncateBase=function(t,e){this.getFileByFdOrThrow(t,"ftruncate").truncate(e)},t.prototype.ftruncateSync=function(t,e){this.ftruncateBase(t,e)},t.prototype.ftruncate=function(t,e,r){var n="number"==typeof e?e:0;e=p("number"==typeof e?r:e),this.wrapAsync(this.ftruncateBase,[t,n],e)},t.prototype.truncateBase=function(t,e){t=this.openSync(t,"r+");try{this.ftruncateSync(t,e)}finally{this.closeSync(t)}},t.prototype.truncateSync=function(t,e){if(t>>>0===t)return this.ftruncateSync(t,e);this.truncateBase(t,e)},t.prototype.truncate=function(t,e,r){var n="number"==typeof e?e:0;if(e=p("number"==typeof e?r:e),t>>>0===t)return this.ftruncate(t,n,e);this.wrapAsync(this.truncateBase,[t,n],e)},t.prototype.futimesBase=function(t,e,r){(t=this.getFileByFdOrThrow(t,"futimes").node).atime=new Date(1e3*e),t.mtime=new Date(1e3*r)},t.prototype.futimesSync=function(t,e,r){this.futimesBase(t,S(e),S(r))},t.prototype.futimes=function(t,e,r,n){this.wrapAsync(this.futimesBase,[t,S(e),S(r)],n)},t.prototype.utimesBase=function(t,e,r){t=this.openSync(t,"r+");try{this.futimesBase(t,e,r)}finally{this.closeSync(t)}},t.prototype.utimesSync=function(t,e,r){this.utimesBase(y(t),S(e),S(r))},t.prototype.utimes=function(t,e,r,n){this.wrapAsync(this.utimesBase,[y(t),S(e),S(r)],n)},t.prototype.mkdirBase=function(t,e){var r=g(t);if(!r.length)throw s("EISDIR","mkdir",t);var n=this.getLinkParentAsDirOrThrow(t,"mkdir");if(r=r[r.length-1],n.getChild(r))throw s("EEXIST","mkdir",t);n.createChild(r,this.createNode(!0,e))},t.prototype.mkdirpBase=function(t,e){t=g(t);for(var r=this.root,n=0;n<t.length;n++){var i=t[n];if(!r.getNode().isDirectory())throw s("ENOTDIR","mkdir",r.getPath());var o=r.getChild(i);if(o){if(!o.getNode().isDirectory())throw s("ENOTDIR","mkdir",o.getPath());r=o}else r=r.createChild(i,this.createNode(!0,e))}},t.prototype.mkdirSync=function(t,e){var r=E((e=o(e)).mode,511);t=y(t),e.recursive?this.mkdirpBase(t,r):this.mkdirBase(t,r)},t.prototype.mkdir=function(t,e,r){var n=o(e);e=p("function"==typeof e?e:r),r=E(n.mode,511),t=y(t),n.recursive?this.wrapAsync(this.mkdirpBase,[t,r],e):this.wrapAsync(this.mkdirBase,[t,r],e)},t.prototype.mkdirpSync=function(t,e){this.mkdirSync(t,{mode:e,recursive:!0})},t.prototype.mkdirp=function(t,e,r){var n="function"==typeof e?void 0:e;e=p("function"==typeof e?e:r),this.mkdir(t,{mode:n,recursive:!0},e)},t.prototype.mkdtempBase=function(t,e,r){void 0===r&&(r=5);var n=t+this.genRndStr();try{return this.mkdirBase(n,511),de.strToEncoding(n,e)}catch(n){if("EEXIST"===n.code){if(1<r)return this.mkdtempBase(t,e,r-1);throw Error("Could not create temp dir.")}throw n}},t.prototype.mkdtempSync=function(t,e){if(e=Z(e).encoding,!t||"string"!=typeof t)throw new TypeError("filename prefix is required");return b(t),this.mkdtempBase(t,e)},t.prototype.mkdtemp=function(t,e,r){if(e=(r=$(e,r))[0].encoding,r=r[1],!t||"string"!=typeof t)throw new TypeError("filename prefix is required");b(t)&&this.wrapAsync(this.mkdtempBase,[t,e],r)},t.prototype.rmdirBase=function(t,e){e=L({},ft,e);var r=this.getLinkAsDirOrThrow(t,"rmdir");if(r.length&&!e.recursive)throw s("ENOTEMPTY","rmdir",t);this.deleteLink(r)},t.prototype.rmdirSync=function(t,e){this.rmdirBase(y(t),e)},t.prototype.rmdir=function(t,e,r){var n=L({},ft,e);e=p("function"==typeof e?e:r),this.wrapAsync(this.rmdirBase,[y(t),n],e)},t.prototype.fchmodBase=function(t,e){this.getFileByFdOrThrow(t,"fchmod").chmod(e)},t.prototype.fchmodSync=function(t,e){this.fchmodBase(t,E(e))},t.prototype.fchmod=function(t,e,r){this.wrapAsync(this.fchmodBase,[t,E(e)],r)},t.prototype.chmodBase=function(t,e){t=this.openSync(t,"r+");try{this.fchmodBase(t,e)}finally{this.closeSync(t)}},t.prototype.chmodSync=function(t,e){e=E(e),t=y(t),this.chmodBase(t,e)},t.prototype.chmod=function(t,e,r){e=E(e),t=y(t),this.wrapAsync(this.chmodBase,[t,e],r)},t.prototype.lchmodBase=function(t,e){t=this.openBase(t,D,0,!1);try{this.fchmodBase(t,e)}finally{this.closeSync(t)}},t.prototype.lchmodSync=function(t,e){e=E(e),t=y(t),this.lchmodBase(t,e)},t.prototype.lchmod=function(t,e,r){e=E(e),t=y(t),this.wrapAsync(this.lchmodBase,[t,e],r)},t.prototype.fchownBase=function(t,e,r){this.getFileByFdOrThrow(t,"fchown").chown(e,r)},t.prototype.fchownSync=function(t,e,r){R(e),T(r),this.fchownBase(t,e,r)},t.prototype.fchown=function(t,e,r,n){R(e),T(r),this.wrapAsync(this.fchownBase,[t,e,r],n)},t.prototype.chownBase=function(t,e,r){this.getResolvedLinkOrThrow(t,"chown").getNode().chown(e,r)},t.prototype.chownSync=function(t,e,r){R(e),T(r),this.chownBase(y(t),e,r)},t.prototype.chown=function(t,e,r,n){R(e),T(r),this.wrapAsync(this.chownBase,[y(t),e,r],n)},t.prototype.lchownBase=function(t,e,r){this.getLinkOrThrow(t,"lchown").getNode().chown(e,r)},t.prototype.lchownSync=function(t,e,r){R(e),T(r),this.lchownBase(y(t),e,r)},t.prototype.lchown=function(t,e,r,n){R(e),T(r),this.wrapAsync(this.lchownBase,[y(t),e,r],n)},t.prototype.watchFile=function(t,e,r){t=y(t);var n=e;if("function"==typeof n&&(r=e,n=null),"function"!=typeof r)throw Error('"watchFile()" requires a listener function');e=5007;var i=!0;return n&&"object"==typeof n&&("number"==typeof n.interval&&(e=n.interval),"boolean"==typeof n.persistent&&(i=n.persistent)),(n=this.statWatchers[t])||((n=new this.StatWatcher).start(t,i,e),this.statWatchers[t]=n),n.addListener("change",r),n},t.prototype.unwatchFile=function(t,e){t=y(t);var r=this.statWatchers[t];r&&("function"==typeof e?r.removeListener("change",e):r.removeAllListeners("change"),0===r.listenerCount("change")&&(r.stop(),delete this.statWatchers[t]))},t.prototype.createReadStream=function(t,e){return new this.ReadStream(t,e)},t.prototype.createWriteStream=function(t,e){return new this.WriteStream(t,e)},t.prototype.watch=function(t,e,r){t=y(t);var n=e;"function"==typeof e&&(r=e,n=null);var i=Z(n);e=i.persistent,n=i.recursive,i=i.encoding,void 0===e&&(e=!0),void 0===n&&(n=!1);var o=new this.FSWatcher;return o.start(t,e,n,i),r&&o.addListener("change",r),o},t.fd=2147483647,t}(),e.Volume=t;var yt,gt=function(t){function e(e){var r=t.call(this)||this;return r.onInterval=function(){try{var t=r.vol.statSync(r.filename);r.hasChanged(t)&&(r.emit("change",t,r.prev),r.prev=t)}finally{r.loop()}},r.vol=e,r}return B(e,t),e.prototype.loop=function(){this.timeoutRef=this.setTimeout(this.onInterval,this.interval)},e.prototype.hasChanged=function(t){return t.mtimeMs>this.prev.mtimeMs||t.nlink!==this.prev.nlink},e.prototype.start=function(t,e,r){void 0===e&&(e=!0),void 0===r&&(r=5007),this.filename=y(t),this.setTimeout=e?setTimeout:Le.default,this.interval=r,this.prev=this.vol.statSync(this.filename),this.loop()},e.prototype.stop=function(){clearTimeout(this.timeoutRef),Re.default.nextTick(A,this)},e}(Ae.EventEmitter);e.StatWatcher=gt,Ht.inherits(O,Er.Readable),e.ReadStream=O,O.prototype.open=function(){var t=this;this._vol.open(this.path,this.flags,this.mode,(function(e,r){e?(t.autoClose&&t.destroy&&t.destroy(),t.emit("error",e)):(t.fd=r,t.emit("open",r),t.read())}))},O.prototype._read=function(t){if("number"!=typeof this.fd)return this.once("open",(function(){this._read(t)}));if(!this.destroyed){(!yt||128>yt.length-yt.used)&&((yt=tt.bufferAllocUnsafe(this._readableState.highWaterMark)).used=0);var e=yt,r=Math.min(yt.length-yt.used,t),n=yt.used;if(void 0!==this.pos&&(r=Math.min(this.end-this.pos+1,r)),0>=r)return this.push(null);var i=this;this._vol.read(this.fd,yt,yt.used,r,this.pos,(function(t,r){t?(i.autoClose&&i.destroy&&i.destroy(),i.emit("error",t)):(t=null,0<r&&(i.bytesRead+=r,t=e.slice(n,n+r)),i.push(t))})),void 0!==this.pos&&(this.pos+=r),yt.used+=r}},O.prototype._destroy=function(t,e){this.close((function(r){e(t||r)}))},O.prototype.close=function(t){var e=this;if(t&&this.once("close",t),this.closed||"number"!=typeof this.fd)return"number"!=typeof this.fd?void this.once("open",I):Re.default.nextTick((function(){return e.emit("close")}));this.closed=!0,this._vol.close(this.fd,(function(t){t?e.emit("error",t):e.emit("close")})),this.fd=null},Ht.inherits(P,Er.Writable),e.WriteStream=P,P.prototype.open=function(){this._vol.open(this.path,this.flags,this.mode,function(t,e){t?(this.autoClose&&this.destroy&&this.destroy(),this.emit("error",t)):(this.fd=e,this.emit("open",e))}.bind(this))},P.prototype._write=function(t,e,r){if(!(t instanceof tt.Buffer))return this.emit("error",Error("Invalid data"));if("number"!=typeof this.fd)return this.once("open",(function(){this._write(t,e,r)}));var n=this;this._vol.write(this.fd,t,0,t.length,this.pos,(function(t,e){if(t)return n.autoClose&&n.destroy&&n.destroy(),r(t);n.bytesWritten+=e,r()})),void 0!==this.pos&&(this.pos+=t.length)},P.prototype._writev=function(t,e){if("number"!=typeof this.fd)return this.once("open",(function(){this._writev(t,e)}));for(var r=this,n=t.length,i=Array(n),o=0,s=0;s<n;s++){var a=t[s].chunk;i[s]=a,o+=a.length}n=tt.Buffer.concat(i),this._vol.write(this.fd,n,0,n.length,this.pos,(function(t,n){if(t)return r.destroy&&r.destroy(),e(t);r.bytesWritten+=n,e()})),void 0!==this.pos&&(this.pos+=o)},P.prototype._destroy=O.prototype._destroy,P.prototype.close=O.prototype.close,P.prototype.destroySoon=P.prototype.end;var mt=function(t){function e(e){var r=t.call(this)||this;return r._filename="",r._filenameEncoded="",r._recursive=!1,r._encoding=de.ENCODING_UTF8,r._onNodeChange=function(){r._emit("change")},r._onParentChild=function(t){t.getName()===r._getName()&&r._emit("rename")},r._emit=function(t){r.emit("change",t,r._filenameEncoded)},r._persist=function(){r._timer=setTimeout(r._persist,1e6)},r._vol=e,r}return B(e,t),e.prototype._getName=function(){return this._steps[this._steps.length-1]},e.prototype.start=function(t,e,r,n){void 0===e&&(e=!0),void 0===r&&(r=!1),void 0===n&&(n=de.ENCODING_UTF8),this._filename=y(t),this._steps=g(this._filename),this._filenameEncoded=de.strToEncoding(this._filename),this._recursive=r,this._encoding=n;try{this._link=this._vol.getLinkOrThrow(this._filename,"FSWatcher")}catch(t){throw(e=Error("watch "+this._filename+" "+t.code)).code=t.code,e.errno=t.code,e}this._link.getNode().on("change",this._onNodeChange),this._link.on("child:add",this._onNodeChange),this._link.on("child:delete",this._onNodeChange),(t=this._link.parent)&&(t.setMaxListeners(t.getMaxListeners()+1),t.on("child:delete",this._onParentChild)),e&&this._persist()},e.prototype.close=function(){clearTimeout(this._timer),this._link.getNode().removeListener("change",this._onNodeChange);var t=this._link.parent;t&&t.removeListener("child:delete",this._onParentChild)},e}(Ae.EventEmitter);e.FSWatcher=mt}));u(rn);var nn=rn.pathToFilename,on=rn.filenameToSteps,sn=rn.Volume,an=f((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.fsProps="constants F_OK R_OK W_OK X_OK Stats".split(" "),e.fsSyncMethods="renameSync ftruncateSync truncateSync chownSync fchownSync lchownSync chmodSync fchmodSync lchmodSync statSync lstatSync fstatSync linkSync symlinkSync readlinkSync realpathSync unlinkSync rmdirSync mkdirSync mkdirpSync readdirSync closeSync openSync utimesSync futimesSync fsyncSync writeSync readSync readFileSync writeFileSync appendFileSync existsSync accessSync fdatasyncSync mkdtempSync copyFileSync createReadStream createWriteStream".split(" "),e.fsAsyncMethods="rename ftruncate truncate chown fchown lchown chmod fchmod lchmod stat lstat fstat link symlink readlink realpath unlink rmdir mkdir mkdirp readdir close open utimes futimes fsync write read readFile writeFile appendFile exists access fdatasync mkdtemp copyFile watchFile unwatchFile watch".split(" ")}));u(an);var un=f((function(t,e){function r(t){for(var e={F_OK:s,R_OK:u,W_OK:f,X_OK:c,constants:h.constants,Stats:l.default,Dirent:ye.default},r=0,n=i;r<n.length;r++){var a=n[r];"function"==typeof t[a]&&(e[a]=t[a].bind(t))}for(r=0,n=o;r<n.length;r++)"function"==typeof t[a=n[r]]&&(e[a]=t[a].bind(t));return e.StatWatcher=t.StatWatcher,e.FSWatcher=t.FSWatcher,e.WriteStream=t.WriteStream,e.ReadStream=t.ReadStream,e.promises=t.promises,e._toUnixTimestamp=rn.toUnixTimestamp,e}var n=a&&a.__assign||function(){return(n=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var i=an.fsSyncMethods,o=an.fsAsyncMethods,s=h.constants.F_OK,u=h.constants.R_OK,f=h.constants.W_OK,c=h.constants.X_OK;e.Volume=rn.Volume,e.vol=new rn.Volume,e.createFsFromVolume=r,e.fs=r(e.vol),t.exports=n(n({},t.exports),e.fs),t.exports.semantic=!0}));u(un);var fn=un.createFsFromVolume;ke.prototype.emit=function(t){for(var e,r,n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];o=this.listeners(t);try{for(var a=i(o),u=a.next();!u.done;u=a.next()){var f=u.value;try{f.apply(void 0,s(n))}catch(t){console.error(t)}}}catch(t){e={error:t}}finally{try{u&&!u.done&&(r=a.return)&&r.call(a)}finally{if(e)throw e.error}}return 0<o.length};var hn=function(){function t(){this.volume=new sn,this.fs=fn(this.volume),this.fromJSON({"/dev/stdin":"","/dev/stdout":"","/dev/stderr":""})}return t.prototype._toJSON=function(t,e,r){void 0===e&&(e={});var n,i=!0;for(n in t.children){i=!1;var o=t.getChild(n);if(o){var s=o.getNode();s&&s.isFile()?(o=o.getPath(),r&&(o=ve(r,o)),e[o]=s.getBuffer()):s&&s.isDirectory()&&this._toJSON(o,e,r)}}return t=t.getPath(),r&&(t=ve(r,t)),t&&i&&(e[t]=null),e},t.prototype.toJSON=function(t,e,r){var n,o;void 0===e&&(e={}),void 0===r&&(r=!1);var s=[];if(t){t instanceof Array||(t=[t]);try{for(var a=i(t),u=a.next();!u.done;u=a.next()){var f=nn(u.value),h=this.volume.getResolvedLink(f);h&&s.push(h)}}catch(t){var c={error:t}}finally{try{u&&!u.done&&(n=a.return)&&n.call(a)}finally{if(c)throw c.error}}}else s.push(this.volume.root);if(!s.length)return e;try{for(var l=i(s),p=l.next();!p.done;p=l.next())h=p.value,this._toJSON(h,e,r?h.getPath():"")}catch(t){var d={error:t}}finally{try{p&&!p.done&&(o=l.return)&&o.call(l)}finally{if(d)throw d.error}}return e},t.prototype.fromJSONFixed=function(t,e){for(var r in e){var n=e[r];if(n?null!==Object.getPrototypeOf(n):null!==n){var i=on(r);1<i.length&&(i="/"+i.slice(0,i.length-1).join("/"),t.mkdirpBase(i,511)),t.writeFileSync(r,n||"")}else t.mkdirpBase(r,511)}},t.prototype.fromJSON=function(t){this.volume=new sn,this.fromJSONFixed(this.volume,t),this.fs=fn(this.volume),this.volume.releasedFds=[0,1,2],t=this.volume.openSync("/dev/stderr","w");var e=this.volume.openSync("/dev/stdout","w"),r=this.volume.openSync("/dev/stdin","r");if(2!==t)throw Error("invalid handle for stderr: "+t);if(1!==e)throw Error("invalid handle for stdout: "+e);if(0!==r)throw Error("invalid handle for stdin: "+r)},t.prototype.getStdOut=function(){return function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){t.done?i(t.value):new r((function(e){e(t.value)})).then(s,a)}u((n=n.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var t=this;return function(t,e){function r(t){return function(e){return n([t,e])}}function n(r){if(i)throw new TypeError("Generator is already executing.");for(;u;)try{if(i=1,o&&(s=2&r[0]?o.return:r[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,r[1])).done)return s;switch(o=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return u.label++,{value:r[1],done:!1};case 5:u.label++,o=r[1],r=[0];continue;case 7:r=u.ops.pop(),u.trys.pop();continue;default:if(!(s=u.trys,(s=0<s.length&&s[s.length-1])||6!==r[0]&&2!==r[0])){u=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3]))u.label=r[1];else if(6===r[0]&&u.label<s[1])u.label=s[1],s=r;else{if(!(s&&u.label<s[2])){s[2]&&u.ops.pop(),u.trys.pop();continue}u.label=s[2],u.ops.push(r)}}r=e.call(t,u)}catch(t){r=[6,t],o=0}finally{i=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}var i,o,s,a,u={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a}(this,(function(){return[2,new Promise((function(e){e(t.fs.readFileSync("/dev/stdout","utf8"))}))]}))}))},t}(),cn=hn}).call(this,r(0),r(4).setImmediate)},function(t,e,r){"use strict";r.r(e);var n=r(1),i=r(2);const o={macos:["macOS","https://github.com/swiftwasm/swift/releases"],linux:["Linux","https://github.com/swiftwasm/swift/releases"]};var s=null,a=null,u=null,f=null,h=null;function c(t){var e=document.getElementById("output-area");arguments.length>1&&(t=Array.prototype.slice.call(arguments).join(" ")),console.log(t),e&&(e.textContent+=t,e.scrollTop=e.scrollHeight)}async function l(){a.disabled=!0,f.style.display="none",u.textContent="Compiling...",h&&URL.revokeObjectURL(h);const t=s.value;try{const e=await async function(t){if(t.trim()==d.trim())return await async function(){const t=await fetch("/demo_compiled/program.wasm.txt");return{output:{success:!0,output:""},binary:await t.arrayBuffer()}}();const e=await fetch("https://us-central1-swiftwasm-zhuowei.cloudfunctions.net/compile/v1/compile",{method:"POST",body:JSON.stringify({src:t}),headers:{"Content-Type":"application/json"}});return function(t){const e=new TextDecoder("utf-8");let r=null;t.byteLength>=8&&(r=new Uint32Array(t.slice(0,8)));if(null==r||3737181904!=r[0])return{output:{success:!1,output:e.decode(t)}};const n=r[1],i=t.slice(8,8+n);let o={output:JSON.parse(e.decode(i))};8+n<t.byteLength&&(o.binary=t.slice(8+n));return o}(await e.arrayBuffer())}(t);!function(t){console.log(t);const e=t.output;if(u.textContent=e.output,f.style.display=e.success?"":"none",t.binary){const e=new Blob([t.binary],{type:"application/wasm"});h=URL.createObjectURL(e),f.href=h}}(e),e.output.success&&async function(t){window.wasi_wasm_buffer=t,c("Running WebAssembly...\n");const e=new i.a,r=new TextDecoder("utf-8");e.volume.fds[1].node.write=t=>(c(r.decode(t)),t.length),e.volume.fds[2].node.write=t=>{const e=r.decode(t);return console.error(e),stdoutBuffer.length};const o=new n.a({bindings:{...n.a.defaultBindings,fs:e.fs}});let s;const a={env:{executeScript:(t,e)=>{const n=new Uint8Array(s.exports.memory.buffer),i=r.decode(n.subarray(t,t+e));new Function(i)()}}},{instance:u}=await WebAssembly.instantiate(t,{wasi_snapshot_preview1:o.wasiImport,wasi_unstable:o.wasiImport,...a});s=u,o.start(u)}(e.binary)}catch(t){console.log(t)}a.disabled=!1}function p(t){if(9==t.keyCode){t.preventDefault();var e=s.selectionStart;return s.value=s.value.substring(0,e)+"    "+s.value.substring(s.selectionEnd),s.selectionStart=s.selectionEnd=e+4,!1}return!0}const d='import Glibc\n\nprint("Hello, 🌐!")\n\n// we can try loops and arithmetic:\n\nfunc fizzBuzz(from: Int, to: Int) {\n    for i in from...to {\n        if i % 15 == 0 {\n            print("FizzBuzz")\n        } else if i % 3 == 0 {\n            print("Fizz")\n        } else if i % 5 == 0 {\n            print("Buzz")\n        } else {\n            print(i)\n        }\n    }\n}\n\nfizzBuzz(from: 1, to: 20)\n\nfunc fib(n: Int) -> Int {\n    if n <= 0 { return 0 }\n    if n <= 2 { return 1 }\n    var a = 1;\n    var b = 1;\n    for _ in 3...n {\n        let newA = b\n        let newB = a + b\n        a = newA\n        b = newB\n    }\n    return b\n}\n\nprint("The 10th Fibonacci number is \\(fib(n: 10))")\n\n// we can also run JavaScript from Swift.\n\n@_silgen_name("executeScript")\nfunc executeScript(script: UnsafePointer<UInt8>, length: Int32)\n\n// Here\'s a string holding JavaScript code, with some string interpolation:\nvar scriptSrc = "alert(\'Hello from Swift! The 11th Fibonacci number is \\(fib(n: 11))\');"\n// and we can execute it.\nscriptSrc.withUTF8 { bufferPtr in\n   executeScript(script: bufferPtr.baseAddress!, length: Int32(bufferPtr.count))\n}\n';(s=document.getElementById("code-area")).disabled=!1,""==s.value&&(s.value=d),s.addEventListener("keydown",p),(a=document.getElementById("code-run")).addEventListener("click",l),u=document.getElementById("output-area"),f=document.getElementById("code-download-wasm"),function(){const t=document.getElementById("download-button"),e=function(){const t=navigator.userAgent;return-1!=t.indexOf("Mac OS X")?"macos":-1!=t.indexOf("Windows")?"windows":"linux"}(),r="windows"==e,n=r?"linux":e,i=r?"Windows":o[n][0],s=o[n][1];t.textContent="Download for "+i,t.href=s,r&&(document.getElementById("windows-wsl").textContent="Requires Windows Subsystem for Linux. ")}(),document.getElementById("emaillink").href="mailto:"+atob("aGVsbG9Ac3dpZnR3YXNtLm9yZw==")},function(t,e,r){(function(t){var n=void 0!==t&&t||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(i.call(setTimeout,n,arguments),clearTimeout)},e.setInterval=function(){return new o(i.call(setInterval,n,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(n,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},r(5),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,r(0))},function(t,e,r){(function(t,e){!function(t,r){"use strict";if(!t.setImmediate){var n,i,o,s,a,u=1,f={},h=!1,c=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,"[object process]"==={}.toString.call(t.process)?n=function(t){e.nextTick((function(){d(t)}))}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,r=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=r,e}}()?t.MessageChannel?((o=new MessageChannel).port1.onmessage=function(t){d(t.data)},n=function(t){o.port2.postMessage(t)}):c&&"onreadystatechange"in c.createElement("script")?(i=c.documentElement,n=function(t){var e=c.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):n=function(t){setTimeout(d,0,t)}:(s="setImmediate$"+Math.random()+"$",a=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(s)&&d(+e.data.slice(s.length))},t.addEventListener?t.addEventListener("message",a,!1):t.attachEvent("onmessage",a),n=function(e){t.postMessage(s+e,"*")}),l.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),r=0;r<e.length;r++)e[r]=arguments[r+1];var i={callback:t,args:e};return f[u]=i,n(u),u++},l.clearImmediate=p}function p(t){delete f[t]}function d(t){if(h)setTimeout(d,0,t);else{var e=f[t];if(e){h=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(void 0,r)}}(e)}finally{p(t),h=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,r(0),r(6))},function(t,e){var r,n,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(t){if(r===setTimeout)return setTimeout(t,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:o}catch(t){r=o}try{n="function"==typeof clearTimeout?clearTimeout:s}catch(t){n=s}}();var u,f=[],h=!1,c=-1;function l(){h&&u&&(h=!1,u.length?f=u.concat(f):c=-1,f.length&&p())}function p(){if(!h){var t=a(l);h=!0;for(var e=f.length;e;){for(u=f,f=[];++c<e;)u&&u[c].run();c=-1,e=f.length}u=null,h=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function y(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];f.push(new d(t,e)),1!==f.length||h||a(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=y,i.addListener=y,i.once=y,i.off=y,i.removeListener=y,i.removeAllListeners=y,i.emit=y,i.prependListener=y,i.prependOnceListener=y,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,